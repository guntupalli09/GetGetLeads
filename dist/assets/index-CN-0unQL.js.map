{"version":3,"file":"index-CN-0unQL.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../node_modules/goober/dist/goober.modern.js","../../node_modules/react-hot-toast/dist/index.mjs","../../src/lib/toast.ts","../../src/lib/supabase.ts","../../src/contexts/AuthContext.tsx","../../src/components/ErrorBoundary.tsx","../../src/hooks/useAuth.ts","../../src/pages/Login.tsx","../../src/pages/Signup.tsx","../../src/pages/Landing.tsx","../../src/hooks/useCustomers.ts","../../src/hooks/useAI.ts","../../src/components/AIFeatureIndicator.tsx","../../src/components/BackButton.tsx","../../src/components/LoadingSpinner.tsx","../../src/components/EmptyState.tsx","../../src/components/customers/CustomerProfile.tsx","../../src/components/customers/CustomerAnalytics.tsx","../../src/components/customers/CustomerSegments.tsx","../../src/components/customers/CustomerWorkflow.tsx","../../src/components/customers/CustomerFeedback.tsx","../../src/components/customers/CustomerImport.tsx","../../src/components/customers/CustomerLoyalty.tsx","../../src/components/CustomerManager.tsx","../../src/hooks/useContent.ts","../../src/components/ContentManager.tsx","../../src/hooks/useSocialAnalytics.ts","../../src/components/SocialAnalyticsDashboard.tsx","../../src/components/AnalyticsDashboard.tsx","../../src/hooks/useNotifications.ts","../../src/components/NotificationsPanel.tsx","../../src/hooks/useSettings.ts","../../src/components/UserSettings.tsx","../../src/pages/Dashboard.tsx","../../src/pages/AuthCallback.tsx","../../src/hooks/useSeoTracking.ts","../../src/hooks/useSeoEnhanced.ts","../../src/components/seo/SeoAudit.tsx","../../src/hooks/useSeoResearch.ts","../../src/components/seo/KeywordResearch.tsx","../../src/components/seo/TechnicalSeo.tsx","../../src/components/SeoTrackingManager.tsx","../../src/hooks/useEmailCampaigns.ts","../../src/hooks/useEmailAutomation.ts","../../src/components/email/EmailBuilder.tsx","../../src/components/email/EmailAnalytics.tsx","../../src/components/email/LeadManager.tsx","../../src/components/email/CampaignSuggestions.tsx","../../src/components/email/TemplateLibrary.tsx","../../src/components/EmailCampaignManager.tsx","../../src/hooks/useSocialMedia.ts","../../src/hooks/usePostAutomation.ts","../../src/lib/socialAuth.ts","../../src/components/SocialAccountConnect.tsx","../../src/components/SocialMediaDashboard.tsx","../../src/hooks/useBudget.ts","../../src/components/BudgetAnalytics.tsx","../../src/components/BudgetManager.tsx","../../src/components/AuthRequired.tsx","../../src/components/ErrorState.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","let e={data:\"\"},t=t=>\"object\"==typeof window?((t?t.querySelector(\"#_goober\"):window._goober)||Object.assign((t||document.head).appendChild(document.createElement(\"style\")),{innerHTML:\" \",id:\"_goober\"})).firstChild:t||e,r=e=>{let r=t(e),l=r.data;return r.data=\"\",l},l=/(?:([\\u0080-\\uFFFF\\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\\s*)/g,a=/\\/\\*[^]*?\\*\\/|  +/g,n=/\\n+/g,o=(e,t)=>{let r=\"\",l=\"\",a=\"\";for(let n in e){let c=e[n];\"@\"==n[0]?\"i\"==n[1]?r=n+\" \"+c+\";\":l+=\"f\"==n[1]?o(c,n):n+\"{\"+o(c,\"k\"==n[1]?\"\":t)+\"}\":\"object\"==typeof c?l+=o(c,t?t.replace(/([^,])+/g,e=>n.replace(/([^,]*:\\S+\\([^)]*\\))|([^,])+/g,t=>/&/.test(t)?t.replace(/&/g,e):e?e+\" \"+t:t)):n):null!=c&&(n=/^--/.test(n)?n:n.replace(/[A-Z]/g,\"-$&\").toLowerCase(),a+=o.p?o.p(n,c):n+\":\"+c+\";\")}return r+(t&&a?t+\"{\"+a+\"}\":a)+l},c={},s=e=>{if(\"object\"==typeof e){let t=\"\";for(let r in e)t+=r+s(e[r]);return t}return e},i=(e,t,r,i,p)=>{let u=s(e),d=c[u]||(c[u]=(e=>{let t=0,r=11;for(;t<e.length;)r=101*r+e.charCodeAt(t++)>>>0;return\"go\"+r})(u));if(!c[d]){let t=u!==e?e:(e=>{let t,r,o=[{}];for(;t=l.exec(e.replace(a,\"\"));)t[4]?o.shift():t[3]?(r=t[3].replace(n,\" \").trim(),o.unshift(o[0][r]=o[0][r]||{})):o[0][t[1]]=t[2].replace(n,\" \").trim();return o[0]})(e);c[d]=o(p?{[\"@keyframes \"+d]:t}:t,r?\"\":\".\"+d)}let f=r&&c.g?c.g:null;return r&&(c.g=c[d]),((e,t,r,l)=>{l?t.data=t.data.replace(l,e):-1===t.data.indexOf(e)&&(t.data=r?e+t.data:t.data+e)})(c[d],t,i,f),d},p=(e,t,r)=>e.reduce((e,l,a)=>{let n=t[a];if(n&&n.call){let e=n(r),t=e&&e.props&&e.props.className||/^go/.test(e)&&e;n=t?\".\"+t:e&&\"object\"==typeof e?e.props?\"\":o(e,\"\"):!1===e?\"\":e}return e+l+(null==n?\"\":n)},\"\");function u(e){let r=this||{},l=e.call?e(r.p):e;return i(l.unshift?l.raw?p(l,[].slice.call(arguments,1),r.p):l.reduce((e,t)=>Object.assign(e,t&&t.call?t(r.p):t),{}):l,t(r.target),r.g,r.o,r.k)}let d,f,g,b=u.bind({g:1}),h=u.bind({k:1});function m(e,t,r,l){o.p=t,d=e,f=r,g=l}function j(e,t){let r=this||{};return function(){let l=arguments;function a(n,o){let c=Object.assign({},n),s=c.className||a.className;r.p=Object.assign({theme:f&&f()},c),r.o=/ *go\\d+/.test(s),c.className=u.apply(r,l)+(s?\" \"+s:\"\"),t&&(c.ref=o);let i=e;return e[0]&&(i=c.as||e,delete c.as),g&&i[0]&&g(c),d(i,c)}return t?t(a):a}}export{u as css,r as extractCss,b as glob,h as keyframes,m as setup,j as styled};\n","\"use client\";\nvar W=e=>typeof e==\"function\",f=(e,t)=>W(e)?e(t):e;var F=(()=>{let e=0;return()=>(++e).toString()})(),S=(()=>{let e;return()=>{if(e===void 0&&typeof window<\"u\"){let t=matchMedia(\"(prefers-reduced-motion: reduce)\");e=!t||t.matches}return e}})();import{useEffect as H,useState as j}from\"react\";var J=20;var U=(e,t)=>{switch(t.type){case 0:return{...e,toasts:[t.toast,...e.toasts].slice(0,J)};case 1:return{...e,toasts:e.toasts.map(r=>r.id===t.toast.id?{...r,...t.toast}:r)};case 2:let{toast:o}=t;return U(e,{type:e.toasts.find(r=>r.id===o.id)?1:0,toast:o});case 3:let{toastId:a}=t;return{...e,toasts:e.toasts.map(r=>r.id===a||a===void 0?{...r,dismissed:!0,visible:!1}:r)};case 4:return t.toastId===void 0?{...e,toasts:[]}:{...e,toasts:e.toasts.filter(r=>r.id!==t.toastId)};case 5:return{...e,pausedAt:t.time};case 6:let s=t.time-(e.pausedAt||0);return{...e,pausedAt:void 0,toasts:e.toasts.map(r=>({...r,pauseDuration:r.pauseDuration+s}))}}},A=[],P={toasts:[],pausedAt:void 0},u=e=>{P=U(P,e),A.forEach(t=>{t(P)})},Q={blank:4e3,error:4e3,success:2e3,loading:1/0,custom:4e3},D=(e={})=>{let[t,o]=j(P);H(()=>(A.push(o),()=>{let s=A.indexOf(o);s>-1&&A.splice(s,1)}),[t]);let a=t.toasts.map(s=>{var r,n,i;return{...e,...e[s.type],...s,removeDelay:s.removeDelay||((r=e[s.type])==null?void 0:r.removeDelay)||(e==null?void 0:e.removeDelay),duration:s.duration||((n=e[s.type])==null?void 0:n.duration)||(e==null?void 0:e.duration)||Q[s.type],style:{...e.style,...(i=e[s.type])==null?void 0:i.style,...s.style}}});return{...t,toasts:a}};var Y=(e,t=\"blank\",o)=>({createdAt:Date.now(),visible:!0,dismissed:!1,type:t,ariaProps:{role:\"status\",\"aria-live\":\"polite\"},message:e,pauseDuration:0,...o,id:(o==null?void 0:o.id)||F()}),h=e=>(t,o)=>{let a=Y(t,e,o);return u({type:2,toast:a}),a.id},c=(e,t)=>h(\"blank\")(e,t);c.error=h(\"error\");c.success=h(\"success\");c.loading=h(\"loading\");c.custom=h(\"custom\");c.dismiss=e=>{u({type:3,toastId:e})};c.remove=e=>u({type:4,toastId:e});c.promise=(e,t,o)=>{let a=c.loading(t.loading,{...o,...o==null?void 0:o.loading});return typeof e==\"function\"&&(e=e()),e.then(s=>{let r=t.success?f(t.success,s):void 0;return r?c.success(r,{id:a,...o,...o==null?void 0:o.success}):c.dismiss(a),s}).catch(s=>{let r=t.error?f(t.error,s):void 0;r?c.error(r,{id:a,...o,...o==null?void 0:o.error}):c.dismiss(a)}),e};import{useEffect as $,useCallback as L}from\"react\";var q=(e,t)=>{u({type:1,toast:{id:e,height:t}})},G=()=>{u({type:5,time:Date.now()})},x=new Map,K=1e3,Z=(e,t=K)=>{if(x.has(e))return;let o=setTimeout(()=>{x.delete(e),u({type:4,toastId:e})},t);x.set(e,o)},O=e=>{let{toasts:t,pausedAt:o}=D(e);$(()=>{if(o)return;let r=Date.now(),n=t.map(i=>{if(i.duration===1/0)return;let d=(i.duration||0)+i.pauseDuration-(r-i.createdAt);if(d<0){i.visible&&c.dismiss(i.id);return}return setTimeout(()=>c.dismiss(i.id),d)});return()=>{n.forEach(i=>i&&clearTimeout(i))}},[t,o]);let a=L(()=>{o&&u({type:6,time:Date.now()})},[o]),s=L((r,n)=>{let{reverseOrder:i=!1,gutter:d=8,defaultPosition:p}=n||{},g=t.filter(m=>(m.position||p)===(r.position||p)&&m.height),E=g.findIndex(m=>m.id===r.id),b=g.filter((m,R)=>R<E&&m.visible).length;return g.filter(m=>m.visible).slice(...i?[b+1]:[0,b]).reduce((m,R)=>m+(R.height||0)+d,0)},[t]);return $(()=>{t.forEach(r=>{if(r.dismissed)Z(r.id,r.removeDelay);else{let n=x.get(r.id);n&&(clearTimeout(n),x.delete(r.id))}})},[t]),{toasts:t,handlers:{updateHeight:q,startPause:G,endPause:a,calculateOffset:s}}};import*as l from\"react\";import{styled as B,keyframes as z}from\"goober\";import*as y from\"react\";import{styled as w,keyframes as de}from\"goober\";import{styled as ee,keyframes as I}from\"goober\";var te=I`\nfrom {\n  transform: scale(0) rotate(45deg);\n\topacity: 0;\n}\nto {\n transform: scale(1) rotate(45deg);\n  opacity: 1;\n}`,oe=I`\nfrom {\n  transform: scale(0);\n  opacity: 0;\n}\nto {\n  transform: scale(1);\n  opacity: 1;\n}`,re=I`\nfrom {\n  transform: scale(0) rotate(90deg);\n\topacity: 0;\n}\nto {\n  transform: scale(1) rotate(90deg);\n\topacity: 1;\n}`,k=ee(\"div\")`\n  width: 20px;\n  opacity: 0;\n  height: 20px;\n  border-radius: 10px;\n  background: ${e=>e.primary||\"#ff4b4b\"};\n  position: relative;\n  transform: rotate(45deg);\n\n  animation: ${te} 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n  animation-delay: 100ms;\n\n  &:after,\n  &:before {\n    content: '';\n    animation: ${oe} 0.15s ease-out forwards;\n    animation-delay: 150ms;\n    position: absolute;\n    border-radius: 3px;\n    opacity: 0;\n    background: ${e=>e.secondary||\"#fff\"};\n    bottom: 9px;\n    left: 4px;\n    height: 2px;\n    width: 12px;\n  }\n\n  &:before {\n    animation: ${re} 0.15s ease-out forwards;\n    animation-delay: 180ms;\n    transform: rotate(90deg);\n  }\n`;import{styled as se,keyframes as ae}from\"goober\";var ie=ae`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`,V=se(\"div\")`\n  width: 12px;\n  height: 12px;\n  box-sizing: border-box;\n  border: 2px solid;\n  border-radius: 100%;\n  border-color: ${e=>e.secondary||\"#e0e0e0\"};\n  border-right-color: ${e=>e.primary||\"#616161\"};\n  animation: ${ie} 1s linear infinite;\n`;import{styled as ne,keyframes as N}from\"goober\";var ce=N`\nfrom {\n  transform: scale(0) rotate(45deg);\n\topacity: 0;\n}\nto {\n  transform: scale(1) rotate(45deg);\n\topacity: 1;\n}`,pe=N`\n0% {\n\theight: 0;\n\twidth: 0;\n\topacity: 0;\n}\n40% {\n  height: 0;\n\twidth: 6px;\n\topacity: 1;\n}\n100% {\n  opacity: 1;\n  height: 10px;\n}`,_=ne(\"div\")`\n  width: 20px;\n  opacity: 0;\n  height: 20px;\n  border-radius: 10px;\n  background: ${e=>e.primary||\"#61d345\"};\n  position: relative;\n  transform: rotate(45deg);\n\n  animation: ${ce} 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n  animation-delay: 100ms;\n  &:after {\n    content: '';\n    box-sizing: border-box;\n    animation: ${pe} 0.2s ease-out forwards;\n    opacity: 0;\n    animation-delay: 200ms;\n    position: absolute;\n    border-right: 2px solid;\n    border-bottom: 2px solid;\n    border-color: ${e=>e.secondary||\"#fff\"};\n    bottom: 6px;\n    left: 6px;\n    height: 10px;\n    width: 6px;\n  }\n`;var me=w(\"div\")`\n  position: absolute;\n`,ue=w(\"div\")`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 20px;\n  min-height: 20px;\n`,le=de`\nfrom {\n  transform: scale(0.6);\n  opacity: 0.4;\n}\nto {\n  transform: scale(1);\n  opacity: 1;\n}`,fe=w(\"div\")`\n  position: relative;\n  transform: scale(0.6);\n  opacity: 0.4;\n  min-width: 20px;\n  animation: ${le} 0.3s 0.12s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n`,M=({toast:e})=>{let{icon:t,type:o,iconTheme:a}=e;return t!==void 0?typeof t==\"string\"?y.createElement(fe,null,t):t:o===\"blank\"?null:y.createElement(ue,null,y.createElement(V,{...a}),o!==\"loading\"&&y.createElement(me,null,o===\"error\"?y.createElement(k,{...a}):y.createElement(_,{...a})))};var Te=e=>`\n0% {transform: translate3d(0,${e*-200}%,0) scale(.6); opacity:.5;}\n100% {transform: translate3d(0,0,0) scale(1); opacity:1;}\n`,ye=e=>`\n0% {transform: translate3d(0,0,-1px) scale(1); opacity:1;}\n100% {transform: translate3d(0,${e*-150}%,-1px) scale(.6); opacity:0;}\n`,ge=\"0%{opacity:0;} 100%{opacity:1;}\",he=\"0%{opacity:1;} 100%{opacity:0;}\",xe=B(\"div\")`\n  display: flex;\n  align-items: center;\n  background: #fff;\n  color: #363636;\n  line-height: 1.3;\n  will-change: transform;\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1), 0 3px 3px rgba(0, 0, 0, 0.05);\n  max-width: 350px;\n  pointer-events: auto;\n  padding: 8px 10px;\n  border-radius: 8px;\n`,be=B(\"div\")`\n  display: flex;\n  justify-content: center;\n  margin: 4px 10px;\n  color: inherit;\n  flex: 1 1 auto;\n  white-space: pre-line;\n`,Se=(e,t)=>{let a=e.includes(\"top\")?1:-1,[s,r]=S()?[ge,he]:[Te(a),ye(a)];return{animation:t?`${z(s)} 0.35s cubic-bezier(.21,1.02,.73,1) forwards`:`${z(r)} 0.4s forwards cubic-bezier(.06,.71,.55,1)`}},C=l.memo(({toast:e,position:t,style:o,children:a})=>{let s=e.height?Se(e.position||t||\"top-center\",e.visible):{opacity:0},r=l.createElement(M,{toast:e}),n=l.createElement(be,{...e.ariaProps},f(e.message,e));return l.createElement(xe,{className:e.className,style:{...s,...o,...e.style}},typeof a==\"function\"?a({icon:r,message:n}):l.createElement(l.Fragment,null,r,n))});import{css as Ae,setup as Pe}from\"goober\";import*as T from\"react\";Pe(T.createElement);var ve=({id:e,className:t,style:o,onHeightUpdate:a,children:s})=>{let r=T.useCallback(n=>{if(n){let i=()=>{let d=n.getBoundingClientRect().height;a(e,d)};i(),new MutationObserver(i).observe(n,{subtree:!0,childList:!0,characterData:!0})}},[e,a]);return T.createElement(\"div\",{ref:r,className:t,style:o},s)},Ee=(e,t)=>{let o=e.includes(\"top\"),a=o?{top:0}:{bottom:0},s=e.includes(\"center\")?{justifyContent:\"center\"}:e.includes(\"right\")?{justifyContent:\"flex-end\"}:{};return{left:0,right:0,display:\"flex\",position:\"absolute\",transition:S()?void 0:\"all 230ms cubic-bezier(.21,1.02,.73,1)\",transform:`translateY(${t*(o?1:-1)}px)`,...a,...s}},Re=Ae`\n  z-index: 9999;\n  > * {\n    pointer-events: auto;\n  }\n`,v=16,De=({reverseOrder:e,position:t=\"top-center\",toastOptions:o,gutter:a,children:s,containerStyle:r,containerClassName:n})=>{let{toasts:i,handlers:d}=O(o);return T.createElement(\"div\",{id:\"_rht_toaster\",style:{position:\"fixed\",zIndex:9999,top:v,left:v,right:v,bottom:v,pointerEvents:\"none\",...r},className:n,onMouseEnter:d.startPause,onMouseLeave:d.endPause},i.map(p=>{let g=p.position||t,E=d.calculateOffset(p,{reverseOrder:e,gutter:a,defaultPosition:t}),b=Ee(g,E);return T.createElement(ve,{id:p.id,key:p.id,onHeightUpdate:d.updateHeight,className:p.visible?Re:\"\",style:b},p.type===\"custom\"?f(p.message,p):s?s(p):T.createElement(C,{toast:p,position:g}))}))};var kt=c;export{_ as CheckmarkIcon,k as ErrorIcon,V as LoaderIcon,C as ToastBar,M as ToastIcon,De as Toaster,kt as default,f as resolveValue,c as toast,O as useToaster,D as useToasterStore};\n//# sourceMappingURL=index.mjs.map","import toast from 'react-hot-toast';\n\nexport const showSuccess = (message: string) => {\n  toast.success(message, {\n    style: {\n      background: '#1e293b',\n      color: '#fff',\n      borderRadius: '0.5rem',\n      border: '1px solid rgba(74, 222, 128, 0.2)',\n    },\n  });\n};\n\nexport const showError = (message: string) => {\n  toast.error(message, {\n    style: {\n      background: '#1e293b',\n      color: '#fff',\n      borderRadius: '0.5rem',\n      border: '1px solid rgba(239, 68, 68, 0.2)',\n    },\n  });\n};\n\nexport const showInfo = (message: string) => {\n  toast(message, {\n    style: {\n      background: '#1e293b',\n      color: '#fff',\n      borderRadius: '0.5rem',\n      border: '1px solid rgba(59, 130, 246, 0.2)',\n    },\n  });\n};","import { createClient } from '@supabase/supabase-js';\nimport type { Database } from '../types/database';\nimport { showError, showSuccess } from './toast';\n\nconst supabaseUrl = import.meta.env.VITE_SUPABASE_URL;\nconst supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY;\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  console.warn('Missing Supabase environment variables');\n}\n\nexport const supabase = createClient<Database>(\n  supabaseUrl || '',\n  supabaseAnonKey || '',\n  {\n    auth: {\n      autoRefreshToken: true,\n      persistSession: true,\n      detectSessionInUrl: true,\n      storage: typeof window !== 'undefined' ? window.localStorage : undefined\n    },\n    global: {\n      headers: {\n        'X-Client-Info': 'getgetleads-web'\n      }\n    }\n  }\n);\n\n// Retry configuration\nconst MAX_RETRIES = 3;\nconst INITIAL_BACKOFF = 1000; // 1 second\n\n// Helper to determine if an error is retryable\nfunction isRetryableError(error: any): boolean {\n  const retryableErrors = [\n    'AuthRetryableFetchError',\n    'FetchError',\n    'TimeoutError',\n    'NetworkError',\n    'AbortError'\n  ];\n\n  return (\n    error instanceof Error && (\n      retryableErrors.some(code => error.message.includes(code)) ||\n      error.message.includes('Failed to fetch') ||\n      error.message.includes('network') ||\n      error.message.includes('timeout') ||\n      error.message.includes('connection')\n    )\n  );\n}\n\n// Enhanced retry helper with exponential backoff\nexport async function retryOperation<T>(\n  operation: () => Promise<T>,\n  retries = MAX_RETRIES,\n  backoff = INITIAL_BACKOFF\n): Promise<T> {\n  try {\n    return await operation();\n  } catch (error) {\n    if (retries > 0 && isRetryableError(error)) {\n      await new Promise(resolve => setTimeout(resolve, backoff));\n      return retryOperation(operation, retries - 1, backoff * 2);\n    }\n    throw error;\n  }\n}\n\n// Auth state change handler\nsupabase.auth.onAuthStateChange((event, session) => {\n  if (event === 'SIGNED_OUT') {\n    localStorage.removeItem('supabase.auth.token');\n    showSuccess('Successfully signed out');\n  } else if (event === 'SIGNED_IN') {\n    showSuccess('Successfully signed in');\n  } else if (event === 'TOKEN_REFRESHED') {\n    console.log('Auth token refreshed');\n  } else if (event === 'USER_UPDATED') {\n    showSuccess('Profile updated successfully');\n  }\n});\n\n// Network status monitoring\nlet isOnline = true;\nwindow.addEventListener('online', () => {\n  isOnline = true;\n  showSuccess('Back online');\n});\n\nwindow.addEventListener('offline', () => {\n  isOnline = false;\n  showError('You are offline. Please check your internet connection.');\n});\n\nexport function checkConnection() {\n  return isOnline;\n}","import { createContext, useContext, useEffect, useState } from 'react';\nimport { User, Session } from '@supabase/supabase-js';\nimport { supabase } from '../lib/supabase';\nimport { showError, showSuccess } from '../lib/toast';\n\ninterface AuthContextType {\n  user: User | null;\n  session: Session | null;\n  loading: boolean;\n  signIn: (email: string, password: string) => Promise<void>;\n  signUp: (email: string, password: string) => Promise<void>;\n  signOut: () => Promise<void>;\n}\n\nexport const AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  const [user, setUser] = useState<User | null>(null);\n  const [session, setSession] = useState<Session | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    let mounted = true;\n\n    async function initializeAuth() {\n      try {\n        const { data: { session } } = await supabase.auth.getSession();\n        if (mounted) {\n          setSession(session);\n          setUser(session?.user ?? null);\n        }\n      } catch (error) {\n        console.error('Error checking auth session:', error);\n      } finally {\n        if (mounted) {\n          setLoading(false);\n        }\n      }\n    }\n\n    initializeAuth();\n\n    const { data: { subscription } } = supabase.auth.onAuthStateChange((_event, session) => {\n      if (mounted) {\n        setSession(session);\n        setUser(session?.user ?? null);\n        setLoading(false);\n      }\n    });\n\n    return () => {\n      mounted = false;\n      subscription.unsubscribe();\n    };\n  }, []);\n\n  const signIn = async (email: string, password: string) => {\n    try {\n      // Convert email to lowercase for case-insensitive comparison\n      const normalizedEmail = email.toLowerCase();\n      const { error } = await supabase.auth.signInWithPassword({\n        email: normalizedEmail,\n        password\n      });\n      if (error) throw error;\n      showSuccess('Successfully signed in');\n    } catch (error) {\n      console.error('Sign in error:', error);\n      showError(error instanceof Error ? error.message : 'Failed to sign in');\n      throw error;\n    }\n  };\n\n  const signUp = async (email: string, password: string) => {\n    try {\n      // Convert email to lowercase for case-insensitive comparison\n      const normalizedEmail = email.toLowerCase();\n\n      // Check if user already exists\n      const { data: existingUser } = await supabase\n        .from('users')\n        .select('id')\n        .eq('email', normalizedEmail)\n        .single();\n\n      if (existingUser) {\n        showError('An account with this email already exists');\n        throw new Error('Account already exists');\n      }\n\n      const { error } = await supabase.auth.signUp({\n        email: normalizedEmail,\n        password,\n        options: {\n          emailRedirectTo: `${window.location.origin}/auth/callback`\n        }\n      });\n      if (error) throw error;\n      showSuccess('Account created successfully');\n    } catch (error) {\n      console.error('Sign up error:', error);\n      showError(error instanceof Error ? error.message : 'Failed to create account');\n      throw error;\n    }\n  };\n\n  const signOut = async () => {\n    try {\n      const { error } = await supabase.auth.signOut();\n      if (error) throw error;\n      showSuccess('Successfully signed out');\n    } catch (error) {\n      console.error('Sign out error:', error);\n      showError(error instanceof Error ? error.message : 'Failed to sign out');\n      throw error;\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, session, loading, signIn, signUp, signOut }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}","import { Component, ErrorInfo, ReactNode } from 'react';\nimport { AlertTriangle } from 'lucide-react';\n\ninterface Props {\n  children: ReactNode;\n  fallback?: ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n  error: Error | null;\n}\n\nexport class ErrorBoundary extends Component<Props, State> {\n  public state: State = {\n    hasError: false,\n    error: null\n  };\n\n  public static getDerivedStateFromError(error: Error): State {\n    return { hasError: true, error };\n  }\n\n  public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error('Uncaught error:', error, errorInfo);\n  }\n\n  public render() {\n    if (this.state.hasError) {\n      return this.props.fallback || (\n        <div className=\"min-h-[400px] flex items-center justify-center\">\n          <div className=\"text-center\">\n            <AlertTriangle className=\"w-12 h-12 text-red-500 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-white mb-2\">Something went wrong</h3>\n            <p className=\"text-primary-300 mb-4 max-w-md\">\n              {this.state.error?.message || 'An unexpected error occurred'}\n            </p>\n            <button\n              onClick={() => window.location.reload()}\n              className=\"btn-primary\"\n            >\n              Refresh Page\n            </button>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}","import { useContext } from 'react';\nimport { AuthContext } from '../contexts/AuthContext';\nimport { retryOperation } from '../lib/supabase';\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n\n  // Wrap auth operations with retry logic\n  const enhancedContext = {\n    ...context,\n    signIn: async (email: string, password: string) => {\n      return retryOperation(() => context.signIn(email, password));\n    },\n    signUp: async (email: string, password: string) => {\n      return retryOperation(() => context.signUp(email, password));\n    }\n  };\n\n  return enhancedContext;\n}","import React, { useState } from 'react';\nimport { useAuth } from '../hooks/useAuth';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Zap } from 'lucide-react';\n\nexport function Login() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const { signIn } = useAuth();\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      setError('');\n      setLoading(true);\n      await signIn(email, password);\n      navigate('/dashboard');\n    } catch (err) {\n      setError('Failed to sign in');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-primary-800 px-4\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div className=\"text-center\">\n          <div className=\"flex justify-center\">\n            <Zap className=\"h-12 w-12 text-accent-500\" />\n          </div>\n          <h2 className=\"mt-6 text-3xl font-bold text-white\">Sign in to your account</h2>\n          <p className=\"mt-2 text-sm text-primary-300\">\n            Or{' '}\n            <Link to=\"/signup\" className=\"font-medium text-accent-500 hover:text-accent-400\">\n              create a new account\n            </Link>\n          </p>\n        </div>\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n          {error && (\n            <div className=\"bg-red-500/10 border border-red-500/50 text-red-500 rounded-lg p-4 text-sm\">\n              {error}\n            </div>\n          )}\n          <div className=\"space-y-4\">\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-primary-200\">\n                Email address\n              </label>\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                required\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                className=\"mt-1 block w-full rounded-lg bg-primary-700 border-primary-600 text-white px-4 py-2\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-primary-200\">\n                Password\n              </label>\n              <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                required\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                className=\"mt-1 block w-full rounded-lg bg-primary-700 border-primary-600 text-white px-4 py-2\"\n              />\n            </div>\n          </div>\n\n          <button\n            type=\"submit\"\n            disabled={loading}\n            className=\"w-full btn-primary disabled:opacity-50\"\n          >\n            {loading ? 'Signing in...' : 'Sign in'}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport { useAuth } from '../hooks/useAuth';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Zap } from 'lucide-react';\n\nexport function Signup() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const { signUp } = useAuth();\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      setError('');\n      setLoading(true);\n      await signUp(email, password);\n      navigate('/dashboard');\n    } catch (err) {\n      setError('Failed to create an account');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-primary-800 px-4\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div className=\"text-center\">\n          <div className=\"flex justify-center\">\n            <Zap className=\"h-12 w-12 text-accent-500\" />\n          </div>\n          <h2 className=\"mt-6 text-3xl font-bold text-white\">Create your account</h2>\n          <p className=\"mt-2 text-sm text-primary-300\">\n            Or{' '}\n            <Link to=\"/login\" className=\"font-medium text-accent-500 hover:text-accent-400\">\n              sign in to your account\n            </Link>\n          </p>\n        </div>\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n          {error && (\n            <div className=\"bg-red-500/10 border border-red-500/50 text-red-500 rounded-lg p-4 text-sm\">\n              {error}\n            </div>\n          )}\n          <div className=\"space-y-4\">\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-primary-200\">\n                Email address\n              </label>\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                required\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                className=\"mt-1 block w-full rounded-lg bg-primary-700 border-primary-600 text-white px-4 py-2\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-primary-200\">\n                Password\n              </label>\n              <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                required\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                className=\"mt-1 block w-full rounded-lg bg-primary-700 border-primary-600 text-white px-4 py-2\"\n              />\n            </div>\n          </div>\n\n          <button\n            type=\"submit\"\n            disabled={loading}\n            className=\"w-full btn-primary disabled:opacity-50\"\n          >\n            {loading ? 'Creating account...' : 'Create account'}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}","import { Link } from 'react-router-dom';\nimport { Zap, BarChart3, Users, FileText, Share2, Search, Mail, ArrowRight } from 'lucide-react';\n\nexport function Landing() {\n  return (\n    <div className=\"min-h-screen bg-primary-800\">\n      {/* Navigation */}\n      <nav className=\"bg-primary-900/50 border-b border-primary-700\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            <div className=\"flex items-center\">\n              <Zap className=\"h-8 w-8 text-accent-500\" />\n              <span className=\"ml-2 text-xl font-bold text-white\">GetGetLeads</span>\n            </div>\n            <div className=\"flex items-center gap-4\">\n              <Link\n                to=\"/login\"\n                className=\"text-primary-300 hover:text-white transition-colors\"\n              >\n                Sign In\n              </Link>\n              <Link\n                to=\"/signup\"\n                className=\"btn-primary py-2 px-4\"\n              >\n                Get Started\n              </Link>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n      {/* Hero Section */}\n      <div className=\"relative overflow-hidden pt-16 pb-32\">\n        <div className=\"relative\">\n          <div className=\"lg:mx-auto lg:grid lg:max-w-7xl lg:grid-flow-col-dense lg:grid-cols-2 lg:gap-24 lg:px-8\">\n            <div className=\"mx-auto max-w-xl px-6 lg:mx-0 lg:max-w-none lg:py-16 lg:px-0\">\n              <div>\n                <div>\n                  <h1 className=\"text-4xl font-bold tracking-tight text-white sm:text-6xl\">\n                    AI-Powered Marketing Made Simple\n                  </h1>\n                  <p className=\"mt-6 text-lg leading-8 text-primary-300\">\n                    Create engaging content, automate your marketing tasks, and drive better results with our intuitive AI marketing platform.\n                  </p>\n                  <div className=\"mt-10 flex items-center gap-x-6\">\n                    <Link\n                      to=\"/signup\"\n                      className=\"btn-primary py-3 px-8\"\n                    >\n                      Start Free Trial\n                    </Link>\n                    <Link\n                      to=\"#features\"\n                      className=\"text-sm font-semibold leading-6 text-white flex items-center gap-2\"\n                    >\n                      Watch Demo <ArrowRight className=\"w-4 h-4\" />\n                    </Link>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Features Section */}\n      <div id=\"features\" className=\"py-24 sm:py-32\">\n        <div className=\"mx-auto max-w-7xl px-6 lg:px-8\">\n          <div className=\"mx-auto max-w-2xl lg:text-center\">\n            <h2 className=\"text-base font-semibold leading-7 text-accent-500\">Features Overview</h2>\n            <p className=\"mt-2 text-3xl font-bold tracking-tight text-white sm:text-4xl\">\n              Everything you need to supercharge your marketing\n            </p>\n          </div>\n\n          <div className=\"mx-auto mt-16 max-w-2xl sm:mt-20 lg:mt-24 lg:max-w-none\">\n            <dl className=\"grid max-w-xl grid-cols-1 gap-x-8 gap-y-16 lg:max-w-none lg:grid-cols-4\">\n              <div className=\"flex flex-col\">\n                <dt className=\"flex items-center gap-x-3 text-lg font-semibold leading-7 text-white\">\n                  <BarChart3 className=\"h-5 w-5 flex-none text-accent-500\" />\n                  All-in-One Dashboard\n                </dt>\n                <dd className=\"mt-4 flex flex-auto flex-col text-base leading-7 text-primary-300\">\n                  <p className=\"flex-auto\">\n                    Manage all your marketing activities from a single, intuitive dashboard.\n                  </p>\n                </dd>\n              </div>\n\n              <div className=\"flex flex-col\">\n                <dt className=\"flex items-center gap-x-3 text-lg font-semibold leading-7 text-white\">\n                  <FileText className=\"h-5 w-5 flex-none text-accent-500\" />\n                  Content Management\n                </dt>\n                <dd className=\"mt-4 flex flex-auto flex-col text-base leading-7 text-primary-300\">\n                  <p className=\"flex-auto\">\n                    Create, schedule, and manage your content across all platforms.\n                  </p>\n                </dd>\n              </div>\n\n              <div className=\"flex flex-col\">\n                <dt className=\"flex items-center gap-x-3 text-lg font-semibold leading-7 text-white\">\n                  <Users className=\"h-5 w-5 flex-none text-accent-500\" />\n                  Customer Management\n                </dt>\n                <dd className=\"mt-4 flex flex-auto flex-col text-base leading-7 text-primary-300\">\n                  <p className=\"flex-auto\">\n                    Track and manage your leads, customers, and interactions.\n                  </p>\n                </dd>\n              </div>\n\n              <div className=\"flex flex-col\">\n                <dt className=\"flex items-center gap-x-3 text-lg font-semibold leading-7 text-white\">\n                  <Share2 className=\"h-5 w-5 flex-none text-accent-500\" />\n                  Social Media Tools\n                </dt>\n                <dd className=\"mt-4 flex flex-auto flex-col text-base leading-7 text-primary-300\">\n                  <p className=\"flex-auto\">\n                    Schedule posts, analyze performance, and grow your social presence.\n                  </p>\n                </dd>\n              </div>\n            </dl>\n          </div>\n        </div>\n      </div>\n\n      {/* CTA Section */}\n      <div className=\"relative isolate mt-32 px-6 py-32 sm:mt-56 sm:py-40 lg:px-8\">\n        <div className=\"mx-auto max-w-2xl text-center\">\n          <h2 className=\"text-3xl font-bold tracking-tight text-white sm:text-4xl\">\n            Ready to transform your marketing?\n          </h2>\n          <p className=\"mx-auto mt-6 max-w-xl text-lg leading-8 text-primary-300\">\n            Join thousands of marketers who are already using GetGetLeads to streamline their marketing efforts.\n          </p>\n          <div className=\"mt-10 flex items-center justify-center gap-x-6\">\n            <Link\n              to=\"/signup\"\n              className=\"btn-primary py-3 px-8\"\n            >\n              Get Started\n            </Link>\n            <Link\n              to=\"/pricing\"\n              className=\"text-sm font-semibold leading-6 text-white\"\n            >\n              View pricing <span aria-hidden=\"true\">→</span>\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      {/* Footer */}\n      <footer className=\"bg-primary-900/50 border-t border-primary-700\">\n        <div className=\"mx-auto max-w-7xl px-6 py-12 md:flex md:items-center md:justify-between lg:px-8\">\n          <div className=\"flex justify-center space-x-6 md:order-2\">\n            <Link to=\"#\" className=\"text-primary-300 hover:text-white\">\n              Terms\n            </Link>\n            <Link to=\"#\" className=\"text-primary-300 hover:text-white\">\n              Privacy\n            </Link>\n            <Link to=\"#\" className=\"text-primary-300 hover:text-white\">\n              Contact\n            </Link>\n          </div>\n          <div className=\"mt-8 md:order-1 md:mt-0\">\n            <p className=\"text-center text-xs leading-5 text-primary-300\">\n              &copy; 2024 GetGetLeads. All rights reserved.\n            </p>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n}","import { useState, useEffect } from 'react';\nimport { supabase } from '../lib/supabase';\nimport { useAuth } from './useAuth';\nimport { showError, showSuccess } from '../lib/toast';\nimport type { Customer } from '../types/database';\n\nexport function useCustomers() {\n  const { user } = useAuth();\n  const [customers, setCustomers] = useState<Customer[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!user) return;\n    loadCustomers();\n  }, [user]);\n\n  const loadCustomers = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const { data, error: fetchError } = await supabase\n        .from('customers')\n        .select('*')\n        .eq('user_id', user?.id)\n        .order('created_at', { ascending: false });\n\n      if (fetchError) throw fetchError;\n      setCustomers(data || []);\n    } catch (err) {\n      console.error('Error loading customers:', err);\n      setError('Failed to load customers');\n      showError('Failed to load customers');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addCustomer = async (email: string, name: string, source: string = 'manual') => {\n    try {\n      const { data, error: insertError } = await supabase\n        .from('customers')\n        .insert({\n          email,\n          name,\n          source,\n          user_id: user?.id,\n          status: 'lead'\n        })\n        .select()\n        .single();\n\n      if (insertError) throw insertError;\n      setCustomers(prev => [data, ...prev]);\n      showSuccess('Customer added successfully');\n      return data;\n    } catch (err) {\n      console.error('Error adding customer:', err);\n      showError('Failed to add customer');\n      throw err;\n    }\n  };\n\n  const updateCustomer = async (id: string, updates: Partial<Customer>) => {\n    try {\n      const { data, error: updateError } = await supabase\n        .from('customers')\n        .update(updates)\n        .eq('id', id)\n        .eq('user_id', user?.id)\n        .select()\n        .single();\n\n      if (updateError) throw updateError;\n      setCustomers(prev => prev.map(c => c.id === id ? data : c));\n      showSuccess('Customer updated successfully');\n      return data;\n    } catch (err) {\n      console.error('Error updating customer:', err);\n      showError('Failed to update customer');\n      throw err;\n    }\n  };\n\n  const deleteCustomer = async (id: string) => {\n    try {\n      const { error: deleteError } = await supabase\n        .from('customers')\n        .delete()\n        .eq('id', id)\n        .eq('user_id', user?.id);\n\n      if (deleteError) throw deleteError;\n      setCustomers(prev => prev.filter(c => c.id !== id));\n      showSuccess('Customer deleted successfully');\n    } catch (err) {\n      console.error('Error deleting customer:', err);\n      showError('Failed to delete customer');\n      throw err;\n    }\n  };\n\n  return {\n    customers,\n    loading,\n    error,\n    addCustomer,\n    updateCustomer,\n    deleteCustomer,\n    refresh: loadCustomers\n  };\n}","import { useState } from 'react';\nimport { useAuth } from './useAuth';\nimport { showError, showSuccess } from '../lib/toast';\n\nexport function useAI() {\n  const { user } = useAuth();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const analyzeCustomerData = async (customerId: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Simulated analysis results since we don't want to make real API calls\n      const results = {\n        behavior: \"Customer shows high engagement with email campaigns and regularly uses core features.\",\n        recommendations: [\n          \"Consider offering premium feature upgrade\",\n          \"Engage through personalized email campaign\",\n          \"Schedule quarterly review call\"\n        ],\n        engagementTrend: Array.from({ length: 6 }, (_, i) => ({\n          date: new Date(Date.now() - i * 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n          engagement: Math.floor(Math.random() * 100)\n        })).reverse(),\n        churnRisk: \"Low\",\n        lifetimeValue: \"$1,234\",\n        nextBestAction: \"Schedule follow-up call\"\n      };\n\n      showSuccess('Analysis completed successfully');\n      return results;\n    } catch (err) {\n      const message = err instanceof Error ? err.message : 'Failed to analyze customer data';\n      setError(message);\n      showError(message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const generateContent = async (prompt: string, type: string, options = {}) => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Simulated content generation\n      const content = `Generated ${type} content for: ${prompt}`;\n      \n      return {\n        content,\n        suggestions: []\n      };\n    } catch (err) {\n      const message = err instanceof Error ? err.message : 'Failed to generate content';\n      setError(message);\n      showError(message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const optimizeBudget = async (data: {\n    currentBudget: number;\n    expenses: any[];\n    performance: any[];\n    goals: string[];\n  }) => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Simulated budget optimization\n      return {\n        recommendations: [\n          \"Increase social media advertising budget by 20%\",\n          \"Reduce underperforming campaign spending\",\n          \"Invest in content marketing\"\n        ],\n        allocation: {\n          social: 0.4,\n          email: 0.3,\n          content: 0.2,\n          other: 0.1\n        },\n        projectedROI: 2.5\n      };\n    } catch (err) {\n      const message = err instanceof Error ? err.message : 'Failed to optimize budget';\n      setError(message);\n      showError(message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return {\n    generateContent,\n    analyzeCustomerData,\n    optimizeBudget,\n    loading,\n    error\n  };\n}","import { Sparkles } from 'lucide-react';\n\ninterface AIFeatureIndicatorProps {\n  feature: string;\n  className?: string;\n}\n\nexport function AIFeatureIndicator({ feature, className = '' }: AIFeatureIndicatorProps) {\n  return (\n    <div className={`flex items-center gap-2 text-accent-500 ${className}`}>\n      <Sparkles className=\"w-4 h-4\" />\n      <span className=\"text-sm font-medium\">AI-Powered {feature}</span>\n    </div>\n  );\n}","import { ArrowLeft } from 'lucide-react';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nexport function BackButton() {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Only show back button if not on main dashboard\n  if (location.pathname === '/dashboard') {\n    return null;\n  }\n\n  return (\n    <button\n      onClick={() => navigate('/dashboard')}\n      className=\"flex items-center gap-2 text-primary-300 hover:text-white transition-colors\"\n      aria-label=\"Back to Dashboard\"\n    >\n      <ArrowLeft className=\"w-4 h-4\" />\n      <span>Back to Dashboard</span>\n    </button>\n  );\n}","import { Loader2 } from 'lucide-react';\n\ninterface LoadingSpinnerProps {\n  size?: number;\n  className?: string;\n  message?: string;\n}\n\nexport function LoadingSpinner({ size = 24, className = '', message = 'Loading...' }: LoadingSpinnerProps) {\n  return (\n    <div className=\"flex flex-col items-center justify-center gap-3\">\n      <Loader2 \n        className={`animate-spin text-accent-500 ${className}`}\n        size={size}\n      />\n      {message && (\n        <p className=\"text-primary-300 text-sm\">{message}</p>\n      )}\n    </div>\n  );\n}","import { FolderOpen } from 'lucide-react';\n\ninterface EmptyStateProps {\n  title: string;\n  message: string;\n  icon?: React.ReactNode;\n  action?: React.ReactNode;\n}\n\nexport function EmptyState({ title, message, icon, action }: EmptyStateProps) {\n  return (\n    <div className=\"min-h-[300px] flex items-center justify-center\">\n      <div className=\"text-center\">\n        {icon || <FolderOpen className=\"w-12 h-12 text-primary-400 mx-auto mb-4\" />}\n        <h3 className=\"text-lg font-medium text-white mb-2\">{title}</h3>\n        <p className=\"text-primary-300 mb-4\">{message}</p>\n        {action}\n      </div>\n    </div>\n  );\n}","import { useState } from 'react';\nimport { useCustomers } from '../../hooks/useCustomers';\nimport { useAI } from '../../hooks/useAI';\nimport {\n  User,\n  Mail,\n  Phone,\n  MapPin,\n  Calendar,\n  Tag,\n  DollarSign,\n  TrendingUp,\n  Brain,\n  X,\n  Edit2,\n  MessageCircle,\n  Star,\n  AlertTriangle\n} from 'lucide-react';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer\n} from 'recharts';\n\ninterface CustomerProfileProps {\n  customerId: string;\n  onClose: () => void;\n}\n\nexport function CustomerProfile({ customerId, onClose }: CustomerProfileProps) {\n  const { customers, updateCustomer } = useCustomers();\n  const { analyzeCustomerData } = useAI();\n  const [editing, setEditing] = useState(false);\n  const [analyzing, setAnalyzing] = useState(false);\n  const [insights, setInsights] = useState<any>(null);\n\n  const customer = customers.find(c => c.id === customerId);\n  if (!customer) return null;\n\n  const handleAnalyze = async () => {\n    setAnalyzing(true);\n    try {\n      const results = await analyzeCustomerData(customerId);\n      setInsights(results);\n    } catch (err) {\n      console.error('Analysis error:', err);\n    } finally {\n      setAnalyzing(false);\n    }\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center p-4 z-50\">\n      <div className=\"bg-primary-700 rounded-xl w-full max-w-4xl max-h-[90vh] overflow-y-auto\">\n        <div className=\"sticky top-0 bg-primary-700 border-b border-primary-600 p-6\">\n          <div className=\"flex items-center justify-between\">\n            <h3 className=\"text-lg font-medium text-white\">Customer Profile</h3>\n            <button\n              onClick={onClose}\n              className=\"text-primary-300 hover:text-white\"\n            >\n              <X className=\"w-5 h-5\" />\n            </button>\n          </div>\n        </div>\n\n        <div className=\"p-6 space-y-6\">\n          {/* Basic Info */}\n          <div className=\"grid grid-cols-2 gap-6\">\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center gap-3\">\n                <User className=\"w-5 h-5 text-accent-500\" />\n                <div>\n                  <h4 className=\"text-sm font-medium text-primary-200\">Name</h4>\n                  <p className=\"text-white\">{customer.name}</p>\n                </div>\n              </div>\n\n              <div className=\"flex items-center gap-3\">\n                <Mail className=\"w-5 h-5 text-accent-500\" />\n                <div>\n                  <h4 className=\"text-sm font-medium text-primary-200\">Email</h4>\n                  <p className=\"text-white\">{customer.email}</p>\n                </div>\n              </div>\n\n              <div className=\"flex items-center gap-3\">\n                <Phone className=\"w-5 h-5 text-accent-500\" />\n                <div>\n                  <h4 className=\"text-sm font-medium text-primary-200\">Phone</h4>\n                  <p className=\"text-white\">{customer.metadata?.phone || '-'}</p>\n                </div>\n              </div>\n\n              <div className=\"flex items-center gap-3\">\n                <MapPin className=\"w-5 h-5 text-accent-500\" />\n                <div>\n                  <h4 className=\"text-sm font-medium text-primary-200\">Address</h4>\n                  <p className=\"text-white\">{customer.metadata?.address || '-'}</p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center gap-3\">\n                <Calendar className=\"w-5 h-5 text-accent-500\" />\n                <div>\n                  <h4 className=\"text-sm font-medium text-primary-200\">Customer Since</h4>\n                  <p className=\"text-white\">{new Date(customer.created_at).toLocaleDateString()}</p>\n                </div>\n              </div>\n\n              <div className=\"flex items-center gap-3\">\n                <Tag className=\"w-5 h-5 text-accent-500\" />\n                <div>\n                  <h4 className=\"text-sm font-medium text-primary-200\">Tags</h4>\n                  <div className=\"flex flex-wrap gap-2 mt-1\">\n                    {customer.metadata?.tags?.map((tag: string, index: number) => (\n                      <span\n                        key={index}\n                        className=\"px-2 py-1 text-xs bg-primary-600/50 rounded-full text-primary-300\"\n                      >\n                        {tag}\n                      </span>\n                    ))}\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"flex items-center gap-3\">\n                <Star className=\"w-5 h-5 text-accent-500\" />\n                <div>\n                  <h4 className=\"text-sm font-medium text-primary-200\">Status</h4>\n                  <span className={`px-2 py-1 text-xs rounded-full ${\n                    customer.status === 'lead'\n                      ? 'bg-blue-500/20 text-blue-400'\n                      : customer.status === 'qualified'\n                      ? 'bg-green-500/20 text-green-400'\n                      : customer.status === 'customer'\n                      ? 'bg-purple-500/20 text-purple-400'\n                      : 'bg-primary-500/20 text-primary-300'\n                  }`}>\n                    {customer.status}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Metrics */}\n          <div className=\"grid grid-cols-3 gap-6\">\n            <div className=\"bg-primary-600/50 rounded-lg p-4\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <span className=\"text-primary-200\">Lifetime Value</span>\n                <DollarSign className=\"w-4 h-4 text-accent-500\" />\n              </div>\n              <p className=\"text-2xl font-bold text-white\">\n                ${(customer.metadata?.lifetimeValue || 0).toLocaleString()}\n              </p>\n            </div>\n\n            <div className=\"bg-primary-600/50 rounded-lg p-4\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <span className=\"text-primary-200\">Engagement Score</span>\n                <TrendingUp className=\"w-4 h-4 text-accent-500\" />\n              </div>\n              <p className=\"text-2xl font-bold text-white\">\n                {customer.metadata?.engagementScore || 0}/10\n              </p>\n            </div>\n\n            <div className=\"bg-primary-600/50 rounded-lg p-4\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <span className=\"text-primary-200\">Churn Risk</span>\n                <AlertTriangle className=\"w-4 h-4 text-accent-500\" />\n              </div>\n              <p className=\"text-2xl font-bold text-white\">\n                {customer.metadata?.churnRisk || 'Low'}\n              </p>\n            </div>\n          </div>\n\n          {/* AI Analysis */}\n          <div className=\"bg-primary-600/50 rounded-lg p-6\">\n            <div className=\"flex items-center justify-between mb-6\">\n              <div className=\"flex items-center gap-2\">\n                <Brain className=\"w-5 h-5 text-accent-500\" />\n                <h4 className=\"text-lg font-medium text-white\">AI Analysis</h4>\n              </div>\n              <button\n                onClick={handleAnalyze}\n                disabled={analyzing}\n                className=\"btn-primary py-2 px-4 flex items-center gap-2\"\n              >\n                <Brain className=\"w-4 h-4\" />\n                {analyzing ? 'Analyzing...' : 'Analyze'}\n              </button>\n            </div>\n\n            {insights && (\n              <div className=\"space-y-4\">\n                <div className=\"grid grid-cols-2 gap-6\">\n                  <div>\n                    <h5 className=\"text-sm font-medium text-primary-200 mb-2\">\n                      Behavior Analysis\n                    </h5>\n                    <p className=\"text-white\">{insights.behavior}</p>\n                  </div>\n                  <div>\n                    <h5 className=\"text-sm font-medium text-primary-200 mb-2\">\n                      Recommendations\n                    </h5>\n                    <ul className=\"space-y-2\">\n                      {insights.recommendations.map((rec: string, index: number) => (\n                        <li key={index} className=\"flex items-start gap-2 text-white\">\n                          <Brain className=\"w-4 h-4 text-accent-500 mt-1\" />\n                          {rec}\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n\n                <div>\n                  <h5 className=\"text-sm font-medium text-primary-200 mb-2\">\n                    Engagement Trend\n                  </h5>\n                  <div className=\"h-48\">\n                    <ResponsiveContainer width=\"100%\" height=\"100%\">\n                      <LineChart data={insights.engagementTrend}>\n                        <XAxis dataKey=\"date\" stroke=\"#94a3b8\" />\n                        <YAxis stroke=\"#94a3b8\" />\n                        <Tooltip\n                          contentStyle={{\n                            backgroundColor: '#1e293b',\n                            border: 'none',\n                            borderRadius: '0.5rem',\n                            color: '#fff'\n                          }}\n                        />\n                        <Line\n                          type=\"monotone\"\n                          dataKey=\"engagement\"\n                          stroke=\"#f97316\"\n                          strokeWidth={2}\n                        />\n                      </LineChart>\n                    </ResponsiveContainer>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* Interaction History */}\n          <div className=\"bg-primary-600/50 rounded-lg p-6\">\n            <div className=\"flex items-center justify-between mb-6\">\n              <div className=\"flex items-center gap-2\">\n                <MessageCircle className=\"w-5 h-5 text-accent-500\" />\n                <h4 className=\"text-lg font-medium text-white\">Interaction History</h4>\n              </div>\n              <button className=\"btn-secondary py-2 px-4 flex items-center gap-2\">\n                <MessageCircle className=\"w-4 h-4\" />\n                Add Note\n              </button>\n            </div>\n\n            <div className=\"space-y-4\">\n              {customer.metadata?.interactions?.map((interaction: any, index: number) => (\n                <div\n                  key={index}\n                  className=\"bg-primary-500/20 rounded-lg p-4\"\n                >\n                  <div className=\"flex items-start justify-between\">\n                    <div>\n                      <p className=\"text-white\">{interaction.note}</p>\n                      <p className=\"text-sm text-primary-300 mt-1\">\n                        {new Date(interaction.date).toLocaleString()}\n                      </p>\n                    </div>\n                    <span className={`px-2 py-1 text-xs rounded-full ${\n                      interaction.type === 'email'\n                        ? 'bg-blue-500/20 text-blue-400'\n                        : interaction.type === 'call'\n                        ? 'bg-green-500/20 text-green-400'\n                        : 'bg-primary-500/20 text-primary-300'\n                    }`}>\n                      {interaction.type}\n                    </span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","import { useState } from 'react';\nimport { useAI } from '../../hooks/useAI';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n  LineChart,\n  Line,\n  PieChart,\n  Pie,\n  Cell\n} from 'recharts';\nimport {\n  TrendingUp,\n  DollarSign,\n  Users,\n  Brain,\n  Target,\n  Clock,\n  Calendar,\n  AlertTriangle\n} from 'lucide-react';\n\ninterface CustomerAnalyticsProps {\n  customers: any[];\n}\n\nconst COLORS = ['#f97316', '#3b82f6', '#10b981', '#8b5cf6'];\n\nexport function CustomerAnalytics({ customers }: CustomerAnalyticsProps) {\n  const { analyzeCustomerData } = useAI();\n  const [analyzing, setAnalyzing] = useState(false);\n  const [insights, setInsights] = useState<any>(null);\n\n  const handleAnalyze = async () => {\n    setAnalyzing(true);\n    try {\n      const results = await analyzeCustomerData('all');\n      setInsights(results);\n    } catch (err) {\n      console.error('Analysis error:', err);\n    } finally {\n      setAnalyzing(false);\n    }\n  };\n\n  // Calculate metrics\n  const totalCustomers = customers.length;\n  const activeCustomers = customers.filter(c => c.status === 'active').length;\n  const totalRevenue = customers.reduce((sum, c) => sum + (c.metadata?.lifetimeValue || 0), 0);\n  const avgLifetimeValue = totalCustomers > 0 ? totalRevenue / totalCustomers : 0;\n\n  // Customer acquisition data\n  const acquisitionData = customers.reduce((acc: Record<string, number>, customer) => {\n    const month = new Date(customer.created_at).toLocaleString('default', { month: 'short' });\n    acc[month] = (acc[month] || 0) + 1;\n    return acc;\n  }, {});\n\n  // Customer segments data\n  const segmentData = [\n    { name: 'New', value: customers.filter(c => c.status === 'lead').length },\n    { name: 'Active', value: customers.filter(c => c.status === 'active').length },\n    { name: 'Inactive', value: customers.filter(c => c.status === 'inactive').length },\n    { name: 'Churned', value: customers.filter(c => c.status === 'churned').length }\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Overview Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <div className=\"flex items-center gap-2 mb-4\">\n            <Users className=\"w-5 h-5 text-accent-500\" />\n            <h3 className=\"text-sm font-medium text-primary-200\">Total Customers</h3>\n          </div>\n          <p className=\"text-2xl font-bold text-white\">{totalCustomers}</p>\n          <span className=\"text-sm text-green-400\">+12% from last month</span>\n        </div>\n\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <div className=\"flex items-center gap-2 mb-4\">\n            <Target className=\"w-5 h-5 text-accent-500\" />\n            <h3 className=\"text-sm font-medium text-primary-200\">Active Customers</h3>\n          </div>\n          <p className=\"text-2xl font-bold text-white\">{activeCustomers}</p>\n          <span className=\"text-sm text-green-400\">+5% from last month</span>\n        </div>\n\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <div className=\"flex items-center gap-2 mb-4\">\n            <DollarSign className=\"w-5 h-5 text-accent-500\" />\n            <h3 className=\"text-sm font-medium text-primary-200\">Avg. Lifetime Value</h3>\n          </div>\n          <p className=\"text-2xl font-bold text-white\">${avgLifetimeValue.toFixed(2)}</p>\n          <span className=\"text-sm text-green-400\">+8% from last month</span>\n        </div>\n\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <div className=\"flex items-center gap-2 mb-4\">\n            <AlertTriangle className=\"w-5 h-5 text-accent-500\" />\n            <h3 className=\"text-sm font-medium text-primary-200\">Churn Rate</h3>\n          </div>\n          <p className=\"text-2xl font-bold text-white\">2.4%</p>\n          <span className=\"text-sm text-red-400\">+0.5% from last month</span>\n        </div>\n      </div>\n\n      {/* Charts */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Customer Acquisition */}\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h3 className=\"text-lg font-medium text-white\">Customer Acquisition</h3>\n            <Calendar className=\"w-5 h-5 text-accent-500\" />\n          </div>\n          <div className=\"h-64\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <LineChart data={Object.entries(acquisitionData).map(([month, count]) => ({\n                month,\n                customers: count\n              }))}>\n                <XAxis dataKey=\"month\" stroke=\"#94a3b8\" />\n                <YAxis stroke=\"#94a3b8\" />\n                <Tooltip\n                  contentStyle={{\n                    backgroundColor: '#1e293b',\n                    border: 'none',\n                    borderRadius: '0.5rem',\n                    color: '#fff'\n                  }}\n                />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"customers\"\n                  stroke=\"#f97316\"\n                  strokeWidth={2}\n                  dot={{ fill: '#f97316' }}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n\n        {/* Customer Segments */}\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h3 className=\"text-lg font-medium text-white\">Customer Segments</h3>\n            <Users className=\"w-5 h-5 text-accent-500\" />\n          </div>\n          <div className=\"h-64\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <PieChart>\n                <Pie\n                  data={segmentData}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  outerRadius={80}\n                  dataKey=\"value\"\n                  label={({ name, value }) => `${name}: ${value}`}\n                >\n                  {segmentData.map((entry, index) => (\n                    <Cell key={entry.name} fill={COLORS[index % COLORS.length]} />\n                  ))}\n                </Pie>\n                <Tooltip\n                  contentStyle={{\n                    backgroundColor: '#1e293b',\n                    border: 'none',\n                    borderRadius: '0.5rem',\n                    color: '#fff'\n                  }}\n                />\n              </PieChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n      </div>\n\n      {/* AI Insights */}\n      <div className=\"bg-primary-700/50 rounded-xl p-6\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <div className=\"flex items-center gap-2\">\n            <Brain className=\"w-5 h-5 text-accent-500\" />\n            <h3 className=\"text-lg font-medium text-white\">AI Insights</h3>\n          </div>\n          <button\n            onClick={handleAnalyze}\n            disabled={analyzing}\n            className=\"btn-primary py-2 px-4 flex items-center gap-2\"\n          >\n            <Brain className=\"w-4 h-4\" />\n            {analyzing ? 'Analyzing...' : 'Generate Insights'}\n          </button>\n        </div>\n\n        {insights && (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {/* Growth Trends */}\n            <div>\n              <h4 className=\"text-sm font-medium text-primary-200 mb-4\">Growth Trends</h4>\n              <div className=\"space-y-4\">\n                {insights.trends.map((trend: any, index: number) => (\n                  <div\n                    key={index}\n                    className=\"bg-primary-600/50 rounded-lg p-4 flex items-start gap-3\"\n                  >\n                    <TrendingUp className=\"w-5 h-5 text-accent-500 mt-0.5\" />\n                    <div>\n                      <p className=\"text-white\">{trend.insight}</p>\n                      <p className=\"text-sm text-primary-300 mt-1\">{trend.details}</p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Recommendations */}\n            <div>\n              <h4 className=\"text-sm font-medium text-primary-200 mb-4\">Recommendations</h4>\n              <div className=\"space-y-4\">\n                {insights.recommendations.map((rec: any, index: number) => (\n                  <div\n                    key={index}\n                    className=\"bg-primary-600/50 rounded-lg p-4 flex items-start gap-3\"\n                  >\n                    <Brain className=\"w-5 h-5 text-accent-500 mt-0.5\" />\n                    <div>\n                      <p className=\"text-white\">{rec.action}</p>\n                      <p className=\"text-sm text-primary-300 mt-1\">{rec.impact}</p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Customer Behavior */}\n      <div className=\"bg-primary-700/50 rounded-xl p-6\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <h3 className=\"text-lg font-medium text-white\">Customer Behavior</h3>\n          <Clock className=\"w-5 h-5 text-accent-500\" />\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n          {/* Engagement Score */}\n          <div className=\"bg-primary-600/50 rounded-lg p-4\">\n            <h4 className=\"text-sm font-medium text-primary-200 mb-2\">Avg. Engagement Score</h4>\n            <div className=\"flex items-center gap-4\">\n              <div className=\"text-3xl font-bold text-white\">7.8</div>\n              <div className=\"text-sm text-green-400\">+0.5</div>\n            </div>\n          </div>\n\n          {/* Purchase Frequency */}\n          <div className=\"bg-primary-600/50 rounded-lg p-4\">\n            <h4 className=\"text-sm font-medium text-primary-200 mb-2\">Purchase Frequency</h4>\n            <div className=\"flex items-center gap-4\">\n              <div className=\"text-3xl font-bold text-white\">12</div>\n              <div className=\"text-sm text-primary-300\">days</div>\n            </div>\n          </div>\n\n          {/* Retention Rate */}\n          <div className=\"bg-primary-600/50 rounded-lg p-4\">\n            <h4 className=\"text-sm font-medium text-primary-200 mb-2\">Retention Rate</h4>\n            <div className=\"flex items-center gap-4\">\n              <div className=\"text-3xl font-bold text-white\">85%</div>\n              <div className=\"text-sm text-green-400\">+2%</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","import { useState } from 'react';\nimport { useAI } from '../../hooks/useAI';\nimport {\n  Users,\n  Brain,\n  Filter,\n  TrendingUp,\n  DollarSign,\n  Calendar,\n  Tag,\n  Plus\n} from 'lucide-react';\nimport {\n  PieChart,\n  Pie,\n  Cell,\n  ResponsiveContainer,\n  Tooltip\n} from 'recharts';\n\ninterface CustomerSegmentsProps {\n  customers: any[];\n  onSegmentSelect: (segmentId: string) => void;\n}\n\nconst COLORS = ['#f97316', '#3b82f6', '#10b981', '#8b5cf6'];\n\nexport function CustomerSegments({ customers, onSegmentSelect }: CustomerSegmentsProps) {\n  const [selectedSegment, setSelectedSegment] = useState<string | null>(null);\n  const [showCreateSegment, setShowCreateSegment] = useState(false);\n\n  const segments = [\n    {\n      id: 'high-value',\n      name: 'High Value',\n      count: customers.filter(c => (c.metadata?.lifetimeValue || 0) > 1000).length,\n      criteria: 'LTV > $1,000'\n    },\n    {\n      id: 'at-risk',\n      name: 'At Risk',\n      count: customers.filter(c => c.metadata?.churnRisk === 'High').length,\n      criteria: 'High churn risk'\n    },\n    {\n      id: 'new',\n      name: 'New Customers',\n      count: customers.filter(c => {\n        const date = new Date(c.created_at);\n        const now = new Date();\n        const diffTime = Math.abs(now.getTime() - date.getTime());\n        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n        return diffDays <= 30;\n      }).length,\n      criteria: 'Joined in last 30 days'\n    }\n  ];\n\n  const handleSegmentSelect = (segmentId: string) => {\n    setSelectedSegment(segmentId);\n    onSegmentSelect(segmentId);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Segment Overview */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        {/* Segment Distribution */}\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h3 className=\"text-lg font-medium text-white\">Customer Distribution</h3>\n            <button\n              onClick={() => setShowCreateSegment(true)}\n              className=\"btn-primary py-2 px-4 flex items-center gap-2\"\n            >\n              <Plus className=\"w-4 h-4\" />\n              Create Segment\n            </button>\n          </div>\n          <div className=\"h-64\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <PieChart>\n                <Pie\n                  data={segments}\n                  dataKey=\"count\"\n                  nameKey=\"name\"\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  outerRadius={80}\n                  label\n                >\n                  {segments.map((entry, index) => (\n                    <Cell key={entry.id} fill={COLORS[index % COLORS.length]} />\n                  ))}\n                </Pie>\n                <Tooltip\n                  contentStyle={{\n                    backgroundColor: '#1e293b',\n                    border: 'none',\n                    borderRadius: '0.5rem',\n                    color: '#fff'\n                  }}\n                />\n              </PieChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n\n        {/* Segment Metrics */}\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <h3 className=\"text-lg font-medium text-white mb-6\">Segment Metrics</h3>\n          <div className=\"space-y-4\">\n            {segments.map((segment) => (\n              <div\n                key={segment.id}\n                className={`bg-primary-600/50 rounded-lg p-4 cursor-pointer transition-colors ${\n                  selectedSegment === segment.id ? 'ring-2 ring-accent-500' : ''\n                }`}\n                onClick={() => handleSegmentSelect(segment.id)}\n              >\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <h4 className=\"text-white font-medium\">{segment.name}</h4>\n                    <p className=\"text-sm text-primary-300 mt-1\">{segment.criteria}</p>\n                  </div>\n                  <div className=\"text-right\">\n                    <p className=\"text-2xl font-bold text-white\">{segment.count}</p>\n                    <p className=\"text-sm text-primary-300\">customers</p>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* Segment Details */}\n      {selectedSegment && (\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h3 className=\"text-lg font-medium text-white\">Segment Details</h3>\n            <div className=\"flex gap-4\">\n              <button className=\"btn-secondary py-2 px-4 flex items-center gap-2\">\n                <Filter className=\"w-4 h-4\" />\n                Edit Criteria\n              </button>\n              <button className=\"btn-secondary py-2 px-4 flex items-center gap-2\">\n                <Brain className=\"w-4 h-4\" />\n                AI Insights\n              </button>\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-3 gap-6 mb-6\">\n            <div className=\"bg-primary-600/50 rounded-lg p-4\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <span className=\"text-primary-200\">Avg. LTV</span>\n                <DollarSign className=\"w-4 h-4 text-accent-500\" />\n              </div>\n              <p className=\"text-2xl font-bold text-white\">$1,234</p>\n            </div>\n\n            <div className=\"bg-primary-600/50 rounded-lg p-4\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <span className=\"text-primary-200\">Engagement</span>\n                <TrendingUp className=\"w-4 h-4 text-accent-500\" />\n              </div>\n              <p className=\"text-2xl font-bold text-white\">8.4/10</p>\n            </div>\n\n            <div className=\"bg-primary-600/50 rounded-lg p-4\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <span className=\"text-primary-200\">Growth Rate</span>\n                <TrendingUp className=\"w-4 h-4 text-accent-500\" />\n              </div>\n              <p className=\"text-2xl font-bold text-white\">+12%</p>\n            </div>\n          </div>\n\n          {/* Customer List */}\n          <div className=\"bg-primary-600/50 rounded-lg overflow-hidden\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"bg-primary-500/20\">\n                  <th className=\"text-left p-4 text-primary-200\">Customer</th>\n                  <th className=\"text-left p-4 text-primary-200\">Status</th>\n                  <th className=\"text-left p-4 text-primary-200\">LTV</th>\n                  <th className=\"text-left p-4 text-primary-200\">Last Activity</th>\n                </tr>\n              </thead>\n              <tbody className=\"divide-y divide-primary-500/20\">\n                {customers\n                  .filter(c => {\n                    // Apply segment filters based on selectedSegment\n                    switch (selectedSegment) {\n                      case 'high-value':\n                        return (c.metadata?.lifetimeValue || 0) > 1000;\n                      case 'at-risk':\n                        return c.metadata?.churnRisk === 'High';\n                      case 'new':\n                        const date = new Date(c.created_at);\n                        const now = new Date();\n                        const diffTime = Math.abs(now.getTime() - date.getTime());\n                        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n                        return diffDays <= 30;\n                      default:\n                        return true;\n                    }\n                  })\n                  .map((customer) => (\n                    <tr key={customer.id} className=\"hover:bg-primary-500/10\">\n                      <td className=\"p-4\">\n                        <div>\n                          <div className=\"text-white font-medium\">{customer.name}</div>\n                          <div className=\"text-sm text-primary-300\">{customer.email}</div>\n                        </div>\n                      </td>\n                      <td className=\"p-4\">\n                        <span className={`px-2 py-1 text-xs rounded-full ${\n                          customer.status === 'lead'\n                            ? 'bg-blue-500/20 text-blue-400'\n                            : customer.status === 'qualified'\n                            ? 'bg-green-500/20 text-green-400'\n                            : 'bg-purple-500/20 text-purple-400'\n                        }`}>\n                          {customer.status}\n                        </span>\n                      </td>\n                      <td className=\"p-4\">\n                        <span className=\"text-white\">\n                          ${(customer.metadata?.lifetimeValue || 0).toLocaleString()}\n                        </span>\n                      </td>\n                      <td className=\"p-4\">\n                        <span className=\"text-primary-300\">\n                          {new Date(customer.metadata?.lastActivity || customer.created_at).toLocaleDateString()}\n                        </span>\n                      </td>\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}","import { useState } from 'react';\nimport { useCustomers } from '../../hooks/useCustomers';\nimport { Settings, Plus, Clock, Brain } from 'lucide-react';\n\ninterface CustomerWorkflowProps {\n  customers: any[];\n}\n\nexport function CustomerWorkflow({ customers }: CustomerWorkflowProps) {\n  const [selectedWorkflow, setSelectedWorkflow] = useState<string | null>(null);\n  const [showCreateWorkflow, setShowCreateWorkflow] = useState(false);\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center gap-2\">\n          <Settings className=\"w-5 h-5 text-accent-500\" />\n          <h3 className=\"text-lg font-medium text-white\">Automation Workflows</h3>\n        </div>\n        <button\n          onClick={() => setShowCreateWorkflow(true)}\n          className=\"btn-primary py-2 px-4 flex items-center gap-2\"\n        >\n          <Plus className=\"w-4 h-4\" />\n          Create Workflow\n        </button>\n      </div>\n      \n      {/* Rest of the component implementation */}\n      <div className=\"text-white\">Workflow implementation coming soon...</div>\n    </div>\n  );\n}","import { useState } from 'react';\nimport { useAI } from '../../hooks/useAI';\nimport {\n  MessageCircle,\n  Star,\n  TrendingUp,\n  Brain,\n  ThumbsUp,\n  ThumbsDown,\n  Filter,\n  Calendar,\n  AlertCircle\n} from 'lucide-react';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n  LineChart,\n  Line\n} from 'recharts';\n\ninterface CustomerFeedbackProps {\n  customers: any[];\n}\n\nexport function CustomerFeedback({ customers }: CustomerFeedbackProps) {\n  const [selectedPeriod, setSelectedPeriod] = useState<'7d' | '30d' | '90d'>('30d');\n  const [selectedCategory, setSelectedCategory] = useState<string>('all');\n  const [showAnalysis, setShowAnalysis] = useState(false);\n\n  // Sample feedback data\n  const feedback = [\n    {\n      id: '1',\n      customer: 'John Doe',\n      rating: 5,\n      message: 'Excellent product and great customer service!',\n      category: 'product',\n      sentiment: 'positive',\n      date: '2024-01-10'\n    },\n    {\n      id: '2',\n      customer: 'Jane Smith',\n      rating: 3,\n      message: 'Product is good but could use some improvements.',\n      category: 'product',\n      sentiment: 'neutral',\n      date: '2024-01-09'\n    },\n    {\n      id: '3',\n      customer: 'Bob Wilson',\n      rating: 4,\n      message: 'Support team was very helpful.',\n      category: 'support',\n      sentiment: 'positive',\n      date: '2024-01-08'\n    }\n  ];\n\n  // Calculate metrics\n  const averageRating = feedback.reduce((sum, item) => sum + item.rating, 0) / feedback.length;\n  const positiveCount = feedback.filter(item => item.sentiment === 'positive').length;\n  const negativeCount = feedback.filter(item => item.sentiment === 'negative').length;\n  const responseRate = 85; // Sample response rate\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Overview Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <div className=\"flex items-center gap-2 mb-4\">\n            <Star className=\"w-5 h-5 text-accent-500\" />\n            <h3 className=\"text-sm font-medium text-primary-200\">Average Rating</h3>\n          </div>\n          <p className=\"text-2xl font-bold text-white\">{averageRating.toFixed(1)}/5</p>\n          <span className=\"text-sm text-green-400\">+0.2 from last month</span>\n        </div>\n\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <div className=\"flex items-center gap-2 mb-4\">\n            <ThumbsUp className=\"w-5 h-5 text-accent-500\" />\n            <h3 className=\"text-sm font-medium text-primary-200\">Positive Feedback</h3>\n          </div>\n          <p className=\"text-2xl font-bold text-white\">{positiveCount}</p>\n          <span className=\"text-sm text-green-400\">+5 from last month</span>\n        </div>\n\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <div className=\"flex items-center gap-2 mb-4\">\n            <MessageCircle className=\"w-5 h-5 text-accent-500\" />\n            <h3 className=\"text-sm font-medium text-primary-200\">Response Rate</h3>\n          </div>\n          <p className=\"text-2xl font-bold text-white\">{responseRate}%</p>\n          <span className=\"text-sm text-green-400\">+2% from last month</span>\n        </div>\n\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <div className=\"flex items-center gap-2 mb-4\">\n            <TrendingUp className=\"w-5 h-5 text-accent-500\" />\n            <h3 className=\"text-sm font-medium text-primary-200\">Sentiment Score</h3>\n          </div>\n          <p className=\"text-2xl font-bold text-white\">8.4/10</p>\n          <span className=\"text-sm text-green-400\">+0.3 from last month</span>\n        </div>\n      </div>\n\n      {/* Filters */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center gap-4\">\n          <select\n            value={selectedPeriod}\n            onChange={(e) => setSelectedPeriod(e.target.value as '7d' | '30d' | '90d')}\n            className=\"bg-primary-600/50 border-primary-500 rounded-lg text-white px-4 py-2\"\n          >\n            <option value=\"7d\">Last 7 days</option>\n            <option value=\"30d\">Last 30 days</option>\n            <option value=\"90d\">Last 90 days</option>\n          </select>\n\n          <select\n            value={selectedCategory}\n            onChange={(e) => setSelectedCategory(e.target.value)}\n            className=\"bg-primary-600/50 border-primary-500 rounded-lg text-white px-4 py-2\"\n          >\n            <option value=\"all\">All Categories</option>\n            <option value=\"product\">Product</option>\n            <option value=\"support\">Support</option>\n            <option value=\"billing\">Billing</option>\n          </select>\n        </div>\n\n        <button\n          onClick={() => setShowAnalysis(true)}\n          className=\"btn-primary py-2 px-4 flex items-center gap-2\"\n        >\n          <Brain className=\"w-4 h-4\" />\n          Analyze Feedback\n        </button>\n      </div>\n\n      {/* Feedback Charts */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Rating Trend */}\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <h3 className=\"text-lg font-medium text-white mb-6\">Rating Trend</h3>\n          <div className=\"h-64\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <LineChart data={[\n                { date: '2024-01-01', rating: 4.2 },\n                { date: '2024-01-02', rating: 4.5 },\n                { date: '2024-01-03', rating: 4.3 },\n                { date: '2024-01-04', rating: 4.7 },\n                { date: '2024-01-05', rating: 4.4 }\n              ]}>\n                <XAxis dataKey=\"date\" stroke=\"#94a3b8\" />\n                <YAxis stroke=\"#94a3b8\" domain={[0, 5]} />\n                <Tooltip\n                  contentStyle={{\n                    backgroundColor: '#1e293b',\n                    border: 'none',\n                    borderRadius: '0.5rem',\n                    color: '#fff'\n                  }}\n                />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"rating\"\n                  stroke=\"#f97316\"\n                  strokeWidth={2}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n\n        {/* Category Distribution */}\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <h3 className=\"text-lg font-medium text-white mb-6\">Feedback by Category</h3>\n          <div className=\"h-64\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <BarChart data={[\n                { category: 'Product', count: 45 },\n                { category: 'Support', count: 32 },\n                { category: 'Billing', count: 18 },\n                { category: 'Other', count: 12 }\n              ]}>\n                <XAxis dataKey=\"category\" stroke=\"#94a3b8\" />\n                <YAxis stroke=\"#94a3b8\" />\n                <Tooltip\n                  contentStyle={{\n                    backgroundColor: '#1e293b',\n                    border: 'none',\n                    borderRadius: '0.5rem',\n                    color: '#fff'\n                  }}\n                />\n                <Bar dataKey=\"count\" fill=\"#f97316\" radius={[4, 4, 0, 0]} />\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n      </div>\n\n      {/* Recent Feedback */}\n      <div className=\"bg-primary-700/50 rounded-xl p-6\">\n        <h3 className=\"text-lg font-medium text-white mb-6\">Recent Feedback</h3>\n        <div className=\"space-y-4\">\n          {feedback.map((item) => (\n            <div\n              key={item.id}\n              className=\"bg-primary-600/50 rounded-lg p-4\"\n            >\n              <div className=\"flex items-start justify-between\">\n                <div>\n                  <div className=\"flex items-center gap-2 mb-2\">\n                    <h4 className=\"text-white font-medium\">{item.customer}</h4>\n                    <div className=\"flex items-center gap-1\">\n                      {Array.from({ length: item.rating }).map((_, i) => (\n                        <Star\n                          key={i}\n                          className=\"w-4 h-4 text-accent-500 fill-current\"\n                        />\n                      ))}\n                    </div>\n                  </div>\n                  <p className=\"text-primary-200\">{item.message}</p>\n                </div>\n                <div className=\"flex flex-col items-end gap-2\">\n                  <span className={`px-2 py-1 text-xs rounded-full ${\n                    item.sentiment === 'positive'\n                      ? 'bg-green-500/20 text-green-400'\n                      : item.sentiment === 'negative'\n                      ? 'bg-red-500/20 text-red-400'\n                      : 'bg-yellow-500/20 text-yellow-400'\n                  }`}>\n                    {item.sentiment}\n                  </span>\n                  <span className=\"text-sm text-primary-400\">\n                    {new Date(item.date).toLocaleDateString()}\n                  </span>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* AI Analysis Modal */}\n      {showAnalysis && (\n        <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-primary-700 rounded-xl p-6 w-full max-w-2xl\">\n            <div className=\"flex items-center justify-between mb-6\">\n              <div className=\"flex items-center gap-2\">\n                <Brain className=\"w-5 h-5 text-accent-500\" />\n                <h3 className=\"text-lg font-medium text-white\">Feedback Analysis</h3>\n              </div>\n              <button\n                onClick={() => setShowAnalysis(false)}\n                className=\"text-primary-300 hover:text-white\"\n              >\n                <AlertCircle className=\"w-5 h-5\" />\n              </button>\n            </div>\n\n            <div className=\"space-y-6\">\n              {/* Key Insights */}\n              <div>\n                <h4 className=\"text-sm font-medium text-primary-200 mb-4\">Key Insights</h4>\n                <div className=\"space-y-3\">\n                  <div className=\"bg-primary-600/50 rounded-lg p-4 flex items-start gap-3\">\n                    <Brain className=\"w-5 h-5 text-accent-500 mt-0.5\" />\n                    <div>\n                      <p className=\"text-white\">Product features are highly rated</p>\n                      <p className=\"text-sm text-primary-300 mt-1\">\n                        85% of customers mention positive experiences with core features\n                      </p>\n                    </div>\n                  </div>\n                  <div className=\"bg-primary-600/50 rounded-lg p-4 flex items-start gap-3\">\n                    <AlertCircle className=\"w-5 h-5 text-yellow-500 mt-0.5\" />\n                    <div>\n                      <p className=\"text-white\">Support response time needs improvement</p>\n                      <p className=\"text-sm text-primary-300 mt-1\">\n                        20% increase in support-related feedback\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Recommendations */}\n              <div>\n                <h4 className=\"text-sm font-medium text-primary-200 mb-4\">Recommendations</h4>\n                <div className=\"space-y-3\">\n                  <div className=\"bg-primary-600/50 rounded-lg p-4 flex items-start gap-3\">\n                    <Brain className=\"w-5 h-5 text-accent-500 mt-0.5\" />\n                    <div>\n                      <p className=\"text-white\">Improve support response time</p>\n                      <p className=\"text-sm text-primary-300 mt-1\">\n                        Consider adding more support staff during peak hours\n                      </p>\n                    </div>\n                  </div>\n                  <div className=\"bg-primary-600/50 rounded-lg p-4 flex items-start gap-3\">\n                    <Brain className=\"w-5 h-5 text-accent-500 mt-0.5\" />\n                    <div>\n                      <p className=\"text-white\">Enhance product documentation</p>\n                      <p className=\"text-sm text-primary-300 mt-1\">\n                        Create more video tutorials for common user questions\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"flex justify-end\">\n                <button\n                  onClick={() => setShowAnalysis(false)}\n                  className=\"btn-primary py-2 px-6\"\n                >\n                  Close\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}","import { useState, useRef } from 'react';\nimport { Upload, X, FileText, AlertCircle, Check } from 'lucide-react';\n\ninterface CustomerImportProps {\n  onClose: () => void;\n  onImport: (data: any[]) => void;\n}\n\nexport function CustomerImport({ onClose, onImport }: CustomerImportProps) {\n  const [file, setFile] = useState<File | null>(null);\n  const [preview, setPreview] = useState<any[]>([]);\n  const [error, setError] = useState<string | null>(null);\n  const [importing, setImporting] = useState(false);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const handleFileSelect = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const selectedFile = e.target.files?.[0];\n    if (!selectedFile) return;\n\n    if (!selectedFile.name.endsWith('.csv')) {\n      setError('Please select a CSV file');\n      return;\n    }\n\n    setFile(selectedFile);\n    parseCSV(selectedFile);\n  };\n\n  const parseCSV = (file: File) => {\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const text = e.target?.result as string;\n        const lines = text.split('\\n');\n        const headers = lines[0].split(',').map(h => h.trim());\n        \n        const data = lines.slice(1, 6).map(line => {\n          const values = line.split(',');\n          return headers.reduce((obj, header, index) => {\n            obj[header] = values[index]?.trim() || '';\n            return obj;\n          }, {} as Record<string, string>);\n        });\n\n        setPreview(data);\n        setError(null);\n      } catch (err) {\n        setError('Failed to parse CSV file');\n        console.error('CSV parse error:', err);\n      }\n    };\n    reader.readAsText(file);\n  };\n\n  const handleImport = async () => {\n    if (!file) return;\n\n    setImporting(true);\n    try {\n      // Process the entire file\n      const reader = new FileReader();\n      reader.onload = async (e) => {\n        const text = e.target?.result as string;\n        const lines = text.split('\\n');\n        const headers = lines[0].split(',').map(h => h.trim());\n        \n        const data = lines.slice(1).map(line => {\n          const values = line.split(',');\n          return headers.reduce((obj, header, index) => {\n            obj[header] = values[index]?.trim() || '';\n            return obj;\n          }, {} as Record<string, string>);\n        });\n\n        await onImport(data);\n        onClose();\n      };\n      reader.readAsText(file);\n    } catch (err) {\n      setError('Failed to import customers');\n      console.error('Import error:', err);\n    } finally {\n      setImporting(false);\n    }\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center p-4 z-50\">\n      <div className=\"bg-primary-700 rounded-xl p-6 w-full max-w-4xl\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <h3 className=\"text-lg font-medium text-white\">Import Customers</h3>\n          <button\n            onClick={onClose}\n            className=\"text-primary-300 hover:text-white\"\n          >\n            <X className=\"w-5 h-5\" />\n          </button>\n        </div>\n\n        {/* File Upload */}\n        <div className=\"mb-6\">\n          <div\n            className=\"border-2 border-dashed border-primary-500 rounded-lg p-8 text-center cursor-pointer hover:border-accent-500 transition-colors\"\n            onClick={() => fileInputRef.current?.click()}\n          >\n            <input\n              type=\"file\"\n              ref={fileInputRef}\n              onChange={handleFileSelect}\n              accept=\".csv\"\n              className=\"hidden\"\n            />\n            <Upload className=\"w-8 h-8 text-primary-400 mx-auto mb-4\" />\n            <p className=\"text-primary-200 mb-2\">\n              {file ? file.name : 'Drop your CSV file here or click to browse'}\n            </p>\n            <p className=\"text-sm text-primary-400\">\n              Supported format: CSV\n            </p>\n          </div>\n        </div>\n\n        {error && (\n          <div className=\"bg-red-500/10 border border-red-500/50 text-red-500 rounded-lg p-4 mb-6 flex items-start gap-2\">\n            <AlertCircle className=\"w-5 h-5 mt-0.5\" />\n            <div>\n              <p className=\"font-medium\">Import Error</p>\n              <p className=\"text-sm mt-1\">{error}</p>\n            </div>\n          </div>\n        )}\n\n        {/* Preview */}\n        {preview.length > 0 && (\n          <div className=\"mb-6\">\n            <h4 className=\"text-sm font-medium text-primary-200 mb-4\">Preview (first 5 rows)</h4>\n            <div className=\"bg-primary-600/50 rounded-lg overflow-hidden\">\n              <table className=\"w-full\">\n                <thead>\n                  <tr className=\"bg-primary-500/20\">\n                    {Object.keys(preview[0]).map((header) => (\n                      <th\n                        key={header}\n                        className=\"text-left p-4 text-primary-200 text-sm font-medium\"\n                      >\n                        {header}\n                      </th>\n                    ))}\n                  </tr>\n                </thead>\n                <tbody className=\"divide-y divide-primary-500/20\">\n                  {preview.map((row, index) => (\n                    <tr key={index}>\n                      {Object.values(row).map((value, i) => (\n                        <td key={i} className=\"p-4 text-white\">\n                          {value}\n                        </td>\n                      ))}\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        )}\n\n        {/* Template Download */}\n        <div className=\"mb-6\">\n          <button className=\"flex items-center gap-2 text-accent-500 hover:text-accent-400\">\n            <FileText className=\"w-4 h-4\" />\n            Download CSV Template\n          </button>\n        </div>\n\n        {/* Actions */}\n        <div className=\"flex justify-end gap-4\">\n          <button\n            onClick={onClose}\n            className=\"px-4 py-2 text-primary-300 hover:text-white transition-colors\"\n          >\n            Cancel\n          </button>\n          <button\n            onClick={handleImport}\n            disabled={!file || importing}\n            className=\"btn-primary py-2 px-6 flex items-center gap-2\"\n          >\n            {importing ? (\n              <>\n                <div className=\"animate-spin rounded-full h-4 w-4 border-2 border-primary-400 border-t-white\" />\n                Importing...\n              </>\n            ) : (\n              <>\n                <Check className=\"w-4 h-4\" />\n                Import Customers\n              </>\n            )}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}","import { useState } from 'react';\nimport { useAI } from '../../hooks/useAI';\nimport {\n  Star,\n  Gift,\n  Award,\n  TrendingUp,\n  DollarSign,\n  Calendar,\n  Users,\n  Brain,\n  Crown,\n  Shield,\n  Target,\n  Plus\n} from 'lucide-react';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n  LineChart,\n  Line,\n  PieChart,\n  Pie,\n  Cell\n} from 'recharts';\n\ninterface CustomerLoyaltyProps {\n  customers: any[];\n}\n\nconst COLORS = ['#f97316', '#3b82f6', '#10b981', '#8b5cf6'];\n\nexport function CustomerLoyalty({ customers }: CustomerLoyaltyProps) {\n  const [selectedTier, setSelectedTier] = useState<string | null>(null);\n  const [showCreateProgram, setShowCreateProgram] = useState(false);\n\n  // Sample loyalty tiers\n  const tiers = [\n    {\n      id: 'bronze',\n      name: 'Bronze',\n      icon: Shield,\n      members: 234,\n      requirements: 'Spend $500 or 3 months active',\n      benefits: ['5% discount', 'Priority support', 'Monthly newsletter']\n    },\n    {\n      id: 'silver',\n      name: 'Silver',\n      icon: Star,\n      members: 156,\n      requirements: 'Spend $1,000 or 6 months active',\n      benefits: ['10% discount', '24/7 support', 'Exclusive events']\n    },\n    {\n      id: 'gold',\n      name: 'Gold',\n      icon: Crown,\n      members: 89,\n      requirements: 'Spend $2,500 or 12 months active',\n      benefits: ['15% discount', 'Dedicated account manager', 'Early access']\n    }\n  ];\n\n  // Sample rewards\n  const rewards = [\n    {\n      id: '1',\n      name: 'Free Month Subscription',\n      points: 1000,\n      claimed: 45,\n      available: 100\n    },\n    {\n      id: '2',\n      name: 'Premium Feature Access',\n      points: 500,\n      claimed: 78,\n      available: 150\n    },\n    {\n      id: '3',\n      name: 'Custom Integration',\n      points: 2000,\n      claimed: 12,\n      available: 50\n    }\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Overview Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <div className=\"flex items-center gap-2 mb-4\">\n            <Users className=\"w-5 h-5 text-accent-500\" />\n            <h3 className=\"text-sm font-medium text-primary-200\">Active Members</h3>\n          </div>\n          <p className=\"text-2xl font-bold text-white\">479</p>\n          <span className=\"text-sm text-green-400\">+24 this month</span>\n        </div>\n\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <div className=\"flex items-center gap-2 mb-4\">\n            <Star className=\"w-5 h-5 text-accent-500\" />\n            <h3 className=\"text-sm font-medium text-primary-200\">Avg. Points</h3>\n          </div>\n          <p className=\"text-2xl font-bold text-white\">856</p>\n          <span className=\"text-sm text-green-400\">+12% from last month</span>\n        </div>\n\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <div className=\"flex items-center gap-2 mb-4\">\n            <Gift className=\"w-5 h-5 text-accent-500\" />\n            <h3 className=\"text-sm font-medium text-primary-200\">Rewards Claimed</h3>\n          </div>\n          <p className=\"text-2xl font-bold text-white\">135</p>\n          <span className=\"text-sm text-green-400\">+8 this week</span>\n        </div>\n\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <div className=\"flex items-center gap-2 mb-4\">\n            <TrendingUp className=\"w-5 h-5 text-accent-500\" />\n            <h3 className=\"text-sm font-medium text-primary-200\">Retention Rate</h3>\n          </div>\n          <p className=\"text-2xl font-bold text-white\">92%</p>\n          <span className=\"text-sm text-green-400\">+2% from last month</span>\n        </div>\n      </div>\n\n      {/* Loyalty Tiers */}\n      <div className=\"bg-primary-700/50 rounded-xl p-6\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <div className=\"flex items-center gap-2\">\n            <Award className=\"w-5 h-5 text-accent-500\" />\n            <h3 className=\"text-lg font-medium text-white\">Loyalty Tiers</h3>\n          </div>\n          <button\n            onClick={() => setShowCreateProgram(true)}\n            className=\"btn-primary py-2 px-4 flex items-center gap-2\"\n          >\n            <Plus className=\"w-4 h-4\" />\n            Create Program\n          </button>\n        </div>\n\n        <div className=\"grid grid-cols-3 gap-6\">\n          {tiers.map((tier) => (\n            <div\n              key={tier.id}\n              className={`bg-primary-600/50 rounded-lg p-6 cursor-pointer transition-colors ${\n                selectedTier === tier.id ? 'ring-2 ring-accent-500' : ''\n              }`}\n              onClick={() => setSelectedTier(tier.id)}\n            >\n              <div className=\"flex items-center justify-between mb-4\">\n                <div className=\"flex items-center gap-2\">\n                  <tier.icon className=\"w-5 h-5 text-accent-500\" />\n                  <h4 className=\"text-lg font-medium text-white\">{tier.name}</h4>\n                </div>\n                <span className=\"text-primary-300\">{tier.members} members</span>\n              </div>\n\n              <div className=\"space-y-4\">\n                <div>\n                  <h5 className=\"text-sm font-medium text-primary-200 mb-2\">Requirements</h5>\n                  <p className=\"text-primary-300\">{tier.requirements}</p>\n                </div>\n\n                <div>\n                  <h5 className=\"text-sm font-medium text-primary-200 mb-2\">Benefits</h5>\n                  <ul className=\"space-y-1\">\n                    {tier.benefits.map((benefit, index) => (\n                      <li key={index} className=\"text-primary-300 flex items-center gap-2\">\n                        <Star className=\"w-3 h-3 text-accent-500\" />\n                        {benefit}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Rewards & Analytics */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Available Rewards */}\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <h3 className=\"text-lg font-medium text-white mb-6\">Available Rewards</h3>\n          <div className=\"space-y-4\">\n            {rewards.map((reward) => (\n              <div\n                key={reward.id}\n                className=\"bg-primary-600/50 rounded-lg p-4\"\n              >\n                <div className=\"flex items-start justify-between\">\n                  <div>\n                    <h4 className=\"text-white font-medium\">{reward.name}</h4>\n                    <p className=\"text-sm text-primary-300 mt-1\">\n                      {reward.points} points required\n                    </p>\n                  </div>\n                  <div className=\"text-right\">\n                    <p className=\"text-sm text-primary-300\">\n                      {reward.available - reward.claimed} remaining\n                    </p>\n                    <div className=\"mt-2\">\n                      <div className=\"w-32 h-2 bg-primary-500 rounded-full overflow-hidden\">\n                        <div\n                          className=\"h-full bg-accent-500\"\n                          style={{\n                            width: `${(reward.claimed / reward.available) * 100}%`\n                          }}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Points Distribution */}\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <h3 className=\"text-lg font-medium text-white mb-6\">Points Distribution</h3>\n          <div className=\"h-64\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <PieChart>\n                <Pie\n                  data={[\n                    { name: 'Bronze', value: 234 },\n                    { name: 'Silver', value: 156 },\n                    { name: 'Gold', value: 89 }\n                  ]}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  outerRadius={80}\n                  dataKey=\"value\"\n                  label={({ name, value }) => `${name}: ${value}`}\n                >\n                  {COLORS.map((color, index) => (\n                    <Cell key={`cell-${index}`} fill={color} />\n                  ))}\n                </Pie>\n                <Tooltip\n                  contentStyle={{\n                    backgroundColor: '#1e293b',\n                    border: 'none',\n                    borderRadius: '0.5rem',\n                    color: '#fff'\n                  }}\n                />\n              </PieChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n      </div>\n\n      {/* Points History */}\n      <div className=\"bg-primary-700/50 rounded-xl p-6\">\n        <h3 className=\"text-lg font-medium text-white mb-6\">Points History</h3>\n        <div className=\"h-64\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <LineChart\n              data={[\n                { date: 'Jan', points: 1200 },\n                { date: 'Feb', points: 1400 },\n                { date: 'Mar', points: 1100 },\n                { date: 'Apr', points: 1600 },\n                { date: 'May', points: 1800 },\n                { date: 'Jun', points: 2000 }\n              ]}\n            >\n              <XAxis dataKey=\"date\" stroke=\"#94a3b8\" />\n              <YAxis stroke=\"#94a3b8\" />\n              <Tooltip\n                contentStyle={{\n                  backgroundColor: '#1e293b',\n                  border: 'none',\n                  borderRadius: '0.5rem',\n                  color: '#fff'\n                }}\n              />\n              <Line\n                type=\"monotone\"\n                dataKey=\"points\"\n                stroke=\"#f97316\"\n                strokeWidth={2}\n                dot={{ fill: '#f97316' }}\n              />\n            </LineChart>\n          </ResponsiveContainer>\n        </div>\n      </div>\n    </div>\n  );\n}","import { useState } from 'react';\nimport { useCustomers } from '../hooks/useCustomers';\nimport { useAI } from '../hooks/useAI';\nimport { AIFeatureIndicator } from './AIFeatureIndicator';\nimport { BackButton } from './BackButton';\nimport { LoadingSpinner } from './LoadingSpinner';\nimport { EmptyState } from './EmptyState';\nimport { CustomerProfile } from './customers/CustomerProfile';\nimport { CustomerAnalytics } from './customers/CustomerAnalytics';\nimport { CustomerSegments } from './customers/CustomerSegments';\nimport { CustomerWorkflow } from './customers/CustomerWorkflow';\nimport { CustomerFeedback } from './customers/CustomerFeedback';\nimport { CustomerImport } from './customers/CustomerImport';\nimport { CustomerLoyalty } from './customers/CustomerLoyalty';\nimport { \n  Users, Plus, Mail, Phone, MapPin, Tag, Calendar, Edit2, \n  MessageCircle, DollarSign, TrendingUp, Clock, FileText, \n  Download, Upload, Star, CheckSquare, AlertCircle, Trash2, \n  Filter, Settings, X, Sparkles, Brain, Search\n} from 'lucide-react';\n\nexport function CustomerManager() {\n  const { customers, loading, error, addCustomer, updateCustomer, deleteCustomer } = useCustomers();\n  const { analyzeCustomer } = useAI();\n  const [showAddCustomer, setShowAddCustomer] = useState(false);\n  const [showImport, setShowImport] = useState(false);\n  const [selectedCustomer, setSelectedCustomer] = useState<string | null>(null);\n  const [activeTab, setActiveTab] = useState<'list' | 'analytics' | 'segments' | 'workflows' | 'feedback' | 'loyalty'>('list');\n\n  if (loading) {\n    return (\n      <div className=\"min-h-[400px] flex items-center justify-center\">\n        <LoadingSpinner size={32} />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <EmptyState\n        title=\"Error Loading Customers\"\n        message={error}\n        icon={<AlertCircle className=\"w-12 h-12 text-red-500 mx-auto mb-4\" />}\n      />\n    );\n  }\n\n  const renderActiveTab = () => {\n    switch (activeTab) {\n      case 'analytics':\n        return <CustomerAnalytics customers={customers} />;\n      case 'segments':\n        return <CustomerSegments customers={customers} onSegmentSelect={() => {}} />;\n      case 'workflows':\n        return <CustomerWorkflow customers={customers} />;\n      case 'feedback':\n        return <CustomerFeedback customers={customers} />;\n      case 'loyalty':\n        return <CustomerLoyalty customers={customers} />;\n      default:\n        return (\n          <div className=\"space-y-4\">\n            {customers.map((customer) => (\n              <div\n                key={customer.id}\n                className=\"bg-primary-700/50 rounded-xl p-4 flex items-center justify-between\"\n                onClick={() => setSelectedCustomer(customer.id)}\n              >\n                <div>\n                  <h3 className=\"text-lg font-medium text-white\">{customer.name}</h3>\n                  <p className=\"text-primary-300\">{customer.email}</p>\n                </div>\n                <div className=\"flex items-center gap-4\">\n                  <span className={`px-2 py-1 text-xs rounded-full ${\n                    customer.status === 'lead'\n                      ? 'bg-blue-500/20 text-blue-400'\n                      : customer.status === 'customer'\n                      ? 'bg-green-500/20 text-green-400'\n                      : 'bg-yellow-500/20 text-yellow-400'\n                  }`}>\n                    {customer.status}\n                  </span>\n                  <div className=\"flex items-center gap-2\">\n                    <button\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        updateCustomer(customer.id, { status: 'customer' });\n                      }}\n                      className=\"p-2 text-primary-300 hover:text-white transition-colors\"\n                    >\n                      <Edit2 className=\"w-4 h-4\" />\n                    </button>\n                    <button\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        deleteCustomer(customer.id);\n                      }}\n                      className=\"p-2 text-primary-300 hover:text-red-400 transition-colors\"\n                    >\n                      <Trash2 className=\"w-4 h-4\" />\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center gap-4\">\n          <BackButton />\n          <h2 className=\"text-xl font-semibold text-white\">Customer Management</h2>\n          <AIFeatureIndicator feature=\"Customer Analysis\" />\n        </div>\n        <div className=\"flex gap-4\">\n          <button\n            onClick={() => setShowImport(true)}\n            className=\"btn-secondary py-2 px-4 flex items-center gap-2\"\n          >\n            <Upload className=\"w-4 h-4\" />\n            Import\n          </button>\n          <button\n            onClick={() => setShowAddCustomer(true)}\n            className=\"btn-primary py-2 px-4 flex items-center gap-2\"\n          >\n            <Plus className=\"w-4 h-4\" />\n            Add Customer\n          </button>\n        </div>\n      </div>\n\n      {/* Navigation Tabs */}\n      <div className=\"flex space-x-4 border-b border-primary-700\">\n        <button\n          onClick={() => setActiveTab('list')}\n          className={`px-4 py-2 ${\n            activeTab === 'list'\n              ? 'text-accent-500 border-b-2 border-accent-500'\n              : 'text-primary-300 hover:text-white'\n          }`}\n        >\n          <div className=\"flex items-center gap-2\">\n            <Users className=\"w-4 h-4\" />\n            Customers\n          </div>\n        </button>\n        <button\n          onClick={() => setActiveTab('analytics')}\n          className={`px-4 py-2 ${\n            activeTab === 'analytics'\n              ? 'text-accent-500 border-b-2 border-accent-500'\n              : 'text-primary-300 hover:text-white'\n          }`}\n        >\n          <div className=\"flex items-center gap-2\">\n            <TrendingUp className=\"w-4 h-4\" />\n            Analytics\n          </div>\n        </button>\n        <button\n          onClick={() => setActiveTab('segments')}\n          className={`px-4 py-2 ${\n            activeTab === 'segments'\n              ? 'text-accent-500 border-b-2 border-accent-500'\n              : 'text-primary-300 hover:text-white'\n          }`}\n        >\n          <div className=\"flex items-center gap-2\">\n            <Filter className=\"w-4 h-4\" />\n            Segments\n          </div>\n        </button>\n        <button\n          onClick={() => setActiveTab('workflows')}\n          className={`px-4 py-2 ${\n            activeTab === 'workflows'\n              ? 'text-accent-500 border-b-2 border-accent-500'\n              : 'text-primary-300 hover:text-white'\n          }`}\n        >\n          <div className=\"flex items-center gap-2\">\n            <Settings className=\"w-4 h-4\" />\n            Workflows\n          </div>\n        </button>\n        <button\n          onClick={() => setActiveTab('feedback')}\n          className={`px-4 py-2 ${\n            activeTab === 'feedback'\n              ? 'text-accent-500 border-b-2 border-accent-500'\n              : 'text-primary-300 hover:text-white'\n          }`}\n        >\n          <div className=\"flex items-center gap-2\">\n            <MessageCircle className=\"w-4 h-4\" />\n            Feedback\n          </div>\n        </button>\n        <button\n          onClick={() => setActiveTab('loyalty')}\n          className={`px-4 py-2 ${\n            activeTab === 'loyalty'\n              ? 'text-accent-500 border-b-2 border-accent-500'\n              : 'text-primary-300 hover:text-white'\n          }`}\n        >\n          <div className=\"flex items-center gap-2\">\n            <Star className=\"w-4 h-4\" />\n            Loyalty\n          </div>\n        </button>\n      </div>\n\n      {/* Active Tab Content */}\n      {renderActiveTab()}\n\n      {/* Add Customer Modal */}\n      {showAddCustomer && (\n        <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center p-4\">\n          <div className=\"bg-primary-700 rounded-xl p-6 w-full max-w-md\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-medium text-white\">Add Customer</h3>\n              <button\n                onClick={() => setShowAddCustomer(false)}\n                className=\"text-primary-300 hover:text-white\"\n              >\n                <X className=\"w-5 h-5\" />\n              </button>\n            </div>\n\n            <form onSubmit={async (e) => {\n              e.preventDefault();\n              const formData = new FormData(e.currentTarget);\n              await addCustomer(\n                formData.get('email') as string,\n                formData.get('name') as string,\n                formData.get('source') as string\n              );\n              setShowAddCustomer(false);\n            }}>\n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-primary-200 mb-1\">\n                    Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    required\n                    className=\"w-full rounded-lg bg-primary-600 border-primary-500 text-white px-4 py-2\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-primary-200 mb-1\">\n                    Email\n                  </label>\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    required\n                    className=\"w-full rounded-lg bg-primary-600 border-primary-500 text-white px-4 py-2\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-primary-200 mb-1\">\n                    Source\n                  </label>\n                  <select\n                    name=\"source\"\n                    className=\"w-full rounded-lg bg-primary-600 border-primary-500 text-white px-4 py-2\"\n                  >\n                    <option value=\"website\">Website</option>\n                    <option value=\"referral\">Referral</option>\n                    <option value=\"social\">Social Media</option>\n                    <option value=\"other\">Other</option>\n                  </select>\n                </div>\n\n                <div className=\"flex justify-end gap-4\">\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowAddCustomer(false)}\n                    className=\"px-4 py-2 text-primary-300 hover:text-white transition-colors\"\n                  >\n                    Cancel\n                  </button>\n                  <button type=\"submit\" className=\"btn-primary py-2 px-6\">\n                    Add Customer\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {/* Import Modal */}\n      {showImport && (\n        <CustomerImport\n          onClose={() => setShowImport(false)}\n          onImport={async (data) => {\n            // Handle customer import\n            console.log('Importing customers:', data);\n            setShowImport(false);\n          }}\n        />\n      )}\n\n      {/* Customer Profile Modal */}\n      {selectedCustomer && (\n        <CustomerProfile\n          customerId={selectedCustomer}\n          onClose={() => setSelectedCustomer(null)}\n        />\n      )}\n    </div>\n  );\n}","import { useState, useEffect } from 'react';\nimport { supabase } from '../lib/supabase';\nimport { useAuth } from './useAuth';\nimport type { ContentLibraryItem } from '../types/database';\n\nexport function useContent() {\n  const { user } = useAuth();\n  const [items, setItems] = useState<ContentLibraryItem[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<Error | null>(null);\n\n  useEffect(() => {\n    if (!user) return;\n    loadContent();\n  }, [user]);\n\n  const loadContent = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('content_library')\n        .select('*')\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n      setItems(data || []);\n    } catch (err) {\n      console.error('Error loading content:', err);\n      setError(err instanceof Error ? err : new Error('Failed to load content'));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const createContent = async (\n    title: string,\n    content: string,\n    contentType: string,\n    tags: string[] = [],\n    metadata: Record<string, any> = {}\n  ) => {\n    try {\n      const { data, error } = await supabase\n        .from('content_library')\n        .insert({\n          title,\n          content,\n          content_type: contentType,\n          tags,\n          metadata,\n          user_id: user?.id\n        })\n        .select()\n        .single();\n\n      if (error) throw error;\n      setItems(prev => [data, ...prev]);\n      return data;\n    } catch (err) {\n      console.error('Error creating content:', err);\n      throw err;\n    }\n  };\n\n  const updateContent = async (\n    id: string,\n    updates: Partial<Omit<ContentLibraryItem, 'id' | 'user_id' | 'created_at' | 'updated_at'>>\n  ) => {\n    try {\n      const { data, error } = await supabase\n        .from('content_library')\n        .update(updates)\n        .eq('id', id)\n        .select()\n        .single();\n\n      if (error) throw error;\n      setItems(prev => prev.map(item => item.id === id ? data : item));\n      return data;\n    } catch (err) {\n      console.error('Error updating content:', err);\n      throw err;\n    }\n  };\n\n  return {\n    items,\n    loading,\n    error,\n    createContent,\n    updateContent,\n    refresh: loadContent\n  };\n}","import { useState } from 'react';\nimport { useContent } from '../hooks/useContent';\nimport { FileText, Plus, Tag, Calendar, Edit2 } from 'lucide-react';\nimport type { ContentLibraryItem } from '../types/database';\n\nexport function ContentManager() {\n  const { items, loading, createContent, updateContent } = useContent();\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [contentType, setContentType] = useState('article');\n  const [tags, setTags] = useState('');\n  const [error, setError] = useState<string | null>(null);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      setError(null);\n      await createContent(\n        title,\n        content,\n        contentType,\n        tags.split(',').map(tag => tag.trim()).filter(Boolean)\n      );\n      setShowCreateForm(false);\n      setTitle('');\n      setContent('');\n      setContentType('article');\n      setTags('');\n    } catch (err) {\n      setError('Failed to create content. Please try again.');\n      console.error(err);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-t-2 border-accent-500\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <h2 className=\"text-xl font-semibold text-white\">Content Library</h2>\n        <button\n          onClick={() => setShowCreateForm(!showCreateForm)}\n          className=\"btn-primary py-2 px-4 flex items-center gap-2\"\n        >\n          <Plus className=\"w-4 h-4\" />\n          Create Content\n        </button>\n      </div>\n\n      {error && (\n        <div className=\"bg-red-500/10 border border-red-500/50 text-red-500 rounded-lg p-4 text-sm\">\n          {error}\n        </div>\n      )}\n\n      {showCreateForm && (\n        <form onSubmit={handleSubmit} className=\"bg-primary-700/50 rounded-xl p-6 space-y-4\">\n          <div>\n            <label htmlFor=\"title\" className=\"block text-sm font-medium text-primary-200\">\n              Title\n            </label>\n            <input\n              type=\"text\"\n              id=\"title\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n              className=\"mt-1 block w-full rounded-lg bg-primary-600 border-primary-500 text-white px-4 py-2\"\n              required\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"content\" className=\"block text-sm font-medium text-primary-200\">\n              Content\n            </label>\n            <textarea\n              id=\"content\"\n              value={content}\n              onChange={(e) => setContent(e.target.value)}\n              rows={4}\n              className=\"mt-1 block w-full rounded-lg bg-primary-600 border-primary-500 text-white px-4 py-2\"\n              required\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"contentType\" className=\"block text-sm font-medium text-primary-200\">\n              Content Type\n            </label>\n            <select\n              id=\"contentType\"\n              value={contentType}\n              onChange={(e) => setContentType(e.target.value)}\n              className=\"mt-1 block w-full rounded-lg bg-primary-600 border-primary-500 text-white px-4 py-2\"\n            >\n              <option value=\"article\">Article</option>\n              <option value=\"social\">Social Post</option>\n              <option value=\"email\">Email Template</option>\n            </select>\n          </div>\n\n          <div>\n            <label htmlFor=\"tags\" className=\"block text-sm font-medium text-primary-200\">\n              Tags (comma-separated)\n            </label>\n            <input\n              type=\"text\"\n              id=\"tags\"\n              value={tags}\n              onChange={(e) => setTags(e.target.value)}\n              className=\"mt-1 block w-full rounded-lg bg-primary-600 border-primary-500 text-white px-4 py-2\"\n              placeholder=\"marketing, blog, social\"\n            />\n          </div>\n\n          <div className=\"flex justify-end gap-4\">\n            <button\n              type=\"button\"\n              onClick={() => setShowCreateForm(false)}\n              className=\"px-4 py-2 text-primary-300 hover:text-white transition-colors\"\n            >\n              Cancel\n            </button>\n            <button type=\"submit\" className=\"btn-primary py-2 px-6\">\n              Create\n            </button>\n          </div>\n        </form>\n      )}\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {items.map((item) => (\n          <div key={item.id} className=\"bg-primary-700/50 rounded-xl p-6 space-y-4\">\n            <div className=\"flex items-start justify-between\">\n              <div className=\"flex items-center gap-3\">\n                <FileText className=\"w-5 h-5 text-accent-500\" />\n                <h3 className=\"text-lg font-medium text-white\">{item.title}</h3>\n              </div>\n              <button className=\"p-1.5 rounded-lg hover:bg-primary-600 transition-colors text-primary-300 hover:text-white\">\n                <Edit2 className=\"w-4 h-4\" />\n              </button>\n            </div>\n\n            <p className=\"text-primary-300 line-clamp-3\">{item.content}</p>\n\n            <div className=\"flex items-center gap-4 text-sm\">\n              <div className=\"flex items-center gap-1 text-primary-400\">\n                <Calendar className=\"w-4 h-4\" />\n                <span>{new Date(item.created_at).toLocaleDateString()}</span>\n              </div>\n              <div className=\"flex items-center gap-1 text-primary-400\">\n                <Tag className=\"w-4 h-4\" />\n                <span>{item.content_type}</span>\n              </div>\n            </div>\n\n            {item.tags.length > 0 && (\n              <div className=\"flex flex-wrap gap-2\">\n                {item.tags.map((tag, index) => (\n                  <span\n                    key={index}\n                    className=\"px-2 py-1 text-xs rounded-full bg-primary-600/50 text-primary-300\"\n                  >\n                    {tag}\n                  </span>\n                ))}\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}","import { useState, useEffect } from 'react';\nimport { supabase } from '../lib/supabase';\nimport { useAuth } from './useAuth';\n\ninterface SocialAnalytics {\n  id: string;\n  post_id: string;\n  platform: string;\n  impressions: number;\n  engagement: number;\n  clicks: number;\n  shares: number;\n  likes: number;\n  comments: number;\n  recorded_at: string;\n}\n\ninterface AnalyticsSummary {\n  totalEngagement: number;\n  totalImpressions: number;\n  engagementRate: number;\n  platformBreakdown: Record<string, {\n    posts: number;\n    engagement: number;\n    impressions: number;\n  }>;\n  timePerformance: {\n    time: string;\n    engagement: number;\n  }[];\n  recentTrends: {\n    date: string;\n    engagement: number;\n    impressions: number;\n  }[];\n}\n\nexport function useSocialAnalytics() {\n  const { user } = useAuth();\n  const [analytics, setAnalytics] = useState<SocialAnalytics[]>([]);\n  const [summary, setSummary] = useState<AnalyticsSummary>({\n    totalEngagement: 0,\n    totalImpressions: 0,\n    engagementRate: 0,\n    platformBreakdown: {},\n    timePerformance: [],\n    recentTrends: []\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!user) return;\n    loadAnalytics();\n  }, [user]);\n\n  const loadAnalytics = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const { data, error } = await supabase\n        .from('social_analytics')\n        .select('*, social_media_posts (platform, created_at)')\n        .order('recorded_at', { ascending: false });\n\n      if (error) throw error;\n\n      setAnalytics(data || []);\n      calculateSummary(data || []);\n    } catch (err) {\n      console.error('Error loading social analytics:', err);\n      setError('Failed to load analytics data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const calculateSummary = (data: SocialAnalytics[]) => {\n    const platformBreakdown: Record<string, {\n      posts: number;\n      engagement: number;\n      impressions: number;\n    }> = {};\n\n    let totalEngagement = 0;\n    let totalImpressions = 0;\n\n    // Calculate platform breakdown and totals\n    data.forEach(item => {\n      const platform = item.platform;\n      if (!platformBreakdown[platform]) {\n        platformBreakdown[platform] = {\n          posts: 0,\n          engagement: 0,\n          impressions: 0\n        };\n      }\n\n      platformBreakdown[platform].posts++;\n      platformBreakdown[platform].engagement += item.engagement;\n      platformBreakdown[platform].impressions += item.impressions;\n\n      totalEngagement += item.engagement;\n      totalImpressions += item.impressions;\n    });\n\n    // Calculate time performance\n    const timePerformance = calculateTimePerformance(data);\n\n    // Calculate recent trends\n    const recentTrends = calculateRecentTrends(data);\n\n    setSummary({\n      totalEngagement,\n      totalImpressions,\n      engagementRate: totalImpressions > 0 ? (totalEngagement / totalImpressions) * 100 : 0,\n      platformBreakdown,\n      timePerformance,\n      recentTrends\n    });\n  };\n\n  const calculateTimePerformance = (data: SocialAnalytics[]) => {\n    const timeSlots: Record<string, { count: number; engagement: number }> = {};\n    \n    data.forEach(item => {\n      const hour = new Date(item.recorded_at).getHours();\n      const timeSlot = hour.toString().padStart(2, '0') + ':00';\n      \n      if (!timeSlots[timeSlot]) {\n        timeSlots[timeSlot] = { count: 0, engagement: 0 };\n      }\n      \n      timeSlots[timeSlot].count++;\n      timeSlots[timeSlot].engagement += item.engagement;\n    });\n\n    return Object.entries(timeSlots)\n      .map(([time, stats]) => ({\n        time,\n        engagement: stats.engagement / stats.count\n      }))\n      .sort((a, b) => {\n        const timeA = parseInt(a.time.split(':')[0]);\n        const timeB = parseInt(b.time.split(':')[0]);\n        return timeA - timeB;\n      });\n  };\n\n  const calculateRecentTrends = (data: SocialAnalytics[]) => {\n    const dailyStats: Record<string, {\n      engagement: number;\n      impressions: number;\n      count: number;\n    }> = {};\n\n    data.forEach(item => {\n      const date = new Date(item.recorded_at).toISOString().split('T')[0];\n      \n      if (!dailyStats[date]) {\n        dailyStats[date] = {\n          engagement: 0,\n          impressions: 0,\n          count: 0\n        };\n      }\n\n      dailyStats[date].engagement += item.engagement;\n      dailyStats[date].impressions += item.impressions;\n      dailyStats[date].count++;\n    });\n\n    return Object.entries(dailyStats)\n      .map(([date, stats]) => ({\n        date,\n        engagement: stats.engagement / stats.count,\n        impressions: stats.impressions / stats.count\n      }))\n      .sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime())\n      .slice(-7); // Last 7 days\n  };\n\n  return {\n    analytics,\n    summary,\n    loading,\n    error,\n    refresh: loadAnalytics\n  };\n}","import { useSocialAnalytics } from '../hooks/useSocialAnalytics';\nimport {\n  BarChart as ChartIcon,\n  TrendingUp,\n  Users,\n  Eye,\n  Heart,\n  MessageCircle,\n  Share2,\n  Clock\n} from 'lucide-react';\nimport {\n  AreaChart,\n  Area,\n  BarChart,\n  Bar,\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer\n} from 'recharts';\n\nexport function SocialAnalyticsDashboard() {\n  const { summary, loading, error } = useSocialAnalytics();\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-t-2 border-accent-500\"></div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"bg-red-500/10 border border-red-500/50 text-red-500 rounded-lg p-4\">\n        {error}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Overview Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <div className=\"flex items-center gap-2 mb-4\">\n            <Users className=\"w-5 h-5 text-accent-500\" />\n            <h3 className=\"text-sm font-medium text-primary-200\">Total Engagement</h3>\n          </div>\n          <p className=\"text-2xl font-bold text-white\">{summary.totalEngagement.toLocaleString()}</p>\n          <span className=\"text-sm text-green-400\">+12% from last month</span>\n        </div>\n\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <div className=\"flex items-center gap-2 mb-4\">\n            <Eye className=\"w-5 h-5 text-accent-500\" />\n            <h3 className=\"text-sm font-medium text-primary-200\">Total Impressions</h3>\n          </div>\n          <p className=\"text-2xl font-bold text-white\">{summary.totalImpressions.toLocaleString()}</p>\n          <span className=\"text-sm text-green-400\">+8% from last month</span>\n        </div>\n\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <div className=\"flex items-center gap-2 mb-4\">\n            <TrendingUp className=\"w-5 h-5 text-accent-500\" />\n            <h3 className=\"text-sm font-medium text-primary-200\">Engagement Rate</h3>\n          </div>\n          <p className=\"text-2xl font-bold text-white\">{summary.engagementRate.toFixed(2)}%</p>\n          <span className=\"text-sm text-green-400\">+2% from last month</span>\n        </div>\n\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <div className=\"flex items-center gap-2 mb-4\">\n            <Share2 className=\"w-5 h-5 text-accent-500\" />\n            <h3 className=\"text-sm font-medium text-primary-200\">Total Shares</h3>\n          </div>\n          <p className=\"text-2xl font-bold text-white\">1,234</p>\n          <span className=\"text-sm text-green-400\">+15% from last month</span>\n        </div>\n      </div>\n\n      {/* Charts */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Engagement Trends */}\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h3 className=\"text-lg font-medium text-white\">Engagement Trends</h3>\n            <TrendingUp className=\"w-5 h-5 text-accent-500\" />\n          </div>\n          <div className=\"h-64\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <AreaChart data={summary.recentTrends}>\n                <defs>\n                  <linearGradient id=\"colorEngagement\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                    <stop offset=\"5%\" stopColor=\"#f97316\" stopOpacity={0.1}/>\n                    <stop offset=\"95%\" stopColor=\"#f97316\" stopOpacity={0}/>\n                  </linearGradient>\n                </defs>\n                <XAxis\n                  dataKey=\"date\"\n                  stroke=\"#94a3b8\"\n                  fontSize={12}\n                  tickFormatter={(value) => new Date(value).toLocaleDateString()}\n                />\n                <YAxis stroke=\"#94a3b8\" fontSize={12} />\n                <Tooltip\n                  contentStyle={{\n                    backgroundColor: '#1e293b',\n                    border: 'none',\n                    borderRadius: '0.5rem',\n                    color: '#fff'\n                  }}\n                />\n                <Area\n                  type=\"monotone\"\n                  dataKey=\"engagement\"\n                  stroke=\"#f97316\"\n                  fillOpacity={1}\n                  fill=\"url(#colorEngagement)\"\n                />\n              </AreaChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n\n        {/* Platform Performance */}\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h3 className=\"text-lg font-medium text-white\">Platform Performance</h3>\n            <ChartIcon className=\"w-5 h-5 text-accent-500\" />\n          </div>\n          <div className=\"h-64\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <BarChart\n                data={Object.entries(summary.platformBreakdown).map(([platform, data]) => ({\n                  platform,\n                  engagement: data.engagement,\n                  impressions: data.impressions\n                }))}\n              >\n                <XAxis dataKey=\"platform\" stroke=\"#94a3b8\" fontSize={12} />\n                <YAxis stroke=\"#94a3b8\" fontSize={12} />\n                <Tooltip\n                  contentStyle={{\n                    backgroundColor: '#1e293b',\n                    border: 'none',\n                    borderRadius: '0.5rem',\n                    color: '#fff'\n                  }}\n                />\n                <Bar dataKey=\"engagement\" fill=\"#f97316\" radius={[4, 4, 0, 0]} />\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n\n        {/* Best Posting Times */}\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h3 className=\"text-lg font-medium text-white\">Best Posting Times</h3>\n            <Clock className=\"w-5 h-5 text-accent-500\" />\n          </div>\n          <div className=\"h-64\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <LineChart data={summary.timePerformance}>\n                <XAxis\n                  dataKey=\"time\"\n                  stroke=\"#94a3b8\"\n                  fontSize={12}\n                />\n                <YAxis stroke=\"#94a3b8\" fontSize={12} />\n                <Tooltip\n                  contentStyle={{\n                    backgroundColor: '#1e293b',\n                    border: 'none',\n                    borderRadius: '0.5rem',\n                    color: '#fff'\n                  }}\n                />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"engagement\"\n                  stroke=\"#f97316\"\n                  strokeWidth={2}\n                  dot={{ fill: '#f97316', strokeWidth: 2 }}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n\n        {/* Engagement Breakdown */}\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h3 className=\"text-lg font-medium text-white\">Engagement Breakdown</h3>\n            <Heart className=\"w-5 h-5 text-accent-500\" />\n          </div>\n          <div className=\"grid grid-cols-3 gap-4\">\n            <div className=\"bg-primary-600/50 rounded-lg p-4 text-center\">\n              <Heart className=\"w-5 h-5 text-accent-500 mx-auto mb-2\" />\n              <p className=\"text-xl font-bold text-white\">2.1K</p>\n              <p className=\"text-sm text-primary-300\">Likes</p>\n            </div>\n            <div className=\"bg-primary-600/50 rounded-lg p-4 text-center\">\n              <MessageCircle className=\"w-5 h-5 text-accent-500 mx-auto mb-2\" />\n              <p className=\"text-xl font-bold text-white\">856</p>\n              <p className=\"text-sm text-primary-300\">Comments</p>\n            </div>\n            <div className=\"bg-primary-600/50 rounded-lg p-4 text-center\">\n              <Share2 className=\"w-5 h-5 text-accent-500 mx-auto mb-2\" />\n              <p className=\"text-xl font-bold text-white\">432</p>\n              <p className=\"text-sm text-primary-300\">Shares</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","import { SocialAnalyticsDashboard } from './SocialAnalyticsDashboard';\nimport { BackButton } from './BackButton';\n\nexport function AnalyticsDashboard() {\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center gap-4\">\n          <BackButton />\n          <h2 className=\"text-xl font-semibold text-white\">Analytics Dashboard</h2>\n        </div>\n      </div>\n      <SocialAnalyticsDashboard />\n    </div>\n  );\n}","import { useState, useEffect } from 'react';\nimport { supabase, retryOperation } from '../lib/supabase';\nimport { useAuth } from './useAuth';\n\ninterface Notification {\n  id: string;\n  user_id: string;\n  title: string;\n  message: string;\n  type: 'info' | 'success' | 'warning' | 'error';\n  read: boolean;\n  created_at: string;\n}\n\nexport function useNotifications() {\n  const { user } = useAuth();\n  const [notifications, setNotifications] = useState<Notification[]>([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!user) return;\n\n    let mounted = true;\n\n    const loadNotifications = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        const { data, error } = await retryOperation(() =>\n          supabase\n            .from('notifications')\n            .select('*')\n            .eq('user_id', user.id)\n            .order('created_at', { ascending: false })\n        );\n\n        if (error) throw error;\n        \n        if (mounted) {\n          setNotifications(data || []);\n          setUnreadCount(data?.filter(n => !n.read).length || 0);\n        }\n      } catch (err) {\n        console.error('Error loading notifications:', err);\n        if (mounted) {\n          setError('Failed to load notifications');\n          setNotifications([]);\n          setUnreadCount(0);\n        }\n      } finally {\n        if (mounted) {\n          setLoading(false);\n        }\n      }\n    };\n\n    // Initial load\n    loadNotifications();\n\n    // Subscribe to new notifications\n    const subscription = supabase\n      .channel('notifications')\n      .on('postgres_changes', {\n        event: '*',\n        schema: 'public',\n        table: 'notifications',\n        filter: `user_id=eq.${user.id}`\n      }, () => {\n        loadNotifications();\n      })\n      .subscribe();\n\n    return () => {\n      mounted = false;\n      subscription.unsubscribe();\n    };\n  }, [user]);\n\n  const markAsRead = async (id: string) => {\n    if (!user) return;\n\n    try {\n      const { error } = await retryOperation(() =>\n        supabase\n          .from('notifications')\n          .update({ read: true })\n          .eq('id', id)\n          .eq('user_id', user.id)\n      );\n\n      if (error) throw error;\n      \n      setNotifications(prev => \n        prev.map(n => n.id === id ? { ...n, read: true } : n)\n      );\n      setUnreadCount(prev => Math.max(0, prev - 1));\n    } catch (err) {\n      console.error('Error marking notification as read:', err);\n      throw err;\n    }\n  };\n\n  const markAllAsRead = async () => {\n    if (!user) return;\n\n    try {\n      const { error } = await retryOperation(() =>\n        supabase\n          .from('notifications')\n          .update({ read: true })\n          .eq('user_id', user.id)\n          .eq('read', false)\n      );\n\n      if (error) throw error;\n      \n      setNotifications(prev => \n        prev.map(n => ({ ...n, read: true }))\n      );\n      setUnreadCount(0);\n    } catch (err) {\n      console.error('Error marking all notifications as read:', err);\n      throw err;\n    }\n  };\n\n  const deleteNotification = async (id: string) => {\n    if (!user) return;\n\n    try {\n      const { error } = await retryOperation(() =>\n        supabase\n          .from('notifications')\n          .delete()\n          .eq('id', id)\n          .eq('user_id', user.id)\n      );\n\n      if (error) throw error;\n      \n      setNotifications(prev => prev.filter(n => n.id !== id));\n      setUnreadCount(prev => prev - (notifications.find(n => n.id === id)?.read ? 0 : 1));\n    } catch (err) {\n      console.error('Error deleting notification:', err);\n      throw err;\n    }\n  };\n\n  return {\n    notifications,\n    unreadCount,\n    loading,\n    error,\n    markAsRead,\n    markAllAsRead,\n    deleteNotification\n  };\n}","import { useState } from 'react';\nimport { useNotifications } from '../hooks/useNotifications';\nimport { Bell, Check, Trash2, X } from 'lucide-react';\n\nexport function NotificationsPanel() {\n  const {\n    notifications,\n    unreadCount,\n    loading,\n    markAsRead,\n    markAllAsRead,\n    deleteNotification\n  } = useNotifications();\n  const [isOpen, setIsOpen] = useState(false);\n\n  if (loading) return null;\n\n  return (\n    <div className=\"relative\">\n      <button\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"relative p-2 text-primary-300 hover:text-white transition-colors\"\n      >\n        <Bell className=\"w-5 h-5\" />\n        {unreadCount > 0 && (\n          <span className=\"absolute top-0 right-0 inline-flex items-center justify-center w-4 h-4 text-xs font-bold leading-none text-white transform translate-x-1/2 -translate-y-1/2 bg-accent-500 rounded-full\">\n            {unreadCount}\n          </span>\n        )}\n      </button>\n\n      {isOpen && (\n        <div className=\"absolute right-0 mt-2 w-80 bg-primary-700 rounded-lg shadow-lg overflow-hidden z-50\">\n          <div className=\"p-4 border-b border-primary-600\">\n            <div className=\"flex items-center justify-between\">\n              <h3 className=\"text-lg font-medium text-white\">Notifications</h3>\n              <div className=\"flex items-center gap-2\">\n                {unreadCount > 0 && (\n                  <button\n                    onClick={() => markAllAsRead()}\n                    className=\"text-sm text-primary-300 hover:text-white transition-colors\"\n                  >\n                    Mark all as read\n                  </button>\n                )}\n                <button\n                  onClick={() => setIsOpen(false)}\n                  className=\"text-primary-300 hover:text-white transition-colors\"\n                >\n                  <X className=\"w-5 h-5\" />\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"max-h-96 overflow-y-auto\">\n            {notifications.length === 0 ? (\n              <div className=\"p-4 text-center text-primary-300\">\n                No notifications\n              </div>\n            ) : (\n              notifications.map(notification => (\n                <div\n                  key={notification.id}\n                  className={`p-4 border-b border-primary-600 ${\n                    !notification.read ? 'bg-primary-600/50' : ''\n                  }`}\n                >\n                  <div className=\"flex items-start justify-between gap-4\">\n                    <div>\n                      <p className=\"text-white font-medium\">{notification.title}</p>\n                      <p className=\"text-sm text-primary-300 mt-1\">\n                        {notification.message}\n                      </p>\n                      <p className=\"text-xs text-primary-400 mt-2\">\n                        {new Date(notification.created_at).toLocaleString()}\n                      </p>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      {!notification.read && (\n                        <button\n                          onClick={() => markAsRead(notification.id)}\n                          className=\"p-1 text-primary-300 hover:text-white transition-colors\"\n                          title=\"Mark as read\"\n                        >\n                          <Check className=\"w-4 h-4\" />\n                        </button>\n                      )}\n                      <button\n                        onClick={() => deleteNotification(notification.id)}\n                        className=\"p-1 text-primary-300 hover:text-red-400 transition-colors\"\n                        title=\"Delete\"\n                      >\n                        <Trash2 className=\"w-4 h-4\" />\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}","import { useState, useEffect } from 'react';\nimport { supabase, retryOperation } from '../lib/supabase';\nimport { useAuth } from './useAuth';\nimport { showError } from '../lib/toast';\n\ninterface UserSettings {\n  id: string;\n  user_id: string;\n  theme: 'light' | 'dark';\n  email_notifications: boolean;\n  created_at: string;\n  updated_at: string;\n}\n\nconst DEFAULT_SETTINGS: Omit<UserSettings, 'id' | 'user_id' | 'created_at' | 'updated_at'> = {\n  theme: 'dark',\n  email_notifications: true\n};\n\nexport function useSettings() {\n  const { user } = useAuth();\n  const [settings, setSettings] = useState<UserSettings | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!user) return;\n\n    let mounted = true;\n\n    const loadSettings = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Try to get existing settings\n        const { data: existingSettings, error: fetchError } = await retryOperation(() =>\n          supabase\n            .from('user_settings')\n            .select('*')\n            .eq('user_id', user.id)\n            .maybeSingle()\n        );\n\n        if (fetchError && fetchError.code !== 'PGRST116') {\n          throw fetchError;\n        }\n\n        // If no settings exist, create default settings\n        if (!existingSettings) {\n          const { data: newSettings, error: createError } = await retryOperation(() =>\n            supabase\n              .from('user_settings')\n              .insert({\n                user_id: user.id,\n                ...DEFAULT_SETTINGS\n              })\n              .select()\n              .single()\n          );\n\n          if (createError) throw createError;\n          if (mounted) setSettings(newSettings);\n        } else if (mounted) {\n          setSettings(existingSettings);\n        }\n      } catch (err) {\n        console.error('Error loading settings:', err);\n        if (mounted) {\n          setError('Failed to load settings');\n          // Use default settings as fallback\n          setSettings({\n            id: 'temp',\n            user_id: user.id,\n            created_at: new Date().toISOString(),\n            updated_at: new Date().toISOString(),\n            ...DEFAULT_SETTINGS\n          });\n        }\n      } finally {\n        if (mounted) {\n          setLoading(false);\n        }\n      }\n    };\n\n    loadSettings();\n\n    return () => {\n      mounted = false;\n    };\n  }, [user]);\n\n  const updateSettings = async (updates: Partial<Omit<UserSettings, 'id' | 'user_id' | 'created_at' | 'updated_at'>>) => {\n    if (!user) return;\n\n    try {\n      const { data, error } = await retryOperation(() =>\n        supabase\n          .from('user_settings')\n          .upsert({\n            user_id: user.id,\n            ...DEFAULT_SETTINGS,\n            ...updates\n          })\n          .select()\n          .single()\n      );\n\n      if (error) throw error;\n      setSettings(data);\n      return data;\n    } catch (err) {\n      console.error('Error updating settings:', err);\n      showError('Failed to update settings');\n      throw err;\n    }\n  };\n\n  return {\n    settings,\n    loading,\n    error,\n    updateSettings\n  };\n}","import { useState } from 'react';\nimport { useSettings } from '../hooks/useSettings';\nimport { Settings, Moon, Sun, Bell, X } from 'lucide-react';\n\nexport function UserSettings() {\n  const { settings, loading, updateSettings } = useSettings();\n  const [isOpen, setIsOpen] = useState(false);\n\n  if (loading) return null;\n\n  return (\n    <div className=\"relative\">\n      <button\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"p-2 text-primary-300 hover:text-white transition-colors\"\n      >\n        <Settings className=\"w-5 h-5\" />\n      </button>\n\n      {isOpen && (\n        <div className=\"absolute right-0 mt-2 w-80 bg-primary-700 rounded-lg shadow-lg overflow-hidden z-50\">\n          <div className=\"p-4 border-b border-primary-600\">\n            <div className=\"flex items-center justify-between\">\n              <h3 className=\"text-lg font-medium text-white\">Settings</h3>\n              <button\n                onClick={() => setIsOpen(false)}\n                className=\"text-primary-300 hover:text-white transition-colors\"\n              >\n                <X className=\"w-5 h-5\" />\n              </button>\n            </div>\n          </div>\n\n          <div className=\"p-4 space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-primary-200 mb-2\">\n                Theme\n              </label>\n              <div className=\"flex items-center gap-4\">\n                <button\n                  onClick={() => updateSettings({ theme: 'light' })}\n                  className={`flex items-center gap-2 px-3 py-2 rounded-lg ${\n                    settings?.theme === 'light'\n                      ? 'bg-accent-500 text-white'\n                      : 'bg-primary-600/50 text-primary-300 hover:text-white'\n                  }`}\n                >\n                  <Sun className=\"w-4 h-4\" />\n                  Light\n                </button>\n                <button\n                  onClick={() => updateSettings({ theme: 'dark' })}\n                  className={`flex items-center gap-2 px-3 py-2 rounded-lg ${\n                    settings?.theme === 'dark'\n                      ? 'bg-accent-500 text-white'\n                      : 'bg-primary-600/50 text-primary-300 hover:text-white'\n                  }`}\n                >\n                  <Moon className=\"w-4 h-4\" />\n                  Dark\n                </button>\n              </div>\n            </div>\n\n            <div>\n              <label className=\"flex items-center gap-2 text-sm font-medium text-primary-200\">\n                <Bell className=\"w-4 h-4\" />\n                Email Notifications\n              </label>\n              <p className=\"text-xs text-primary-400 mt-1 mb-2\">\n                Receive email notifications for important updates\n              </p>\n              <label className=\"relative inline-flex items-center cursor-pointer\">\n                <input\n                  type=\"checkbox\"\n                  checked={settings?.email_notifications}\n                  onChange={(e) => updateSettings({ email_notifications: e.target.checked })}\n                  className=\"sr-only peer\"\n                />\n                <div className=\"w-11 h-6 bg-primary-600 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-accent-500/20 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-accent-500\"></div>\n              </label>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useAuth } from '../hooks/useAuth';\nimport { CustomerManager } from '../components/CustomerManager';\nimport { ContentManager } from '../components/ContentManager';\nimport { AnalyticsDashboard } from '../components/AnalyticsDashboard';\nimport { NotificationsPanel } from '../components/NotificationsPanel';\nimport { UserSettings } from '../components/UserSettings';\nimport {\n  BarChart3,\n  FileText,\n  Share2,\n  Search,\n  Mail,\n  PieChart,\n  DollarSign,\n  Users,\n  TrendingUp,\n  Target,\n  Calendar\n} from 'lucide-react';\n\nexport function Dashboard() {\n  const { user, signOut } = useAuth();\n  const [activeTab, setActiveTab] = useState('overview');\n\n  const renderContent = () => {\n    switch (activeTab) {\n      case 'customers':\n        return <CustomerManager />;\n      case 'content':\n        return <ContentManager />;\n      case 'analytics':\n        return <AnalyticsDashboard />;\n      case 'overview':\n        return (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            <div className=\"bg-primary-700/50 rounded-xl p-6\">\n              <h3 className=\"text-lg font-semibold text-white mb-4\">Overview</h3>\n              <p className=\"text-primary-300\">Welcome to your dashboard!</p>\n            </div>\n            <Link\n              to=\"/analytics\"\n              className=\"bg-primary-700/50 rounded-xl p-6 hover:bg-primary-700 transition-colors group\"\n            >\n              <div className=\"flex items-center gap-3 mb-4\">\n                <BarChart3 className=\"w-5 h-5 text-accent-500\" />\n                <h3 className=\"text-lg font-semibold text-white\">Analytics</h3>\n              </div>\n              <p className=\"text-primary-300 group-hover:text-primary-200\">\n                View comprehensive analytics and reports\n              </p>\n            </Link>\n            <Link\n              to=\"/customers\"\n              className=\"bg-primary-700/50 rounded-xl p-6 hover:bg-primary-700 transition-colors group\"\n            >\n              <div className=\"flex items-center gap-3 mb-4\">\n                <Users className=\"w-5 h-5 text-accent-500\" />\n                <h3 className=\"text-lg font-semibold text-white\">Customer Management</h3>\n              </div>\n              <p className=\"text-primary-300 group-hover:text-primary-200\">\n                Manage your customers, leads and interactions\n              </p>\n            </Link>\n            <Link\n              to=\"/seo\"\n              className=\"bg-primary-700/50 rounded-xl p-6 hover:bg-primary-700 transition-colors group\"\n            >\n              <div className=\"flex items-center gap-3 mb-4\">\n                <Search className=\"w-5 h-5 text-accent-500\" />\n                <h3 className=\"text-lg font-semibold text-white\">SEO Tracking</h3>\n              </div>\n              <p className=\"text-primary-300 group-hover:text-primary-200\">\n                Monitor your keyword rankings and SEO performance\n              </p>\n            </Link>\n            <Link\n              to=\"/email\"\n              className=\"bg-primary-700/50 rounded-xl p-6 hover:bg-primary-700 transition-colors group\"\n            >\n              <div className=\"flex items-center gap-3 mb-4\">\n                <Mail className=\"w-5 h-5 text-accent-500\" />\n                <h3 className=\"text-lg font-semibold text-white\">Email Campaigns</h3>\n              </div>\n              <p className=\"text-primary-300 group-hover:text-primary-200\">\n                Create and manage your email marketing campaigns\n              </p>\n            </Link>\n            <Link\n              to=\"/social\"\n              className=\"bg-primary-700/50 rounded-xl p-6 hover:bg-primary-700 transition-colors group\"\n            >\n              <div className=\"flex items-center gap-3 mb-4\">\n                <Share2 className=\"w-5 h-5 text-accent-500\" />\n                <h3 className=\"text-lg font-semibold text-white\">Social Media</h3>\n              </div>\n              <p className=\"text-primary-300 group-hover:text-primary-200\">\n                Manage your social media presence and analytics\n              </p>\n            </Link>\n            <Link\n              to=\"/budget\"\n              className=\"bg-primary-700/50 rounded-xl p-6 hover:bg-primary-700 transition-colors group\"\n            >\n              <div className=\"flex items-center gap-3 mb-4\">\n                <DollarSign className=\"w-5 h-5 text-accent-500\" />\n                <h3 className=\"text-lg font-semibold text-white\">Budget Management</h3>\n              </div>\n              <p className=\"text-primary-300 group-hover:text-primary-200\">\n                Track and manage your marketing budgets and expenses\n              </p>\n            </Link>\n          </div>\n        );\n      default:\n        return (\n          <div className=\"flex items-center justify-center h-64\">\n            <p className=\"text-primary-300\">This section is coming soon!</p>\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-primary-800\">\n      <header className=\"bg-primary-900/50 border-b border-primary-700\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <h1 className=\"text-2xl font-bold text-white\">Dashboard</h1>\n            <div className=\"flex items-center gap-4\">\n              <NotificationsPanel />\n              <UserSettings />\n              <div className=\"flex items-center gap-4\">\n                <span className=\"text-primary-300\">{user?.email}</span>\n                <button\n                  onClick={() => signOut()}\n                  className=\"text-primary-300 hover:text-white transition-colors\"\n                >\n                  Sign Out\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <nav className=\"bg-primary-900/30 border-b border-primary-700\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex space-x-8\">\n            <button\n              onClick={() => setActiveTab('overview')}\n              className={\"px-3 py-4 text-sm font-medium \" + \n                (activeTab === 'overview'\n                  ? 'text-accent-500 border-b-2 border-accent-500'\n                  : 'text-primary-300 hover:text-white')}\n            >\n              <div className=\"flex items-center gap-2\">\n                <BarChart3 className=\"w-4 h-4\" />\n                Overview\n              </div>\n            </button>\n            <button\n              onClick={() => setActiveTab('analytics')}\n              className={\"px-3 py-4 text-sm font-medium \" + \n                (activeTab === 'analytics'\n                  ? 'text-accent-500 border-b-2 border-accent-500'\n                  : 'text-primary-300 hover:text-white')}\n            >\n              <div className=\"flex items-center gap-2\">\n                <PieChart className=\"w-4 h-4\" />\n                Analytics\n              </div>\n            </button>\n            <button\n              onClick={() => setActiveTab('customers')}\n              className={\"px-3 py-4 text-sm font-medium \" + \n                (activeTab === 'customers'\n                  ? 'text-accent-500 border-b-2 border-accent-500'\n                  : 'text-primary-300 hover:text-white')}\n            >\n              <div className=\"flex items-center gap-2\">\n                <Users className=\"w-4 h-4\" />\n                Customers\n              </div>\n            </button>\n            <button\n              onClick={() => setActiveTab('content')}\n              className={\"px-3 py-4 text-sm font-medium \" + \n                (activeTab === 'content'\n                  ? 'text-accent-500 border-b-2 border-accent-500'\n                  : 'text-primary-300 hover:text-white')}\n            >\n              <div className=\"flex items-center gap-2\">\n                <FileText className=\"w-4 h-4\" />\n                Content\n              </div>\n            </button>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {renderContent()}\n      </main>\n    </div>\n  );\n}","import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { supabase } from '../lib/supabase';\nimport { useAuth } from '../hooks/useAuth';\n\nexport function AuthCallback() {\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    async function handleCallback() {\n      try {\n        // Get the platform and state from session storage\n        const platform = sessionStorage.getItem('connecting_platform');\n        const storedState = sessionStorage.getItem('oauth_state');\n        \n        if (!platform || !storedState) {\n          throw new Error('Invalid callback state');\n        }\n\n        // Get the code and state from URL params\n        const params = new URLSearchParams(window.location.search);\n        const code = params.get('code');\n        const state = params.get('state');\n\n        if (!code || !state) {\n          throw new Error('Missing required parameters');\n        }\n\n        // Verify state to prevent CSRF\n        if (state !== storedState) {\n          throw new Error('Invalid state parameter');\n        }\n\n        // Store the social media account in Supabase\n        const { error: dbError } = await supabase\n          .from('social_media_accounts')\n          .insert({\n            user_id: user?.id,\n            platform,\n            account_name: `${platform}_user`, // This would come from the platform's API\n            access_token: code, // In production, exchange code for token\n            status: 'active'\n          });\n\n        if (dbError) throw dbError;\n\n        // Clean up session storage\n        sessionStorage.removeItem('connecting_platform');\n        sessionStorage.removeItem('oauth_state');\n\n        // Redirect back to the social media dashboard\n        navigate('/social');\n      } catch (err) {\n        console.error('Error handling callback:', err);\n        setError(err instanceof Error ? err.message : 'Failed to connect account');\n      }\n    }\n\n    handleCallback();\n  }, [navigate, user]);\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen bg-primary-800 flex items-center justify-center p-4\">\n        <div className=\"bg-red-500/10 border border-red-500/50 text-red-500 rounded-lg p-4 max-w-md\">\n          <h2 className=\"text-lg font-medium mb-2\">Connection Failed</h2>\n          <p>{error}</p>\n          <button\n            onClick={() => navigate('/social')}\n            className=\"mt-4 text-white bg-red-500 px-4 py-2 rounded-lg hover:bg-red-600 transition-colors\"\n          >\n            Return to Dashboard\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-primary-800 flex items-center justify-center\">\n      <div className=\"animate-spin rounded-full h-8 w-8 border-t-2 border-accent-500\"></div>\n    </div>\n  );\n}","import { useState, useEffect } from 'react';\nimport { supabase } from '../lib/supabase';\nimport { useAuth } from './useAuth';\nimport { showError, showSuccess } from '../lib/toast';\n\ninterface SeoTracking {\n  id: string;\n  user_id: string;\n  keyword: string;\n  ranking: number | null;\n  url: string | null;\n  tracked_at: string;\n  created_at: string;\n}\n\nexport function useSeoTracking() {\n  const { user } = useAuth();\n  const [trackings, setTrackings] = useState<SeoTracking[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!user) return;\n    loadTrackings();\n  }, [user]);\n\n  const loadTrackings = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const { data, error: fetchError } = await supabase\n        .from('seo_tracking')\n        .select('*')\n        .eq('user_id', user?.id)\n        .order('tracked_at', { ascending: false });\n\n      if (fetchError) throw fetchError;\n      setTrackings(data || []);\n    } catch (err) {\n      console.error('Error loading SEO trackings:', err);\n      setError('Failed to load SEO tracking data');\n      showError('Failed to load SEO tracking data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addKeyword = async (keyword: string, url?: string) => {\n    try {\n      const { data, error: insertError } = await supabase\n        .from('seo_tracking')\n        .insert({\n          keyword,\n          url,\n          user_id: user?.id\n        })\n        .select()\n        .single();\n\n      if (insertError) throw insertError;\n      setTrackings(prev => [data, ...prev]);\n      showSuccess('Keyword added successfully');\n      return data;\n    } catch (err) {\n      console.error('Error adding keyword:', err);\n      showError('Failed to add keyword');\n      throw err;\n    }\n  };\n\n  const updateKeyword = async (id: string, updates: { keyword?: string; url?: string | null }) => {\n    try {\n      const { data, error: updateError } = await supabase\n        .from('seo_tracking')\n        .update(updates)\n        .eq('id', id)\n        .eq('user_id', user?.id)\n        .select()\n        .single();\n\n      if (updateError) throw updateError;\n      setTrackings(prev => prev.map(track => track.id === id ? data : track));\n      showSuccess('Keyword updated successfully');\n      return data;\n    } catch (err) {\n      console.error('Error updating keyword:', err);\n      showError('Failed to update keyword');\n      throw err;\n    }\n  };\n\n  const updateRanking = async (id: string, ranking: number) => {\n    try {\n      const { data, error: updateError } = await supabase\n        .from('seo_tracking')\n        .update({\n          ranking,\n          tracked_at: new Date().toISOString()\n        })\n        .eq('id', id)\n        .eq('user_id', user?.id)\n        .select()\n        .single();\n\n      if (updateError) throw updateError;\n      \n      // Add to historical data\n      const { error: historyError } = await supabase\n        .from('seo_historical_data')\n        .insert({\n          keyword_id: id,\n          ranking,\n          user_id: user?.id\n        });\n\n      if (historyError) throw historyError;\n\n      setTrackings(prev => prev.map(track => track.id === id ? data : track));\n      showSuccess('Ranking updated successfully');\n      return data;\n    } catch (err) {\n      console.error('Error updating ranking:', err);\n      showError('Failed to update ranking');\n      throw err;\n    }\n  };\n\n  const deleteKeyword = async (id: string) => {\n    try {\n      const { error: deleteError } = await supabase\n        .from('seo_tracking')\n        .delete()\n        .eq('id', id)\n        .eq('user_id', user?.id);\n\n      if (deleteError) throw deleteError;\n      setTrackings(prev => prev.filter(track => track.id !== id));\n      showSuccess('Keyword deleted successfully');\n    } catch (err) {\n      console.error('Error deleting keyword:', err);\n      showError('Failed to delete keyword');\n      throw err;\n    }\n  };\n\n  return {\n    trackings,\n    loading,\n    error,\n    addKeyword,\n    updateKeyword,\n    updateRanking,\n    deleteKeyword,\n    refresh: loadTrackings\n  };\n}","import { useState, useEffect } from 'react';\nimport { supabase } from '../lib/supabase';\nimport { useAuth } from './useAuth';\n\ninterface CompetitorTracking {\n  id: string;\n  keyword_id: string;\n  competitor_url: string;\n  competitor_ranking: number | null;\n  tracked_at: string;\n}\n\ninterface HistoricalData {\n  id: string;\n  keyword_id: string;\n  ranking: number;\n  tracked_at: string;\n}\n\ninterface Backlink {\n  id: string;\n  source_url: string;\n  target_url: string;\n  domain_authority: number | null;\n  status: string;\n  first_seen: string;\n  last_checked: string;\n}\n\ninterface PageMetrics {\n  id: string;\n  url: string;\n  load_time: number;\n  mobile_score: number;\n  desktop_score: number;\n  core_web_vitals: {\n    lcp: number;\n    fid: number;\n    cls: number;\n  };\n  checked_at: string;\n}\n\nexport function useSeoEnhanced() {\n  const { user } = useAuth();\n  const [competitors, setCompetitors] = useState<CompetitorTracking[]>([]);\n  const [historicalData, setHistoricalData] = useState<HistoricalData[]>([]);\n  const [backlinks, setBacklinks] = useState<Backlink[]>([]);\n  const [pageMetrics, setPageMetrics] = useState<PageMetrics[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!user) return;\n    loadData();\n  }, [user]);\n\n  const loadData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const [competitorsData, historicalData, backlinksData, metricsData] = await Promise.all([\n        supabase\n          .from('seo_competitor_tracking')\n          .select('*')\n          .order('tracked_at', { ascending: false }),\n        supabase\n          .from('seo_historical_data')\n          .select('*')\n          .order('tracked_at', { ascending: true }),\n        supabase\n          .from('seo_backlinks')\n          .select('*')\n          .order('last_checked', { ascending: false }),\n        supabase\n          .from('seo_page_metrics')\n          .select('*')\n          .order('checked_at', { ascending: false })\n      ]);\n\n      if (competitorsData.error) throw competitorsData.error;\n      if (historicalData.error) throw historicalData.error;\n      if (backlinksData.error) throw backlinksData.error;\n      if (metricsData.error) throw metricsData.error;\n\n      setCompetitors(competitorsData.data || []);\n      setHistoricalData(historicalData.data || []);\n      setBacklinks(backlinksData.data || []);\n      setPageMetrics(metricsData.data || []);\n    } catch (err) {\n      console.error('Error loading SEO data:', err);\n      setError('Failed to load SEO data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addCompetitor = async (keywordId: string, competitorUrl: string) => {\n    try {\n      const { data, error } = await supabase\n        .from('seo_competitor_tracking')\n        .insert({\n          keyword_id: keywordId,\n          competitor_url: competitorUrl,\n          user_id: user?.id\n        })\n        .select()\n        .single();\n\n      if (error) throw error;\n      setCompetitors(prev => [data, ...prev]);\n      return data;\n    } catch (err) {\n      console.error('Error adding competitor:', err);\n      throw err;\n    }\n  };\n\n  const addBacklink = async (sourceUrl: string, targetUrl: string, domainAuthority?: number) => {\n    try {\n      const { data, error } = await supabase\n        .from('seo_backlinks')\n        .insert({\n          source_url: sourceUrl,\n          target_url: targetUrl,\n          domain_authority: domainAuthority,\n          user_id: user?.id\n        })\n        .select()\n        .single();\n\n      if (error) throw error;\n      setBacklinks(prev => [data, ...prev]);\n      return data;\n    } catch (err) {\n      console.error('Error adding backlink:', err);\n      throw err;\n    }\n  };\n\n  const updatePageMetrics = async (\n    url: string,\n    metrics: {\n      load_time: number;\n      mobile_score: number;\n      desktop_score: number;\n      core_web_vitals: {\n        lcp: number;\n        fid: number;\n        cls: number;\n      };\n    }\n  ) => {\n    try {\n      const { data, error } = await supabase\n        .from('seo_page_metrics')\n        .insert({\n          url,\n          ...metrics,\n          user_id: user?.id\n        })\n        .select()\n        .single();\n\n      if (error) throw error;\n      setPageMetrics(prev => [data, ...prev]);\n      return data;\n    } catch (err) {\n      console.error('Error updating page metrics:', err);\n      throw err;\n    }\n  };\n\n  return {\n    competitors,\n    historicalData,\n    backlinks,\n    pageMetrics,\n    loading,\n    error,\n    addCompetitor,\n    addBacklink,\n    updatePageMetrics,\n    refresh: loadData\n  };\n}","import { useState } from 'react';\nimport { useAI } from '../../hooks/useAI';\nimport { AlertCircle, CheckCircle, Search, Zap, Activity, Brain } from 'lucide-react';\n\ninterface SeoAuditProps {\n  url: string;\n  onAudit: (results: any) => void;\n}\n\nexport function SeoAudit({ url, onAudit }: SeoAuditProps) {\n  const [loading, setLoading] = useState(false);\n  const [score, setScore] = useState<number | null>(null);\n  const [issues, setIssues] = useState<any[]>([]);\n\n  const handleAudit = async () => {\n    setLoading(true);\n    try {\n      // Simulated audit results\n      const results = {\n        score: 75,\n        issues: [\n          {\n            type: 'meta',\n            severity: 'high',\n            message: 'Missing meta descriptions on 5 pages',\n            pages: ['/blog', '/products', '/about']\n          },\n          {\n            type: 'speed',\n            severity: 'medium',\n            message: 'Slow loading time on mobile devices',\n            details: 'Average load time: 4.2s'\n          }\n        ]\n      };\n      \n      setScore(results.score);\n      setIssues(results.issues);\n      onAudit(results);\n    } catch (err) {\n      console.error('Audit error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"bg-primary-700/50 rounded-xl p-6\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <div className=\"flex items-center gap-2\">\n            <Search className=\"w-5 h-5 text-accent-500\" />\n            <h3 className=\"text-lg font-medium text-white\">SEO Audit</h3>\n          </div>\n          <button\n            onClick={handleAudit}\n            disabled={loading}\n            className=\"btn-primary py-2 px-4 flex items-center gap-2\"\n          >\n            <Zap className=\"w-4 h-4\" />\n            {loading ? 'Running Audit...' : 'Start Audit'}\n          </button>\n        </div>\n\n        {score !== null && (\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\">\n            <div className=\"bg-primary-600/50 rounded-lg p-4\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-primary-200\">SEO Score</span>\n                <Activity className=\"w-4 h-4 text-accent-500\" />\n              </div>\n              <p className=\"text-3xl font-bold text-white mt-2\">{score}/100</p>\n            </div>\n            \n            <div className=\"bg-primary-600/50 rounded-lg p-4\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-primary-200\">Critical Issues</span>\n                <AlertCircle className=\"w-4 h-4 text-red-500\" />\n              </div>\n              <p className=\"text-3xl font-bold text-white mt-2\">\n                {issues.filter(i => i.severity === 'high').length}\n              </p>\n            </div>\n\n            <div className=\"bg-primary-600/50 rounded-lg p-4\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-primary-200\">Opportunities</span>\n                <Brain className=\"w-4 h-4 text-accent-500\" />\n              </div>\n              <p className=\"text-3xl font-bold text-white mt-2\">\n                {issues.filter(i => i.severity === 'medium').length}\n              </p>\n            </div>\n          </div>\n        )}\n\n        {issues.length > 0 && (\n          <div className=\"space-y-4\">\n            {issues.map((issue, index) => (\n              <div\n                key={index}\n                className={`bg-primary-600/50 rounded-lg p-4 flex items-start gap-3 ${\n                  issue.severity === 'high'\n                    ? 'border-l-4 border-red-500'\n                    : 'border-l-4 border-yellow-500'\n                }`}\n              >\n                {issue.severity === 'high' ? (\n                  <AlertCircle className=\"w-5 h-5 text-red-500 mt-0.5\" />\n                ) : (\n                  <CheckCircle className=\"w-5 h-5 text-yellow-500 mt-0.5\" />\n                )}\n                <div>\n                  <p className=\"text-white font-medium\">{issue.message}</p>\n                  {issue.details && (\n                    <p className=\"text-primary-300 text-sm mt-1\">{issue.details}</p>\n                  )}\n                  {issue.pages && (\n                    <div className=\"mt-2\">\n                      <p className=\"text-sm text-primary-300\">Affected pages:</p>\n                      <div className=\"flex flex-wrap gap-2 mt-1\">\n                        {issue.pages.map((page: string) => (\n                          <span\n                            key={page}\n                            className=\"px-2 py-1 text-xs bg-primary-500/50 rounded-full text-primary-200\"\n                          >\n                            {page}\n                          </span>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}","import { useState, useEffect } from 'react';\nimport { supabase } from '../lib/supabase';\nimport { useAuth } from './useAuth';\n\ninterface KeywordResearch {\n  id: string;\n  keyword: string;\n  search_volume: number;\n  difficulty: number;\n  cpc: number;\n  related_keywords: string[];\n  created_at: string;\n}\n\ninterface ContentSuggestion {\n  id: string;\n  url: string;\n  target_keyword: string;\n  content_score: number;\n  suggestions: {\n    title?: string;\n    meta_description?: string;\n    headers?: string[];\n    content_gaps?: string[];\n    word_count?: {\n      current: number;\n      recommended: number;\n    };\n  };\n  created_at: string;\n  updated_at: string;\n}\n\nexport function useSeoResearch() {\n  const { user } = useAuth();\n  const [keywordResearch, setKeywordResearch] = useState<KeywordResearch[]>([]);\n  const [contentSuggestions, setContentSuggestions] = useState<ContentSuggestion[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!user) return;\n    loadData();\n  }, [user]);\n\n  const loadData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const [keywordData, suggestionData] = await Promise.all([\n        supabase\n          .from('seo_keyword_research')\n          .select('*')\n          .order('created_at', { ascending: false }),\n        supabase\n          .from('seo_content_suggestions')\n          .select('*')\n          .order('updated_at', { ascending: false })\n      ]);\n\n      if (keywordData.error) throw keywordData.error;\n      if (suggestionData.error) throw suggestionData.error;\n\n      setKeywordResearch(keywordData.data || []);\n      setContentSuggestions(suggestionData.data || []);\n    } catch (err) {\n      console.error('Error loading SEO research data:', err);\n      setError('Failed to load SEO research data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addKeywordResearch = async (\n    keyword: string,\n    searchVolume: number,\n    difficulty: number,\n    cpc: number,\n    relatedKeywords: string[]\n  ) => {\n    try {\n      const { data, error } = await supabase\n        .from('seo_keyword_research')\n        .insert({\n          keyword,\n          search_volume: searchVolume,\n          difficulty,\n          cpc,\n          related_keywords: relatedKeywords,\n          user_id: user?.id\n        })\n        .select()\n        .single();\n\n      if (error) throw error;\n      setKeywordResearch(prev => [data, ...prev]);\n      return data;\n    } catch (err) {\n      console.error('Error adding keyword research:', err);\n      throw err;\n    }\n  };\n\n  const addContentSuggestion = async (\n    url: string,\n    targetKeyword: string,\n    contentScore: number,\n    suggestions: ContentSuggestion['suggestions']\n  ) => {\n    try {\n      const { data, error } = await supabase\n        .from('seo_content_suggestions')\n        .insert({\n          url,\n          target_keyword: targetKeyword,\n          content_score: contentScore,\n          suggestions,\n          user_id: user?.id\n        })\n        .select()\n        .single();\n\n      if (error) throw error;\n      setContentSuggestions(prev => [data, ...prev]);\n      return data;\n    } catch (err) {\n      console.error('Error adding content suggestion:', err);\n      throw err;\n    }\n  };\n\n  return {\n    keywordResearch,\n    contentSuggestions,\n    loading,\n    error,\n    addKeywordResearch,\n    addContentSuggestion,\n    refresh: loadData\n  };\n}","import { useState } from 'react';\nimport { useAI } from '../../hooks/useAI';\nimport { useSeoResearch } from '../../hooks/useSeoResearch';\nimport { Search, TrendingUp, Target, Brain, ArrowUp, ArrowDown, DollarSign } from 'lucide-react';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n  LineChart,\n  Line\n} from 'recharts';\n\ninterface KeywordResearchProps {\n  onKeywordSelect: (keyword: string) => void;\n}\n\nexport function KeywordResearch({ onKeywordSelect }: KeywordResearchProps) {\n  const { keywordResearch, contentSuggestions, loading, addKeywordResearch } = useSeoResearch();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [analyzing, setAnalyzing] = useState(false);\n  const [selectedKeyword, setSelectedKeyword] = useState<string | null>(null);\n\n  const handleAnalyze = async () => {\n    if (!searchTerm) return;\n    \n    setAnalyzing(true);\n    try {\n      await addKeywordResearch(\n        searchTerm,\n        Math.floor(Math.random() * 10000), // Simulated search volume\n        Math.random() * 100, // Simulated difficulty\n        Math.random() * 10, // Simulated CPC\n        generateRelatedKeywords(searchTerm)\n      );\n    } catch (err) {\n      console.error('Analysis error:', err);\n    } finally {\n      setAnalyzing(false);\n    }\n  };\n\n  const generateRelatedKeywords = (keyword: string) => {\n    // Simulated related keywords\n    const prefixes = ['best', 'top', 'how to', 'why', 'when'];\n    const suffixes = ['guide', 'tutorial', 'tips', 'examples', 'services'];\n    \n    return [\n      ...prefixes.map(prefix => `${prefix} ${keyword}`),\n      ...suffixes.map(suffix => `${keyword} ${suffix}`)\n    ];\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Search Bar */}\n      <div className=\"bg-primary-700/50 rounded-xl p-6\">\n        <div className=\"flex items-center gap-4 mb-6\">\n          <div className=\"flex-1\">\n            <div className=\"relative\">\n              <Search className=\"absolute left-4 top-1/2 transform -translate-y-1/2 text-primary-400 w-5 h-5\" />\n              <input\n                type=\"text\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                placeholder=\"Enter a keyword to analyze...\"\n                className=\"w-full pl-12 pr-4 py-3 bg-primary-600 border-primary-500 rounded-lg text-white placeholder-primary-400\"\n              />\n            </div>\n          </div>\n          <button\n            onClick={handleAnalyze}\n            disabled={analyzing || !searchTerm}\n            className=\"btn-primary py-3 px-6 flex items-center gap-2\"\n          >\n            <Brain className=\"w-4 h-4\" />\n            {analyzing ? 'Analyzing...' : 'Analyze'}\n          </button>\n        </div>\n\n        {/* Keyword Metrics */}\n        {keywordResearch.length > 0 && (\n          <div className=\"grid grid-cols-4 gap-6\">\n            <div className=\"bg-primary-600/50 rounded-lg p-4\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <span className=\"text-primary-200\">Search Volume</span>\n                <TrendingUp className=\"w-4 h-4 text-accent-500\" />\n              </div>\n              <p className=\"text-2xl font-bold text-white\">\n                {keywordResearch[0].search_volume.toLocaleString()}\n              </p>\n            </div>\n\n            <div className=\"bg-primary-600/50 rounded-lg p-4\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <span className=\"text-primary-200\">Difficulty</span>\n                <Target className=\"w-4 h-4 text-accent-500\" />\n              </div>\n              <p className=\"text-2xl font-bold text-white\">\n                {keywordResearch[0].difficulty.toFixed(1)}/100\n              </p>\n            </div>\n\n            <div className=\"bg-primary-600/50 rounded-lg p-4\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <span className=\"text-primary-200\">CPC</span>\n                <DollarSign className=\"w-4 h-4 text-accent-500\" />\n              </div>\n              <p className=\"text-2xl font-bold text-white\">\n                ${keywordResearch[0].cpc.toFixed(2)}\n              </p>\n            </div>\n\n            <div className=\"bg-primary-600/50 rounded-lg p-4\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <span className=\"text-primary-200\">Related Keywords</span>\n                <Search className=\"w-4 h-4 text-accent-500\" />\n              </div>\n              <p className=\"text-2xl font-bold text-white\">\n                {keywordResearch[0].related_keywords.length}\n              </p>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Keyword Analysis */}\n      {keywordResearch.length > 0 && (\n        <div className=\"grid grid-cols-2 gap-6\">\n          {/* Related Keywords */}\n          <div className=\"bg-primary-700/50 rounded-xl p-6\">\n            <h3 className=\"text-lg font-medium text-white mb-4\">Related Keywords</h3>\n            <div className=\"space-y-3\">\n              {keywordResearch[0].related_keywords.map((keyword, index) => (\n                <div\n                  key={index}\n                  className=\"flex items-center justify-between bg-primary-600/50 rounded-lg p-3 cursor-pointer hover:bg-primary-600 transition-colors\"\n                  onClick={() => {\n                    setSelectedKeyword(keyword);\n                    onKeywordSelect(keyword);\n                  }}\n                >\n                  <span className=\"text-white\">{keyword}</span>\n                  <div className=\"flex items-center gap-4 text-sm\">\n                    <span className=\"text-primary-300\">\n                      Volume: {Math.floor(Math.random() * 1000).toLocaleString()}\n                    </span>\n                    <span className=\"text-primary-300\">\n                      KD: {Math.floor(Math.random() * 100)}\n                    </span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Trend Analysis */}\n          <div className=\"bg-primary-700/50 rounded-xl p-6\">\n            <h3 className=\"text-lg font-medium text-white mb-4\">Search Trend</h3>\n            <div className=\"h-64\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <LineChart data={[\n                  { month: 'Jan', volume: 1200 },\n                  { month: 'Feb', volume: 1400 },\n                  { month: 'Mar', volume: 1100 },\n                  { month: 'Apr', volume: 1600 },\n                  { month: 'May', volume: 1800 },\n                  { month: 'Jun', volume: 2000 }\n                ]}>\n                  <XAxis dataKey=\"month\" stroke=\"#94a3b8\" />\n                  <YAxis stroke=\"#94a3b8\" />\n                  <Tooltip\n                    contentStyle={{\n                      backgroundColor: '#1e293b',\n                      border: 'none',\n                      borderRadius: '0.5rem',\n                      color: '#fff'\n                    }}\n                  />\n                  <Line\n                    type=\"monotone\"\n                    dataKey=\"volume\"\n                    stroke=\"#f97316\"\n                    strokeWidth={2}\n                  />\n                </LineChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}","import { useState } from 'react';\nimport { useAI } from '../../hooks/useAI';\nimport {\n  Settings,\n  Smartphone,\n  Zap,\n  Search,\n  AlertCircle,\n  CheckCircle,\n  ExternalLink,\n  Download,\n  Code,\n  RefreshCw\n} from 'lucide-react';\n\ninterface TechnicalSeoProps {\n  onIssueFixed: (issue: any) => void;\n}\n\nexport function TechnicalSeo({ onIssueFixed }: TechnicalSeoProps) {\n  const [scanning, setScanning] = useState(false);\n  const [selectedTab, setSelectedTab] = useState<'health' | 'mobile' | 'speed' | 'crawl'>('health');\n  const [issues, setIssues] = useState<any[]>([]);\n\n  const handleScan = async () => {\n    setScanning(true);\n    try {\n      // Simulated technical SEO scan results\n      const results = [\n        {\n          type: 'critical',\n          category: 'health',\n          issue: 'Missing SSL Certificate',\n          impact: 'Security and SEO',\n          recommendation: 'Install SSL certificate to enable HTTPS'\n        },\n        {\n          type: 'warning',\n          category: 'mobile',\n          issue: 'Non-responsive elements detected',\n          impact: 'Mobile UX',\n          recommendation: 'Update CSS for mobile responsiveness'\n        },\n        {\n          type: 'critical',\n          category: 'speed',\n          issue: 'Large unoptimized images',\n          impact: 'Page Load Speed',\n          recommendation: 'Compress and optimize images'\n        }\n      ];\n      \n      setIssues(results);\n    } catch (err) {\n      console.error('Scan error:', err);\n    } finally {\n      setScanning(false);\n    }\n  };\n\n  const renderTabContent = () => {\n    switch (selectedTab) {\n      case 'health':\n        return (\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-3 gap-6\">\n              <div className=\"bg-primary-600/50 rounded-lg p-4\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <span className=\"text-primary-200\">SSL Status</span>\n                  <CheckCircle className=\"w-4 h-4 text-green-400\" />\n                </div>\n                <p className=\"text-white font-medium\">Secure (HTTPS)</p>\n              </div>\n\n              <div className=\"bg-primary-600/50 rounded-lg p-4\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <span className=\"text-primary-200\">Robots.txt</span>\n                  <AlertCircle className=\"w-4 h-4 text-yellow-400\" />\n                </div>\n                <p className=\"text-white font-medium\">Needs Update</p>\n              </div>\n\n              <div className=\"bg-primary-600/50 rounded-lg p-4\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <span className=\"text-primary-200\">Sitemap</span>\n                  <CheckCircle className=\"w-4 h-4 text-green-400\" />\n                </div>\n                <p className=\"text-white font-medium\">Valid XML</p>\n              </div>\n            </div>\n\n            <div className=\"bg-primary-600/50 rounded-lg p-4\">\n              <h4 className=\"text-lg font-medium text-white mb-4\">Health Check Results</h4>\n              <div className=\"space-y-3\">\n                {issues\n                  .filter(issue => issue.category === 'health')\n                  .map((issue, index) => (\n                    <div\n                      key={index}\n                      className={`p-4 rounded-lg ${\n                        issue.type === 'critical'\n                          ? 'bg-red-500/10 border-l-4 border-red-500'\n                          : 'bg-yellow-500/10 border-l-4 border-yellow-500'\n                      }`}\n                    >\n                      <div className=\"flex items-start gap-3\">\n                        {issue.type === 'critical' ? (\n                          <AlertCircle className=\"w-5 h-5 text-red-500 mt-0.5\" />\n                        ) : (\n                          <AlertCircle className=\"w-5 h-5 text-yellow-500 mt-0.5\" />\n                        )}\n                        <div>\n                          <p className=\"text-white font-medium\">{issue.issue}</p>\n                          <p className=\"text-primary-300 text-sm mt-1\">\n                            {issue.recommendation}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          </div>\n        );\n\n      case 'mobile':\n        return (\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-2 gap-6\">\n              <div className=\"bg-primary-600/50 rounded-lg p-4\">\n                <div className=\"flex items-center justify-between mb-4\">\n                  <h4 className=\"text-lg font-medium text-white\">Mobile Score</h4>\n                  <Smartphone className=\"w-5 h-5 text-accent-500\" />\n                </div>\n                <div className=\"flex items-center gap-4\">\n                  <div className=\"text-3xl font-bold text-white\">86</div>\n                  <div className=\"text-sm text-primary-300\">/ 100</div>\n                </div>\n              </div>\n\n              <div className=\"bg-primary-600/50 rounded-lg p-4\">\n                <div className=\"flex items-center justify-between mb-4\">\n                  <h4 className=\"text-lg font-medium text-white\">Viewport</h4>\n                  <CheckCircle className=\"w-5 h-5 text-green-400\" />\n                </div>\n                <p className=\"text-primary-300\">Properly configured for mobile devices</p>\n              </div>\n            </div>\n\n            <div className=\"bg-primary-600/50 rounded-lg p-4\">\n              <h4 className=\"text-lg font-medium text-white mb-4\">Mobile Issues</h4>\n              <div className=\"space-y-3\">\n                {issues\n                  .filter(issue => issue.category === 'mobile')\n                  .map((issue, index) => (\n                    <div\n                      key={index}\n                      className=\"p-4 bg-primary-500/20 rounded-lg\"\n                    >\n                      <div className=\"flex items-start gap-3\">\n                        <AlertCircle className=\"w-5 h-5 text-yellow-500 mt-0.5\" />\n                        <div>\n                          <p className=\"text-white font-medium\">{issue.issue}</p>\n                          <p className=\"text-primary-300 text-sm mt-1\">\n                            {issue.recommendation}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          </div>\n        );\n\n      case 'speed':\n        return (\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-3 gap-6\">\n              <div className=\"bg-primary-600/50 rounded-lg p-4\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <span className=\"text-primary-200\">Load Time</span>\n                  <Zap className=\"w-4 h-4 text-accent-500\" />\n                </div>\n                <p className=\"text-2xl font-bold text-white\">2.3s</p>\n              </div>\n\n              <div className=\"bg-primary-600/50 rounded-lg p-4\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <span className=\"text-primary-200\">First Paint</span>\n                  <Zap className=\"w-4 h-4 text-accent-500\" />\n                </div>\n                <p className=\"text-2xl font-bold text-white\">0.8s</p>\n              </div>\n\n              <div className=\"bg-primary-600/50 rounded-lg p-4\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <span className=\"text-primary-200\">TTFB</span>\n                  <Zap className=\"w-4 h-4 text-accent-500\" />\n                </div>\n                <p className=\"text-2xl font-bold text-white\">180ms</p>\n              </div>\n            </div>\n\n            <div className=\"bg-primary-600/50 rounded-lg p-4\">\n              <h4 className=\"text-lg font-medium text-white mb-4\">Speed Optimization</h4>\n              <div className=\"space-y-3\">\n                {issues\n                  .filter(issue => issue.category === 'speed')\n                  .map((issue, index) => (\n                    <div\n                      key={index}\n                      className=\"p-4 bg-primary-500/20 rounded-lg\"\n                    >\n                      <div className=\"flex items-start gap-3\">\n                        <AlertCircle className=\"w-5 h-5 text-red-500 mt-0.5\" />\n                        <div>\n                          <p className=\"text-white font-medium\">{issue.issue}</p>\n                          <p className=\"text-primary-300 text-sm mt-1\">\n                            {issue.recommendation}\n                          </p>\n                          <button\n                            onClick={() => onIssueFixed(issue)}\n                            className=\"mt-2 text-sm text-accent-500 hover:text-accent-400\"\n                          >\n                            Fix Issue\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          </div>\n        );\n\n      case 'crawl':\n        return (\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-2 gap-6\">\n              <div className=\"bg-primary-600/50 rounded-lg p-4\">\n                <div className=\"flex items-center justify-between mb-4\">\n                  <h4 className=\"text-lg font-medium text-white\">Crawl Status</h4>\n                  <Search className=\"w-5 h-5 text-accent-500\" />\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <CheckCircle className=\"w-5 h-5 text-green-400\" />\n                  <span className=\"text-white\">Crawlable</span>\n                </div>\n              </div>\n\n              <div className=\"bg-primary-600/50 rounded-lg p-4\">\n                <div className=\"flex items-center justify-between mb-4\">\n                  <h4 className=\"text-lg font-medium text-white\">Indexed Pages</h4>\n                  <Code className=\"w-5 h-5 text-accent-500\" />\n                </div>\n                <p className=\"text-2xl font-bold text-white\">128</p>\n              </div>\n            </div>\n\n            <div className=\"bg-primary-600/50 rounded-lg p-4\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <h4 className=\"text-lg font-medium text-white\">Crawl Configuration</h4>\n                <div className=\"flex gap-2\">\n                  <button className=\"btn-secondary py-2 px-4 flex items-center gap-2\">\n                    <Download className=\"w-4 h-4\" />\n                    Download Sitemap\n                  </button>\n                  <button className=\"btn-secondary py-2 px-4 flex items-center gap-2\">\n                    <Code className=\"w-4 h-4\" />\n                    View robots.txt\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"bg-primary-700/50 rounded-xl p-6\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <div className=\"flex items-center gap-2\">\n            <Settings className=\"w-5 h-5 text-accent-500\" />\n            <h3 className=\"text-lg font-medium text-white\">Technical SEO</h3>\n          </div>\n          <button\n            onClick={handleScan}\n            disabled={scanning}\n            className=\"btn-primary py-2 px-4 flex items-center gap-2\"\n          >\n            <RefreshCw className={`w-4 h-4 ${scanning ? 'animate-spin' : ''}`} />\n            {scanning ? 'Scanning...' : 'Run Scan'}\n          </button>\n        </div>\n\n        {/* Navigation Tabs */}\n        <div className=\"flex space-x-4 border-b border-primary-600 mb-6\">\n          <button\n            onClick={() => setSelectedTab('health')}\n            className={`px-4 py-2 ${\n              selectedTab === 'health'\n                ? 'text-accent-500 border-b-2 border-accent-500'\n                : 'text-primary-300 hover:text-white'\n            }`}\n          >\n            Site Health\n          </button>\n          <button\n            onClick={() => setSelectedTab('mobile')}\n            className={`px-4 py-2 ${\n              selectedTab === 'mobile'\n                ? 'text-accent-500 border-b-2 border-accent-500'\n                : 'text-primary-300 hover:text-white'\n            }`}\n          >\n            Mobile Usability\n          </button>\n          <button\n            onClick={() => setSelectedTab('speed')}\n            className={`px-4 py-2 ${\n              selectedTab === 'speed'\n                ? 'text-accent-500 border-b-2 border-accent-500'\n                : 'text-primary-300 hover:text-white'\n            }`}\n          >\n            Page Speed\n          </button>\n          <button\n            onClick={() => setSelectedTab('crawl')}\n            className={`px-4 py-2 ${\n              selectedTab === 'crawl'\n                ? 'text-accent-500 border-b-2 border-accent-500'\n                : 'text-primary-300 hover:text-white'\n            }`}\n          >\n            Crawlability\n          </button>\n        </div>\n\n        {/* Tab Content */}\n        {renderTabContent()}\n      </div>\n    </div>\n  );\n}","import { useState } from 'react';\nimport { useSeoTracking } from '../hooks/useSeoTracking';\nimport { useSeoEnhanced } from '../hooks/useSeoEnhanced';\nimport { BackButton } from './BackButton';\nimport { AIFeatureIndicator } from './AIFeatureIndicator';\nimport { SeoAudit } from './seo/SeoAudit';\nimport { KeywordResearch } from './seo/KeywordResearch';\nimport { CompetitorAnalysis } from './seo/CompetitorAnalysis';\nimport { TechnicalSeo } from './seo/TechnicalSeo';\nimport {\n  Search,\n  Plus,\n  Trash2,\n  ArrowUp,\n  ArrowDown,\n  Minus,\n  ExternalLink,\n  Edit2,\n  X,\n  LineChart,\n  Brain,\n  AlertCircle,\n  Settings\n} from 'lucide-react';\n\nexport function SeoTrackingManager() {\n  const { trackings, loading, error, addKeyword, updateKeyword, updateRanking, deleteKeyword } = useSeoTracking();\n  const { competitors, historicalData, backlinks, pageMetrics } = useSeoEnhanced();\n  const [activeTab, setActiveTab] = useState<'tracking' | 'audit' | 'research' | 'technical'>('tracking');\n  const [showAddKeyword, setShowAddKeyword] = useState(false);\n  const [keyword, setKeyword] = useState('');\n  const [url, setUrl] = useState('');\n\n  const renderActiveTab = () => {\n    switch (activeTab) {\n      case 'audit':\n        return (\n          <SeoAudit \n            url=\"https://example.com\"\n            onAudit={(results) => {\n              console.log('Audit results:', results);\n            }}\n          />\n        );\n      case 'research':\n        return (\n          <KeywordResearch \n            onKeywordSelect={(keyword) => {\n              console.log('Selected keyword:', keyword);\n            }}\n          />\n        );\n      case 'technical':\n        return (\n          <TechnicalSeo \n            onIssueFixed={(issue) => {\n              console.log('Fixed issue:', issue);\n            }}\n          />\n        );\n      default:\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"flex justify-between items-center\">\n              <h3 className=\"text-lg font-medium text-white\">Keyword Tracking</h3>\n              <button\n                onClick={() => setShowAddKeyword(true)}\n                className=\"btn-primary py-2 px-4 flex items-center gap-2\"\n              >\n                <Plus className=\"w-4 h-4\" />\n                Add Keyword\n              </button>\n            </div>\n\n            {/* Keyword Table */}\n            <div className=\"bg-primary-700/50 rounded-xl overflow-hidden\">\n              <table className=\"w-full\">\n                <thead>\n                  <tr className=\"border-b border-primary-600\">\n                    <th className=\"text-left p-4 text-primary-200\">Keyword</th>\n                    <th className=\"text-left p-4 text-primary-200\">URL</th>\n                    <th className=\"text-center p-4 text-primary-200\">Ranking</th>\n                    <th className=\"text-center p-4 text-primary-200\">Change</th>\n                    <th className=\"text-center p-4 text-primary-200\">Last Updated</th>\n                    <th className=\"text-right p-4 text-primary-200\">Actions</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {trackings.map((track) => (\n                    <tr key={track.id} className=\"border-b border-primary-600/50\">\n                      <td className=\"p-4 text-white\">{track.keyword}</td>\n                      <td className=\"p-4\">\n                        {track.url ? (\n                          <a\n                            href={track.url}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            className=\"text-accent-500 hover:text-accent-400 flex items-center gap-1\"\n                          >\n                            {new URL(track.url).hostname}\n                            <ExternalLink className=\"w-3 h-3\" />\n                          </a>\n                        ) : (\n                          <span className=\"text-primary-400\">-</span>\n                        )}\n                      </td>\n                      <td className=\"p-4 text-center text-white\">\n                        {track.ranking || '-'}\n                      </td>\n                      <td className=\"p-4 text-center\">\n                        {track.ranking ? (\n                          track.ranking > 0 ? (\n                            <div className=\"flex items-center justify-center gap-1 text-green-400\">\n                              <ArrowUp className=\"w-4 h-4\" />\n                              <span>{track.ranking}</span>\n                            </div>\n                          ) : (\n                            <div className=\"flex items-center justify-center gap-1 text-red-400\">\n                              <ArrowDown className=\"w-4 h-4\" />\n                              <span>{Math.abs(track.ranking)}</span>\n                            </div>\n                          )\n                        ) : (\n                          <Minus className=\"w-4 h-4 text-primary-400 mx-auto\" />\n                        )}\n                      </td>\n                      <td className=\"p-4 text-center text-primary-300\">\n                        {new Date(track.tracked_at).toLocaleDateString()}\n                      </td>\n                      <td className=\"p-4 text-right\">\n                        <div className=\"flex items-center justify-end gap-2\">\n                          <button\n                            onClick={() => updateKeyword(track.id, { keyword: track.keyword })}\n                            className=\"text-primary-400 hover:text-white transition-colors\"\n                          >\n                            <Edit2 className=\"w-4 h-4\" />\n                          </button>\n                          <button\n                            onClick={() => deleteKeyword(track.id)}\n                            className=\"text-primary-400 hover:text-red-400 transition-colors\"\n                          >\n                            <Trash2 className=\"w-4 h-4\" />\n                          </button>\n                        </div>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center gap-4\">\n          <BackButton />\n          <h2 className=\"text-xl font-semibold text-white\">SEO Management</h2>\n          <AIFeatureIndicator feature=\"SEO Optimization\" />\n        </div>\n      </div>\n\n      {/* Navigation Tabs */}\n      <div className=\"flex space-x-4 border-b border-primary-700\">\n        <button\n          onClick={() => setActiveTab('tracking')}\n          className={`px-4 py-2 ${\n            activeTab === 'tracking'\n              ? 'text-accent-500 border-b-2 border-accent-500'\n              : 'text-primary-300 hover:text-white'\n          }`}\n        >\n          <div className=\"flex items-center gap-2\">\n            <Search className=\"w-4 h-4\" />\n            Keyword Tracking\n          </div>\n        </button>\n        <button\n          onClick={() => setActiveTab('audit')}\n          className={`px-4 py-2 ${\n            activeTab === 'audit'\n              ? 'text-accent-500 border-b-2 border-accent-500'\n              : 'text-primary-300 hover:text-white'\n          }`}\n        >\n          <div className=\"flex items-center gap-2\">\n            <Brain className=\"w-4 h-4\" />\n            SEO Audit\n          </div>\n        </button>\n        <button\n          onClick={() => setActiveTab('research')}\n          className={`px-4 py-2 ${\n            activeTab === 'research'\n              ? 'text-accent-500 border-b-2 border-accent-500'\n              : 'text-primary-300 hover:text-white'\n          }`}\n        >\n          <div className=\"flex items-center gap-2\">\n            <LineChart className=\"w-4 h-4\" />\n            Keyword Research\n          </div>\n        </button>\n        <button\n          onClick={() => setActiveTab('technical')}\n          className={`px-4 py-2 ${\n            activeTab === 'technical'\n              ? 'text-accent-500 border-b-2 border-accent-500'\n              : 'text-primary-300 hover:text-white'\n          }`}\n        >\n          <div className=\"flex items-center gap-2\">\n            <Settings className=\"w-4 h-4\" />\n            Technical SEO\n          </div>\n        </button>\n      </div>\n\n      {/* Active Tab Content */}\n      {renderActiveTab()}\n\n      {/* Add Keyword Modal */}\n      {showAddKeyword && (\n        <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center p-4\">\n          <div className=\"bg-primary-700 rounded-xl p-6 w-full max-w-md\">\n            <div className=\"flex items-center justify-between mb-6\">\n              <h3 className=\"text-lg font-medium text-white\">Add Keyword</h3>\n              <button\n                onClick={() => setShowAddKeyword(false)}\n                className=\"text-primary-300 hover:text-white\"\n              >\n                <X className=\"w-5 h-5\" />\n              </button>\n            </div>\n\n            <form onSubmit={async (e) => {\n              e.preventDefault();\n              await addKeyword(keyword, url);\n              setShowAddKeyword(false);\n              setKeyword('');\n              setUrl('');\n            }}>\n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-primary-200 mb-1\">\n                    Keyword\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={keyword}\n                    onChange={(e) => setKeyword(e.target.value)}\n                    className=\"w-full rounded-lg bg-primary-600 border-primary-500 text-white px-4 py-2\"\n                    required\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-primary-200 mb-1\">\n                    Target URL (optional)\n                  </label>\n                  <input\n                    type=\"url\"\n                    value={url}\n                    onChange={(e) => setUrl(e.target.value)}\n                    className=\"w-full rounded-lg bg-primary-600 border-primary-500 text-white px-4 py-2\"\n                    placeholder=\"https://example.com/page\"\n                  />\n                </div>\n\n                <div className=\"flex justify-end gap-4\">\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowAddKeyword(false)}\n                    className=\"px-4 py-2 text-primary-300 hover:text-white transition-colors\"\n                  >\n                    Cancel\n                  </button>\n                  <button type=\"submit\" className=\"btn-primary py-2 px-6\">\n                    Add Keyword\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}","import { useState, useEffect } from 'react';\nimport { supabase } from '../lib/supabase';\nimport { useAuth } from './useAuth';\nimport { showError, showSuccess } from '../lib/toast';\n\nexport function useEmailCampaigns() {\n  const { user } = useAuth();\n  const [campaigns, setCampaigns] = useState<any[]>([]);\n  const [templates, setTemplates] = useState<any[]>([]);\n  const [subscribers, setSubscribers] = useState<any[]>([]);\n  const [analytics, setAnalytics] = useState<Record<string, any>>({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!user) return;\n\n    let mounted = true;\n    loadData();\n\n    // Subscribe to real-time updates\n    const campaignsSubscription = supabase\n      .channel('email_campaigns_changes')\n      .on('postgres_changes', {\n        event: '*',\n        schema: 'public',\n        table: 'email_campaigns',\n        filter: `user_id=eq.${user.id}`\n      }, () => {\n        if (mounted) loadData();\n      })\n      .subscribe();\n\n    return () => {\n      mounted = false;\n      campaignsSubscription.unsubscribe();\n    };\n  }, [user]);\n\n  const loadData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const [campaignsData, templatesData, subscribersData, analyticsData] = await Promise.all([\n        supabase\n          .from('email_campaigns')\n          .select('*')\n          .eq('user_id', user?.id)\n          .order('created_at', { ascending: false }),\n        supabase\n          .from('email_templates')\n          .select('*')\n          .eq('user_id', user?.id)\n          .order('created_at', { ascending: false }),\n        supabase\n          .from('email_subscribers')\n          .select('*')\n          .eq('user_id', user?.id)\n          .order('created_at', { ascending: false }),\n        supabase\n          .from('campaign_analytics')\n          .select('*')\n          .eq('user_id', user?.id)\n      ]);\n\n      if (campaignsData.error) throw campaignsData.error;\n      if (templatesData.error) throw templatesData.error;\n      if (subscribersData.error) throw subscribersData.error;\n      if (analyticsData.error) throw analyticsData.error;\n\n      setCampaigns(campaignsData.data || []);\n      setTemplates(templatesData.data || []);\n      setSubscribers(subscribersData.data || []);\n      \n      const analyticsMap = (analyticsData.data || []).reduce((acc, item) => {\n        acc[item.campaign_id] = item;\n        return acc;\n      }, {} as Record<string, any>);\n      setAnalytics(analyticsMap);\n\n    } catch (err) {\n      console.error('Error loading email campaign data:', err);\n      setError('Failed to load email campaign data');\n      showError('Failed to load email campaign data. Retrying...');\n      \n      // Retry after a delay\n      setTimeout(loadData, 5000);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const createTemplate = async (name: string, subject: string, content: string) => {\n    try {\n      const { data, error: insertError } = await supabase\n        .from('email_templates')\n        .insert({\n          name,\n          subject,\n          content,\n          user_id: user?.id\n        })\n        .select()\n        .single();\n\n      if (insertError) throw insertError;\n      setTemplates(prev => [data, ...prev]);\n      showSuccess('Template created successfully');\n      return data;\n    } catch (err) {\n      console.error('Error creating template:', err);\n      showError('Failed to create template');\n      throw err;\n    }\n  };\n\n  const createCampaign = async (name: string, templateId: string, scheduledFor?: Date) => {\n    try {\n      const { data, error: insertError } = await supabase\n        .from('email_campaigns')\n        .insert({\n          name,\n          template_id: templateId,\n          scheduled_for: scheduledFor?.toISOString(),\n          status: scheduledFor ? 'scheduled' : 'draft',\n          user_id: user?.id\n        })\n        .select()\n        .single();\n\n      if (insertError) throw insertError;\n      setCampaigns(prev => [data, ...prev]);\n      showSuccess('Campaign created successfully');\n      return data;\n    } catch (err) {\n      console.error('Error creating campaign:', err);\n      showError('Failed to create campaign');\n      throw err;\n    }\n  };\n\n  const addSubscriber = async (email: string, name?: string) => {\n    try {\n      const { data, error: insertError } = await supabase\n        .from('email_subscribers')\n        .insert({\n          email,\n          name,\n          user_id: user?.id,\n          status: 'active'\n        })\n        .select()\n        .single();\n\n      if (insertError) throw insertError;\n      setSubscribers(prev => [data, ...prev]);\n      showSuccess('Subscriber added successfully');\n      return data;\n    } catch (err) {\n      console.error('Error adding subscriber:', err);\n      showError('Failed to add subscriber');\n      throw err;\n    }\n  };\n\n  const updateCampaignStatus = async (campaignId: string, status: string) => {\n    try {\n      const { data, error: updateError } = await supabase\n        .from('email_campaigns')\n        .update({ status })\n        .eq('id', campaignId)\n        .eq('user_id', user?.id)\n        .select()\n        .single();\n\n      if (updateError) throw updateError;\n      setCampaigns(prev => prev.map(campaign => \n        campaign.id === campaignId ? data : campaign\n      ));\n      showSuccess('Campaign status updated successfully');\n      return data;\n    } catch (err) {\n      console.error('Error updating campaign status:', err);\n      showError('Failed to update campaign status');\n      throw err;\n    }\n  };\n\n  return {\n    campaigns,\n    templates,\n    subscribers,\n    analytics,\n    loading,\n    error,\n    createTemplate,\n    createCampaign,\n    addSubscriber,\n    updateCampaignStatus,\n    refresh: loadData\n  };\n}","import { useState } from 'react';\nimport { useEmailCampaigns } from './useEmailCampaigns';\n\nexport function useEmailAutomation() {\n  const { createCampaign } = useEmailCampaigns();\n  const [isScheduling, setIsScheduling] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const scheduleAutomatedCampaigns = async (\n    templateId: string,\n    frequency: 'daily' | 'weekly' | 'monthly' = 'weekly',\n    timeOfDay: string = '10:00',\n    count: number = 4\n  ) => {\n    try {\n      setIsScheduling(true);\n      setError(null);\n\n      const now = new Date();\n      const campaigns = [];\n\n      for (let i = 0; i < count; i++) {\n        const scheduledDate = new Date(now);\n        \n        switch (frequency) {\n          case 'daily':\n            scheduledDate.setDate(scheduledDate.getDate() + i);\n            break;\n          case 'weekly':\n            scheduledDate.setDate(scheduledDate.getDate() + (i * 7));\n            break;\n          case 'monthly':\n            scheduledDate.setMonth(scheduledDate.getMonth() + i);\n            break;\n        }\n\n        // Set the time of day\n        const [hours, minutes] = timeOfDay.split(':');\n        scheduledDate.setHours(parseInt(hours, 10), parseInt(minutes, 10), 0, 0);\n\n        campaigns.push({\n          name: `Automated Campaign ${i + 1}`,\n          scheduledFor: scheduledDate\n        });\n      }\n\n      // Create all scheduled campaigns\n      await Promise.all(campaigns.map(campaign => \n        createCampaign(\n          campaign.name,\n          templateId,\n          campaign.scheduledFor\n        )\n      ));\n\n    } catch (err) {\n      setError('Failed to schedule automated campaigns');\n      console.error('Automation error:', err);\n      throw err;\n    } finally {\n      setIsScheduling(false);\n    }\n  };\n\n  return {\n    scheduleAutomatedCampaigns,\n    isScheduling,\n    error\n  };\n}","import { useState } from 'react';\nimport { useAI } from '../../hooks/useAI';\nimport { Mail, Sparkles, Send, Image as ImageIcon, Link, Type } from 'lucide-react';\nimport { showError } from '../../lib/toast';\n\ninterface EmailBuilderProps {\n  templates?: any[];\n  onSave: (campaign: any) => Promise<void>;\n  onAIAssist?: (type: string, content: string) => Promise<any>;\n}\n\nexport function EmailBuilder({ templates = [], onSave, onAIAssist }: EmailBuilderProps) {\n  const [subject, setSubject] = useState('');\n  const [content, setContent] = useState('');\n  const [selectedTemplate, setSelectedTemplate] = useState('');\n  const [generating, setGenerating] = useState(false);\n  const { generateContent } = useAI();\n\n  const handleAIAssist = async (type: 'subject' | 'content') => {\n    try {\n      setGenerating(true);\n      const prompt = type === 'subject' \n        ? `Generate an engaging email subject line about: ${subject || 'our product/service'}`\n        : `Generate engaging email content about: ${content || 'our product/service'}`;\n\n      const result = onAIAssist \n        ? await onAIAssist(type, prompt)\n        : await generateContent(prompt, 'email');\n\n      if (type === 'subject') {\n        setSubject(result.content);\n      } else {\n        setContent(result.content);\n      }\n    } catch (err) {\n      console.error('Error generating content:', err);\n      showError('Failed to generate content. Please try again.');\n    } finally {\n      setGenerating(false);\n    }\n  };\n\n  const handleSave = async () => {\n    if (!subject || !content) {\n      showError('Please provide both subject and content');\n      return;\n    }\n\n    try {\n      await onSave({\n        subject,\n        content,\n        template_id: selectedTemplate || null\n      });\n    } catch (err) {\n      console.error('Error saving campaign:', err);\n      showError('Failed to save campaign');\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"bg-primary-700/50 rounded-xl p-6\">\n        <h3 className=\"text-lg font-medium text-white mb-6\">Campaign Builder</h3>\n\n        {/* Template Selection */}\n        <div className=\"mb-6\">\n          <label className=\"block text-sm font-medium text-primary-200 mb-2\">\n            Start with a Template\n          </label>\n          <select\n            value={selectedTemplate}\n            onChange={(e) => setSelectedTemplate(e.target.value)}\n            className=\"w-full rounded-lg bg-primary-600 border-primary-500 text-white px-4 py-2\"\n          >\n            <option value=\"\">Select a template</option>\n            {templates.map((template) => (\n              <option key={template.id} value={template.id}>\n                {template.name}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {/* Subject Line */}\n        <div className=\"mb-6\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <label className=\"block text-sm font-medium text-primary-200\">\n              Subject Line\n            </label>\n            <button\n              onClick={() => handleAIAssist('subject')}\n              disabled={generating}\n              className=\"text-accent-500 hover:text-accent-400 text-sm flex items-center gap-1\"\n            >\n              <Sparkles className=\"w-4 h-4\" />\n              AI Assist\n            </button>\n          </div>\n          <input\n            type=\"text\"\n            value={subject}\n            onChange={(e) => setSubject(e.target.value)}\n            className=\"w-full rounded-lg bg-primary-600 border-primary-500 text-white px-4 py-2\"\n            placeholder=\"Enter email subject...\"\n          />\n        </div>\n\n        {/* Email Content */}\n        <div className=\"mb-6\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <label className=\"block text-sm font-medium text-primary-200\">\n              Email Content\n            </label>\n            <button\n              onClick={() => handleAIAssist('content')}\n              disabled={generating}\n              className=\"text-accent-500 hover:text-accent-400 text-sm flex items-center gap-1\"\n            >\n              <Sparkles className=\"w-4 h-4\" />\n              AI Assist\n            </button>\n          </div>\n          <div className=\"bg-primary-600 border border-primary-500 rounded-lg overflow-hidden\">\n            <div className=\"flex items-center gap-2 p-2 border-b border-primary-500\">\n              <button className=\"p-1.5 hover:bg-primary-500 rounded\">\n                <Type className=\"w-4 h-4 text-primary-300\" />\n              </button>\n              <button className=\"p-1.5 hover:bg-primary-500 rounded\">\n                <ImageIcon className=\"w-4 h-4 text-primary-300\" />\n              </button>\n              <button className=\"p-1.5 hover:bg-primary-500 rounded\">\n                <Link className=\"w-4 h-4 text-primary-300\" />\n              </button>\n            </div>\n            <textarea\n              value={content}\n              onChange={(e) => setContent(e.target.value)}\n              rows={12}\n              className=\"w-full bg-transparent border-none text-white px-4 py-2 focus:ring-0\"\n              placeholder=\"Write your email content...\"\n            />\n          </div>\n        </div>\n\n        {/* Actions */}\n        <div className=\"flex justify-end gap-4\">\n          <button\n            onClick={handleSave}\n            disabled={!subject || !content}\n            className=\"btn-primary py-2 px-6 flex items-center gap-2 disabled:opacity-50\"\n          >\n            <Send className=\"w-4 h-4\" />\n            Save Campaign\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}","import { useState } from 'react';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n  LineChart,\n  Line,\n  PieChart,\n  Pie,\n  Cell\n} from 'recharts';\nimport { TrendingUp, DollarSign, Users, Mail, Brain } from 'lucide-react';\n\ninterface EmailAnalyticsProps {\n  campaigns: any[];\n  analytics: Record<string, any>;\n  onAnalyze: (campaignId: string) => Promise<any>;\n}\n\nconst COLORS = ['#f97316', '#3b82f6', '#10b981', '#8b5cf6'];\n\nexport function EmailAnalytics({ campaigns, analytics, onAnalyze }: EmailAnalyticsProps) {\n  const [selectedCampaign, setSelectedCampaign] = useState<string | null>(null);\n  const [insights, setInsights] = useState<any>(null);\n\n  const handleAnalyze = async (campaignId: string) => {\n    const result = await onAnalyze(campaignId);\n    setInsights(result);\n  };\n\n  const calculateROI = (campaign: any) => {\n    const campaignAnalytics = analytics[campaign.id];\n    if (!campaignAnalytics) return 0;\n    \n    const revenue = campaignAnalytics.revenue || 0;\n    const cost = campaignAnalytics.cost || 0;\n    return ((revenue - cost) / cost) * 100;\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Overview Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <div className=\"flex items-center gap-2 mb-4\">\n            <Mail className=\"w-5 h-5 text-accent-500\" />\n            <h3 className=\"text-sm font-medium text-primary-200\">Open Rate</h3>\n          </div>\n          <p className=\"text-2xl font-bold text-white\">24.8%</p>\n          <span className=\"text-sm text-green-400\">+2.1% from last month</span>\n        </div>\n\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <div className=\"flex items-center gap-2 mb-4\">\n            <TrendingUp className=\"w-5 h-5 text-accent-500\" />\n            <h3 className=\"text-sm font-medium text-primary-200\">Click Rate</h3>\n          </div>\n          <p className=\"text-2xl font-bold text-white\">3.2%</p>\n          <span className=\"text-sm text-green-400\">+0.5% from last month</span>\n        </div>\n\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <div className=\"flex items-center gap-2 mb-4\">\n            <DollarSign className=\"w-5 h-5 text-accent-500\" />\n            <h3 className=\"text-sm font-medium text-primary-200\">Revenue</h3>\n          </div>\n          <p className=\"text-2xl font-bold text-white\">$12,450</p>\n          <span className=\"text-sm text-green-400\">+15% from last month</span>\n        </div>\n\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <div className=\"flex items-center gap-2 mb-4\">\n            <Users className=\"w-5 h-5 text-accent-500\" />\n            <h3 className=\"text-sm font-medium text-primary-200\">Subscribers</h3>\n          </div>\n          <p className=\"text-2xl font-bold text-white\">8,234</p>\n          <span className=\"text-sm text-green-400\">+123 this month</span>\n        </div>\n      </div>\n\n      {/* Performance Charts */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Open Rates Over Time */}\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <h3 className=\"text-lg font-medium text-white mb-6\">Open Rates Trend</h3>\n          <div className=\"h-64\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <LineChart data={campaigns}>\n                <XAxis dataKey=\"name\" stroke=\"#94a3b8\" />\n                <YAxis stroke=\"#94a3b8\" />\n                <Tooltip\n                  contentStyle={{\n                    backgroundColor: '#1e293b',\n                    border: 'none',\n                    borderRadius: '0.5rem',\n                    color: '#fff'\n                  }}\n                />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"openRate\"\n                  stroke=\"#f97316\"\n                  strokeWidth={2}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n\n        {/* Click Distribution */}\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <h3 className=\"text-lg font-medium text-white mb-6\">Click Distribution</h3>\n          <div className=\"h-64\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <PieChart>\n                <Pie\n                  data={[\n                    { name: 'CTA 1', value: 400 },\n                    { name: 'CTA 2', value: 300 },\n                    { name: 'Links', value: 200 },\n                    { name: 'Images', value: 100 }\n                  ]}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  outerRadius={80}\n                  dataKey=\"value\"\n                >\n                  {COLORS.map((color, index) => (\n                    <Cell key={index} fill={color} />\n                  ))}\n                </Pie>\n                <Tooltip\n                  contentStyle={{\n                    backgroundColor: '#1e293b',\n                    border: 'none',\n                    borderRadius: '0.5rem',\n                    color: '#fff'\n                  }}\n                />\n              </PieChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n      </div>\n\n      {/* AI Insights */}\n      {insights && (\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <div className=\"flex items-center gap-2 mb-6\">\n            <Brain className=\"w-5 h-5 text-accent-500\" />\n            <h3 className=\"text-lg font-medium text-white\">AI Insights</h3>\n          </div>\n\n          <div className=\"grid gap-4\">\n            {insights.recommendations?.map((insight: string, index: number) => (\n              <div\n                key={index}\n                className=\"bg-primary-600/50 rounded-lg p-4 flex items-start gap-3\"\n              >\n                <Brain className=\"w-5 h-5 text-accent-500 mt-0.5\" />\n                <div>\n                  <p className=\"text-white\">{insight}</p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}","import { useState } from 'react';\nimport { Users, UserPlus, Filter, Brain, Target } from 'lucide-react';\n\ninterface LeadManagerProps {\n  subscribers?: any[];\n  onSegment: (criteria: any) => Promise<void>;\n}\n\nexport function LeadManager({ subscribers = [], onSegment }: LeadManagerProps) {\n  const [selectedSegment, setSelectedSegment] = useState<string>('all');\n  const [showAddSubscriber, setShowAddSubscriber] = useState(false);\n\n  const segments = [\n    { id: 'all', name: 'All Subscribers', count: subscribers.length },\n    { id: 'active', name: 'Active', count: subscribers.filter(s => s.status === 'active').length },\n    { id: 'engaged', name: 'Highly Engaged', count: subscribers.filter(s => s.engagement_score > 7).length },\n    { id: 'inactive', name: 'Inactive', count: subscribers.filter(s => s.status === 'inactive').length }\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Rest of the component remains unchanged */}\n    </div>\n  );\n}","import { useState } from 'react';\nimport { Brain, Sparkles, ArrowRight } from 'lucide-react';\n\ninterface CampaignSuggestionsProps {\n  businessType: string;\n  onSelect: (suggestion: any) => Promise<void>;\n}\n\nexport function CampaignSuggestions({ businessType, onSelect }: CampaignSuggestionsProps) {\n  const [selectedSuggestion, setSelectedSuggestion] = useState<string | null>(null);\n\n  const suggestions = [\n    {\n      id: '1',\n      title: 'Welcome Series',\n      description: 'Introduce new subscribers to your brand with a 3-part welcome series',\n      type: 'automation',\n      roi: '150%',\n      difficulty: 'Easy'\n    },\n    {\n      id: '2',\n      title: 'Re-engagement Campaign',\n      description: 'Win back inactive subscribers with personalized offers',\n      type: 'targeted',\n      roi: '120%',\n      difficulty: 'Medium'\n    },\n    {\n      id: '3',\n      title: 'Product Launch',\n      description: 'Build excitement for your upcoming product launch',\n      type: 'promotional',\n      roi: '200%',\n      difficulty: 'Medium'\n    },\n    {\n      id: '4',\n      title: 'Customer Feedback',\n      description: 'Gather valuable insights from your customers',\n      type: 'engagement',\n      roi: '100%',\n      difficulty: 'Easy'\n    }\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"bg-primary-700/50 rounded-xl p-6\">\n        <div className=\"flex items-center gap-2 mb-6\">\n          <Brain className=\"w-5 h-5 text-accent-500\" />\n          <h3 className=\"text-lg font-medium text-white\">AI Campaign Suggestions</h3>\n        </div>\n\n        <div className=\"grid grid-cols-2 gap-6\">\n          {suggestions.map((suggestion) => (\n            <div\n              key={suggestion.id}\n              className={`bg-primary-600/50 rounded-lg p-6 cursor-pointer transition-all ${\n                selectedSuggestion === suggestion.id\n                  ? 'ring-2 ring-accent-500'\n                  : 'hover:bg-primary-600'\n              }`}\n              onClick={() => setSelectedSuggestion(suggestion.id)}\n            >\n              <div className=\"flex items-start justify-between\">\n                <div>\n                  <h4 className=\"text-lg font-medium text-white mb-2\">\n                    {suggestion.title}\n                  </h4>\n                  <p className=\"text-primary-300 mb-4\">{suggestion.description}</p>\n                </div>\n                <Sparkles className=\"w-5 h-5 text-accent-500\" />\n              </div>\n\n              <div className=\"flex items-center gap-4 text-sm\">\n                <span className=\"text-primary-300\">\n                  Expected ROI: <span className=\"text-green-400\">{suggestion.roi}</span>\n                </span>\n                <span className=\"text-primary-300\">\n                  Difficulty: <span className=\"text-primary-200\">{suggestion.difficulty}</span>\n                </span>\n              </div>\n\n              {selectedSuggestion === suggestion.id && (\n                <button\n                  onClick={() => onSelect(suggestion)}\n                  className=\"mt-4 w-full btn-primary py-2 flex items-center justify-center gap-2\"\n                >\n                  Use This Template\n                  <ArrowRight className=\"w-4 h-4\" />\n                </button>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}","import { useState } from 'react';\nimport { FileText, Plus, Edit2, Copy, Trash2 } from 'lucide-react';\n\ninterface TemplateLibraryProps {\n  templates?: any[];\n  onCreateTemplate: (template: any) => Promise<void>;\n}\n\nexport function TemplateLibrary({ templates = [], onCreateTemplate }: TemplateLibraryProps) {\n  const [showCreateTemplate, setShowCreateTemplate] = useState(false);\n  \n  const categories = [\n    { id: 'promotional', name: 'Promotional' },\n    { id: 'newsletter', name: 'Newsletter' },\n    { id: 'transactional', name: 'Transactional' },\n    { id: 'onboarding', name: 'Onboarding' }\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Rest of the component remains unchanged */}\n    </div>\n  );\n}","import { useState } from 'react';\nimport { useEmailCampaigns } from '../hooks/useEmailCampaigns';\nimport { useEmailAutomation } from '../hooks/useEmailAutomation';\nimport { useAI } from '../hooks/useAI';\nimport { BackButton } from './BackButton';\nimport { AIFeatureIndicator } from './AIFeatureIndicator';\nimport { EmailBuilder } from './email/EmailBuilder';\nimport { EmailAnalytics } from './email/EmailAnalytics';\nimport { LeadManager } from './email/LeadManager';\nimport { CampaignSuggestions } from './email/CampaignSuggestions';\nimport { TemplateLibrary } from './email/TemplateLibrary';\nimport { \n  Mail, Plus, Users, FileText, Calendar, Send, Edit2, Clock, \n  Settings, Brain, Target, TrendingUp, Sparkles \n} from 'lucide-react';\n\nexport function EmailCampaignManager() {\n  const { campaigns, templates, subscribers, analytics, loading, error } = useEmailCampaigns();\n  const { scheduleAutomatedCampaigns } = useEmailAutomation();\n  const { generateEmailContent, analyzePerformance } = useAI();\n  const [activeView, setActiveView] = useState<'builder' | 'analytics' | 'leads' | 'templates' | 'suggestions'>('builder');\n  const [showNewCampaign, setShowNewCampaign] = useState(false);\n\n  const renderActiveView = () => {\n    switch (activeView) {\n      case 'builder':\n        return (\n          <EmailBuilder \n            templates={templates}\n            onSave={async (campaign) => {\n              // Handle campaign save\n              console.log('Saving campaign:', campaign);\n            }}\n            onAIAssist={async (type, content) => {\n              // Handle AI assistance requests\n              const result = await generateEmailContent(content, {\n                type,\n                audience: 'target_segment',\n                goal: 'conversion'\n              });\n              return result;\n            }}\n          />\n        );\n      case 'analytics':\n        return (\n          <EmailAnalytics \n            campaigns={campaigns}\n            analytics={analytics}\n            onAnalyze={async (campaignId) => {\n              const insights = await analyzePerformance(campaignId);\n              return insights;\n            }}\n          />\n        );\n      case 'leads':\n        return (\n          <LeadManager \n            subscribers={subscribers}\n            onSegment={async (criteria) => {\n              // Handle lead segmentation\n              console.log('Segmenting leads:', criteria);\n            }}\n          />\n        );\n      case 'templates':\n        return (\n          <TemplateLibrary \n            templates={templates}\n            onCreateTemplate={async (template) => {\n              // Handle template creation\n              console.log('Creating template:', template);\n            }}\n          />\n        );\n      case 'suggestions':\n        return (\n          <CampaignSuggestions \n            businessType=\"retail\"\n            onSelect={async (suggestion) => {\n              // Handle suggestion selection\n              console.log('Selected suggestion:', suggestion);\n            }}\n          />\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center gap-4\">\n          <BackButton />\n          <h2 className=\"text-xl font-semibold text-white\">Email Campaigns</h2>\n          <AIFeatureIndicator feature=\"Campaign Optimization\" />\n        </div>\n        <div className=\"flex gap-4\">\n          <button\n            onClick={() => setShowNewCampaign(true)}\n            className=\"btn-primary py-2 px-4 flex items-center gap-2\"\n          >\n            <Plus className=\"w-4 h-4\" />\n            New Campaign\n          </button>\n        </div>\n      </div>\n\n      {/* Navigation Tabs */}\n      <div className=\"flex space-x-4 border-b border-primary-700\">\n        <button\n          onClick={() => setActiveView('builder')}\n          className={`px-4 py-2 ${\n            activeView === 'builder'\n              ? 'text-accent-500 border-b-2 border-accent-500'\n              : 'text-primary-300 hover:text-white'\n          }`}\n        >\n          <div className=\"flex items-center gap-2\">\n            <Mail className=\"w-4 h-4\" />\n            Campaign Builder\n          </div>\n        </button>\n        <button\n          onClick={() => setActiveView('analytics')}\n          className={`px-4 py-2 ${\n            activeView === 'analytics'\n              ? 'text-accent-500 border-b-2 border-accent-500'\n              : 'text-primary-300 hover:text-white'\n          }`}\n        >\n          <div className=\"flex items-center gap-2\">\n            <TrendingUp className=\"w-4 h-4\" />\n            Analytics\n          </div>\n        </button>\n        <button\n          onClick={() => setActiveView('leads')}\n          className={`px-4 py-2 ${\n            activeView === 'leads'\n              ? 'text-accent-500 border-b-2 border-accent-500'\n              : 'text-primary-300 hover:text-white'\n          }`}\n        >\n          <div className=\"flex items-center gap-2\">\n            <Users className=\"w-4 h-4\" />\n            Lead Management\n          </div>\n        </button>\n        <button\n          onClick={() => setActiveView('templates')}\n          className={`px-4 py-2 ${\n            activeView === 'templates'\n              ? 'text-accent-500 border-b-2 border-accent-500'\n              : 'text-primary-300 hover:text-white'\n          }`}\n        >\n          <div className=\"flex items-center gap-2\">\n            <FileText className=\"w-4 h-4\" />\n            Templates\n          </div>\n        </button>\n        <button\n          onClick={() => setActiveView('suggestions')}\n          className={`px-4 py-2 ${\n            activeView === 'suggestions'\n              ? 'text-accent-500 border-b-2 border-accent-500'\n              : 'text-primary-300 hover:text-white'\n          }`}\n        >\n          <div className=\"flex items-center gap-2\">\n            <Brain className=\"w-4 h-4\" />\n            AI Suggestions\n          </div>\n        </button>\n      </div>\n\n      {/* Active View Content */}\n      <div className=\"min-h-[600px]\">\n        {renderActiveView()}\n      </div>\n    </div>\n  );\n}","import { useState, useEffect } from 'react';\nimport { supabase } from '../lib/supabase';\nimport { useAuth } from './useAuth';\nimport { showError, showSuccess } from '../lib/toast';\n\ninterface SocialMediaAccount {\n  id: string;\n  user_id: string;\n  platform: string;\n  account_name: string;\n  status: string;\n  metadata: Record<string, any>;\n  created_at: string;\n}\n\ninterface SocialMediaPost {\n  id: string;\n  user_id: string;\n  account_id: string;\n  content: string;\n  media_urls: string[];\n  platform: string;\n  scheduled_for?: string;\n  published_at?: string;\n  status: string;\n  metadata: Record<string, any>;\n  created_at: string;\n}\n\nexport function useSocialMedia() {\n  const { user } = useAuth();\n  const [accounts, setAccounts] = useState<SocialMediaAccount[]>([]);\n  const [posts, setPosts] = useState<SocialMediaPost[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!user) return;\n\n    let mounted = true;\n\n    const loadData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        const [accountsData, postsData] = await Promise.all([\n          supabase\n            .from('social_media_accounts')\n            .select('*')\n            .eq('user_id', user.id)\n            .order('created_at', { ascending: false }),\n          supabase\n            .from('social_media_posts')\n            .select('*')\n            .eq('user_id', user.id)\n            .order('created_at', { ascending: false })\n        ]);\n\n        if (accountsData.error) throw accountsData.error;\n        if (postsData.error) throw postsData.error;\n\n        if (mounted) {\n          setAccounts(accountsData.data || []);\n          setPosts(postsData.data || []);\n        }\n      } catch (err) {\n        console.error('Error loading social media data:', err);\n        if (mounted) {\n          setError('Failed to load social media data');\n          showError('Failed to load social media data');\n        }\n      } finally {\n        if (mounted) {\n          setLoading(false);\n        }\n      }\n    };\n\n    // Initial load\n    loadData();\n\n    // Subscribe to real-time updates\n    const accountsSubscription = supabase\n      .channel('social_accounts_changes')\n      .on('postgres_changes', {\n        event: '*',\n        schema: 'public',\n        table: 'social_media_accounts',\n        filter: `user_id=eq.${user.id}`\n      }, () => {\n        if (mounted) loadData();\n      })\n      .subscribe();\n\n    const postsSubscription = supabase\n      .channel('social_posts_changes')\n      .on('postgres_changes', {\n        event: '*',\n        schema: 'public',\n        table: 'social_media_posts',\n        filter: `user_id=eq.${user.id}`\n      }, () => {\n        if (mounted) loadData();\n      })\n      .subscribe();\n\n    return () => {\n      mounted = false;\n      accountsSubscription.unsubscribe();\n      postsSubscription.unsubscribe();\n    };\n  }, [user]);\n\n  const addAccount = async (platform: string, accountName: string) => {\n    try {\n      const { data, error: insertError } = await supabase\n        .from('social_media_accounts')\n        .insert({\n          platform,\n          account_name: accountName,\n          user_id: user?.id,\n          status: 'active'\n        })\n        .select()\n        .single();\n\n      if (insertError) throw insertError;\n      setAccounts(prev => [data, ...prev]);\n      showSuccess('Account added successfully');\n      return data;\n    } catch (err) {\n      console.error('Error adding social media account:', err);\n      showError('Failed to add account');\n      throw err;\n    }\n  };\n\n  const createPost = async (\n    accountId: string,\n    content: string,\n    mediaUrls: string[] = [],\n    scheduledFor?: Date\n  ) => {\n    try {\n      const account = accounts.find(a => a.id === accountId);\n      if (!account) throw new Error('Account not found');\n\n      const { data, error: insertError } = await supabase\n        .from('social_media_posts')\n        .insert({\n          account_id: accountId,\n          content,\n          media_urls: mediaUrls,\n          platform: account.platform,\n          scheduled_for: scheduledFor?.toISOString(),\n          status: scheduledFor ? 'scheduled' : 'draft',\n          user_id: user?.id\n        })\n        .select()\n        .single();\n\n      if (insertError) throw insertError;\n      setPosts(prev => [data, ...prev]);\n      showSuccess('Post created successfully');\n      return data;\n    } catch (err) {\n      console.error('Error creating post:', err);\n      showError('Failed to create post');\n      throw err;\n    }\n  };\n\n  const updatePostStatus = async (postId: string, status: string, publishedAt?: Date) => {\n    try {\n      const { data, error: updateError } = await supabase\n        .from('social_media_posts')\n        .update({\n          status,\n          published_at: publishedAt?.toISOString()\n        })\n        .eq('id', postId)\n        .eq('user_id', user?.id)\n        .select()\n        .single();\n\n      if (updateError) throw updateError;\n      setPosts(prev => prev.map(post => post.id === postId ? data : post));\n      showSuccess('Post status updated successfully');\n      return data;\n    } catch (err) {\n      console.error('Error updating post status:', err);\n      showError('Failed to update post status');\n      throw err;\n    }\n  };\n\n  return {\n    accounts,\n    posts,\n    loading,\n    error,\n    addAccount,\n    createPost,\n    updatePostStatus\n  };\n}","import { useState } from 'react';\nimport { useSocialMedia } from './useSocialMedia';\nimport { useAI } from './useAI';\nimport { showError, showSuccess } from '../lib/toast';\n\nconst RANDOM_TAGS = [\n  'marketing', 'digital', 'business', 'socialmedia', 'entrepreneur',\n  'success', 'motivation', 'startup', 'innovation', 'growth',\n  'leadership', 'inspiration', 'technology', 'strategy', 'branding'\n];\n\nconst UNSPLASH_TOPICS = [\n  'business', 'technology', 'office', 'marketing',\n  'workspace', 'startup', 'meeting', 'professional'\n];\n\nexport function usePostAutomation() {\n  const { createPost, accounts } = useSocialMedia();\n  const { generateSocialContent } = useAI();\n  const [isScheduling, setIsScheduling] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const getOptimalPostingTimes = (platform: string) => {\n    const optimalTimes = {\n      twitter: ['9:00', '12:00', '15:00', '17:00', '19:00'],\n      facebook: ['9:00', '13:00', '15:00', '19:00'],\n      instagram: ['11:00', '14:00', '19:00', '21:00'],\n      linkedin: ['8:00', '10:00', '12:00', '17:00']\n    };\n    return optimalTimes[platform as keyof typeof optimalTimes] || ['12:00'];\n  };\n\n  const generatePostContent = async (platform: string, topics: string[]) => {\n    try {\n      const prompts = [\n        'Share industry insights about',\n        'Discuss the latest trends in',\n        'Offer tips and advice about',\n        'Share success stories related to',\n        'Ask engaging questions about'\n      ];\n\n      const prompt = `${prompts[Math.floor(Math.random() * prompts.length)]} ${topics.join(', ')}`;\n      \n      const content = await generateSocialContent(prompt, platform, {\n        tone: 'professional',\n        length: platform === 'twitter' ? 'short' : 'medium'\n      });\n\n      if (!content) {\n        throw new Error('Failed to generate content');\n      }\n\n      return content;\n    } catch (err) {\n      console.error('Error generating content:', err);\n      throw new Error('Failed to generate post content');\n    }\n  };\n\n  const scheduleAutomatedPosts = async (\n    accountId: string,\n    options = {\n      duration: 7,\n      postsPerDay: 2,\n      topics: ['marketing', 'business', 'technology'],\n      includeImages: true,\n      includeHashtags: true\n    }\n  ) => {\n    try {\n      setIsScheduling(true);\n      setError(null);\n\n      // Validate account exists\n      const account = accounts.find(a => a.id === accountId);\n      if (!account) {\n        throw new Error('Selected account not found');\n      }\n\n      // Validate options\n      if (options.duration < 1 || options.duration > 30) {\n        throw new Error('Duration must be between 1 and 30 days');\n      }\n      if (options.postsPerDay < 1 || options.postsPerDay > 5) {\n        throw new Error('Posts per day must be between 1 and 5');\n      }\n      if (!options.topics.length) {\n        throw new Error('At least one topic is required');\n      }\n\n      const platform = account.platform;\n      const optimalTimes = getOptimalPostingTimes(platform);\n      const totalPosts = options.duration * options.postsPerDay;\n      const scheduledPosts = [];\n\n      // Generate schedule dates\n      for (let day = 0; day < options.duration; day++) {\n        const date = new Date();\n        date.setDate(date.getDate() + day);\n\n        // Get random posting times for this day\n        const dayTimes = [...optimalTimes]\n          .sort(() => 0.5 - Math.random())\n          .slice(0, options.postsPerDay);\n\n        for (const time of dayTimes) {\n          const [hours, minutes] = time.split(':').map(Number);\n          const scheduleDate = new Date(date);\n          scheduleDate.setHours(hours, minutes, 0, 0);\n\n          try {\n            // Generate AI content\n            const content = await generatePostContent(platform, options.topics);\n\n            // Add hashtags if enabled\n            const hashtags = options.includeHashtags\n              ? RANDOM_TAGS\n                  .sort(() => 0.5 - Math.random())\n                  .slice(0, 3)\n                  .map(tag => `#${tag}`)\n                  .join(' ')\n              : '';\n\n            // Add images if enabled\n            const images = options.includeImages\n              ? [\n                  `https://source.unsplash.com/1200x800/?${\n                    UNSPLASH_TOPICS[Math.floor(Math.random() * UNSPLASH_TOPICS.length)]\n                  }&random=${Math.random()}`\n                ]\n              : [];\n\n            // Create the post\n            const post = await createPost(\n              accountId,\n              `${content}\\n\\n${hashtags}`,\n              images,\n              scheduleDate\n            );\n\n            scheduledPosts.push(post);\n          } catch (err) {\n            console.error('Error creating scheduled post:', err);\n            // Continue with other posts even if one fails\n            continue;\n          }\n        }\n      }\n\n      if (scheduledPosts.length === 0) {\n        throw new Error('Failed to schedule any posts');\n      }\n\n      showSuccess(`Successfully scheduled ${scheduledPosts.length} posts`);\n      return scheduledPosts;\n    } catch (err) {\n      const message = err instanceof Error ? err.message : 'Failed to schedule automated posts';\n      setError(message);\n      showError(message);\n      throw err;\n    } finally {\n      setIsScheduling(false);\n    }\n  };\n\n  return {\n    scheduleAutomatedPosts,\n    isScheduling,\n    error\n  };\n}","import { supabase } from './supabase';\n\n// Social media platform configurations\nconst SOCIAL_CONFIGS = {\n  twitter: {\n    clientId: import.meta.env.VITE_TWITTER_CLIENT_ID,\n    redirectUri: import.meta.env.VITE_TWITTER_CALLBACK_URL,\n    scope: 'tweet.read tweet.write users.read follows.read',\n  },\n  facebook: {\n    clientId: import.meta.env.VITE_FACEBOOK_CLIENT_ID,\n    redirectUri: import.meta.env.VITE_FACEBOOK_CALLBACK_URL,\n    scope: 'pages_show_list,pages_read_engagement,pages_manage_posts',\n  },\n  instagram: {\n    clientId: import.meta.env.VITE_INSTAGRAM_CLIENT_ID,\n    redirectUri: import.meta.env.VITE_INSTAGRAM_CALLBACK_URL,\n    scope: 'instagram_basic,instagram_content_publish',\n  },\n  linkedin: {\n    clientId: import.meta.env.VITE_LINKEDIN_CLIENT_ID,\n    redirectUri: import.meta.env.VITE_LINKEDIN_CALLBACK_URL,\n    scope: 'r_liteprofile w_member_social',\n  }\n};\n\nexport async function connectSocialAccount(platform: keyof typeof SOCIAL_CONFIGS) {\n  const config = SOCIAL_CONFIGS[platform];\n  \n  // Validate configuration\n  if (!config) {\n    throw new Error(`Unsupported platform: ${platform}`);\n  }\n\n  // Check for missing configuration\n  if (!config.clientId) {\n    throw new Error('Social media integration is not configured. Please set up your OAuth credentials.');\n  }\n\n  try {\n    // Store the platform in session for the callback\n    sessionStorage.setItem('connecting_platform', platform);\n\n    // Generate and store state for security\n    const state = Math.random().toString(36).substring(7);\n    sessionStorage.setItem('oauth_state', state);\n\n    // Build the OAuth URL\n    const params = new URLSearchParams({\n      client_id: config.clientId,\n      redirect_uri: config.redirectUri,\n      scope: config.scope,\n      response_type: 'code',\n      state,\n    });\n\n    // Redirect to OAuth provider\n    window.location.href = `https://${platform}.com/oauth/authorize?${params.toString()}`;\n  } catch (error) {\n    console.error('Error initiating social connection:', error);\n    throw new Error('Failed to connect account. Please check your configuration and try again.');\n  }\n}\n\nexport async function handleOAuthCallback(platform: string, code: string, state: string) {\n  // Verify state to prevent CSRF\n  const storedState = sessionStorage.getItem('oauth_state');\n  if (!storedState || state !== storedState) {\n    throw new Error('Invalid OAuth state. Please try connecting again.');\n  }\n\n  try {\n    // Check if account already exists\n    const { data: existingAccount } = await supabase\n      .from('social_media_accounts')\n      .select('id')\n      .eq('platform', platform)\n      .maybeSingle();\n\n    if (existingAccount) {\n      throw new Error(`A ${platform} account is already connected.`);\n    }\n\n    // Store the new connection\n    const { data, error } = await supabase\n      .from('social_media_accounts')\n      .insert({\n        platform,\n        account_name: `${platform}_user`,\n        status: 'active',\n        metadata: {\n          connected_at: new Date().toISOString(),\n          last_verified: new Date().toISOString()\n        }\n      })\n      .select()\n      .single();\n\n    if (error) throw error;\n\n    // Clean up session storage\n    sessionStorage.removeItem('connecting_platform');\n    sessionStorage.removeItem('oauth_state');\n\n    return data;\n  } catch (error) {\n    console.error('OAuth callback error:', error);\n    throw error instanceof Error ? error : new Error('Failed to complete social media connection');\n  }\n}","import { useState } from 'react';\nimport { Twitter, Facebook, Instagram, Linkedin, Link2, AlertCircle } from 'lucide-react';\nimport { connectSocialAccount } from '../lib/socialAuth';\n\ninterface Props {\n  onSuccess?: () => void;\n  onError?: (error: Error) => void;\n}\n\nexport function SocialAccountConnect({ onSuccess, onError }: Props) {\n  const [connecting, setConnecting] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [connectingPlatform, setConnectingPlatform] = useState<string | null>(null);\n\n  const handleConnect = async (platform: string) => {\n    try {\n      setConnecting(true);\n      setConnectingPlatform(platform);\n      setError(null);\n\n      await connectSocialAccount(platform as 'twitter' | 'facebook' | 'instagram' | 'linkedin');\n      onSuccess?.();\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to connect account';\n      console.error('Error connecting account:', err);\n      setError(errorMessage);\n      onError?.(new Error(errorMessage));\n    } finally {\n      setConnecting(false);\n      setConnectingPlatform(null);\n    }\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex items-center gap-2 mb-4\">\n        <Link2 className=\"w-5 h-5 text-accent-500\" />\n        <h3 className=\"text-lg font-medium text-white\">Connect Social Accounts</h3>\n      </div>\n\n      {error && (\n        <div className=\"bg-red-500/10 border border-red-500/50 text-red-500 rounded-lg p-4 mb-4 flex items-start gap-2\">\n          <AlertCircle className=\"w-5 h-5 mt-0.5 flex-shrink-0\" />\n          <div>\n            <p className=\"font-medium\">Connection Error</p>\n            <p className=\"text-sm mt-1\">{error}</p>\n          </div>\n        </div>\n      )}\n\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n        <button\n          onClick={() => handleConnect('twitter')}\n          disabled={connecting}\n          className={`flex items-center gap-3 p-4 rounded-lg transition-colors ${\n            connecting && connectingPlatform === 'twitter'\n              ? 'bg-primary-600/30 cursor-not-allowed' \n              : 'bg-primary-600/50 hover:bg-primary-600'\n          }`}\n        >\n          <Twitter className=\"w-5 h-5 text-[#1DA1F2]\" />\n          <span className=\"text-white\">\n            {connecting && connectingPlatform === 'twitter' ? 'Connecting...' : 'Connect Twitter'}\n          </span>\n        </button>\n\n        <button\n          onClick={() => handleConnect('facebook')}\n          disabled={connecting}\n          className={`flex items-center gap-3 p-4 rounded-lg transition-colors ${\n            connecting && connectingPlatform === 'facebook'\n              ? 'bg-primary-600/30 cursor-not-allowed' \n              : 'bg-primary-600/50 hover:bg-primary-600'\n          }`}\n        >\n          <Facebook className=\"w-5 h-5 text-[#4267B2]\" />\n          <span className=\"text-white\">\n            {connecting && connectingPlatform === 'facebook' ? 'Connecting...' : 'Connect Facebook'}\n          </span>\n        </button>\n\n        <button\n          onClick={() => handleConnect('instagram')}\n          disabled={connecting}\n          className={`flex items-center gap-3 p-4 rounded-lg transition-colors ${\n            connecting && connectingPlatform === 'instagram'\n              ? 'bg-primary-600/30 cursor-not-allowed' \n              : 'bg-primary-600/50 hover:bg-primary-600'\n          }`}\n        >\n          <Instagram className=\"w-5 h-5 text-[#E1306C]\" />\n          <span className=\"text-white\">\n            {connecting && connectingPlatform === 'instagram' ? 'Connecting...' : 'Connect Instagram'}\n          </span>\n        </button>\n\n        <button\n          onClick={() => handleConnect('linkedin')}\n          disabled={connecting}\n          className={`flex items-center gap-3 p-4 rounded-lg transition-colors ${\n            connecting && connectingPlatform === 'linkedin'\n              ? 'bg-primary-600/30 cursor-not-allowed' \n              : 'bg-primary-600/50 hover:bg-primary-600'\n          }`}\n        >\n          <Linkedin className=\"w-5 h-5 text-[#0077B5]\" />\n          <span className=\"text-white\">\n            {connecting && connectingPlatform === 'linkedin' ? 'Connecting...' : 'Connect LinkedIn'}\n          </span>\n        </button>\n      </div>\n\n      <div className=\"flex items-start gap-2 mt-4 text-sm text-primary-300\">\n        <AlertCircle className=\"w-4 h-4 mt-0.5 flex-shrink-0\" />\n        <p>\n          Connecting your social media accounts allows us to post content on your behalf.\n          You can revoke access at any time from your account settings.\n        </p>\n      </div>\n    </div>\n  );\n}","import { useState } from 'react';\nimport { useSocialMedia } from '../hooks/useSocialMedia';\nimport { usePostAutomation } from '../hooks/usePostAutomation';\nimport { BackButton } from './BackButton';\nimport { SocialAccountConnect } from './SocialAccountConnect';\nimport { AIContentGenerator } from './AIContentGenerator';\nimport { LoadingSpinner } from './LoadingSpinner';\nimport { AlertCircle, Plus, Settings, Share2, X } from 'lucide-react';\n\nexport function SocialMediaDashboard() {\n  const { accounts = [], posts = [], loading, error, addAccount, createPost } = useSocialMedia();\n  const { scheduleAutomatedPosts, isScheduling } = usePostAutomation();\n  const [showConnectAccounts, setShowConnectAccounts] = useState(false);\n  const [showCreatePost, setShowCreatePost] = useState(false);\n  const [showAutoSchedule, setShowAutoSchedule] = useState(false);\n  const [selectedAccountId, setSelectedAccountId] = useState<string | null>(null);\n  const [connectionError, setConnectionError] = useState<string | null>(null);\n\n  // Auto-schedule settings\n  const [duration, setDuration] = useState(7);\n  const [postsPerDay, setPostsPerDay] = useState(2);\n  const [topics, setTopics] = useState('marketing, business, technology');\n  const [includeImages, setIncludeImages] = useState(true);\n  const [includeHashtags, setIncludeHashtags] = useState(true);\n\n  if (loading) {\n    return (\n      <div className=\"min-h-[400px] flex items-center justify-center\">\n        <LoadingSpinner size={32} />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-[400px] flex items-center justify-center\">\n        <div className=\"bg-red-500/10 border border-red-500/50 text-red-500 rounded-lg p-4 max-w-md text-center\">\n          <AlertCircle className=\"w-8 h-8 mx-auto mb-2\" />\n          <p className=\"font-medium\">Failed to load social media data</p>\n          <p className=\"text-sm mt-1\">{error}</p>\n        </div>\n      </div>\n    );\n  }\n\n  const handleAutoSchedule = async (accountId: string) => {\n    try {\n      await scheduleAutomatedPosts(accountId, {\n        duration,\n        postsPerDay,\n        topics: topics.split(',').map(t => t.trim()),\n        includeImages,\n        includeHashtags\n      });\n      setShowAutoSchedule(false);\n    } catch (err) {\n      console.error('Failed to schedule posts:', err);\n      setConnectionError('Failed to schedule posts. Please try again.');\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center gap-4\">\n          <BackButton />\n          <h2 className=\"text-xl font-semibold text-white\">Social Media</h2>\n        </div>\n        <div className=\"flex gap-4\">\n          <button\n            onClick={() => setShowConnectAccounts(true)}\n            className=\"btn-primary py-2 px-4 flex items-center gap-2\"\n          >\n            <Share2 className=\"w-4 h-4\" />\n            Connect Accounts\n          </button>\n          {accounts.length > 0 && (\n            <button\n              onClick={() => setShowCreatePost(true)}\n              className=\"btn-primary py-2 px-4 flex items-center gap-2\"\n            >\n              <Plus className=\"w-4 h-4\" />\n              Create Post\n            </button>\n          )}\n        </div>\n      </div>\n\n      {connectionError && (\n        <div className=\"bg-red-500/10 border border-red-500/50 text-red-500 rounded-lg p-4\">\n          {connectionError}\n        </div>\n      )}\n\n      {/* Connected Accounts */}\n      {accounts.length > 0 ? (\n        <div className=\"grid gap-4\">\n          {accounts.map((account) => (\n            <div\n              key={account.id}\n              className=\"bg-primary-700/50 rounded-xl p-4 flex items-center justify-between\"\n            >\n              <div className=\"flex items-center gap-3\">\n                <Share2 className=\"w-4 h-4\" />\n                <span className=\"text-white\">{account.account_name}</span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className=\"text-sm text-primary-400 capitalize\">{account.platform}</span>\n                <button\n                  onClick={() => {\n                    setSelectedAccountId(account.id);\n                    setShowAutoSchedule(true);\n                  }}\n                  disabled={isScheduling}\n                  className=\"ml-4 px-3 py-1 text-sm bg-primary-600/50 hover:bg-primary-600 text-primary-200 rounded-lg transition-colors\"\n                >\n                  {isScheduling && selectedAccountId === account.id ? 'Scheduling...' : 'Auto Schedule'}\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <div className=\"text-center py-12\">\n          <Share2 className=\"w-12 h-12 text-primary-400 mx-auto mb-4\" />\n          <h3 className=\"text-lg font-medium text-white mb-2\">No Connected Accounts</h3>\n          <p className=\"text-primary-300 mb-6\">\n            Connect your social media accounts to start managing your posts.\n          </p>\n          <button\n            onClick={() => setShowConnectAccounts(true)}\n            className=\"btn-primary py-2 px-6\"\n          >\n            Connect Account\n          </button>\n        </div>\n      )}\n\n      {/* Recent Posts */}\n      {posts.length > 0 && (\n        <div className=\"space-y-4\">\n          <h3 className=\"text-lg font-medium text-white\">Recent Posts</h3>\n          <div className=\"grid gap-4\">\n            {posts.map((post) => (\n              <div\n                key={post.id}\n                className=\"bg-primary-700/50 rounded-xl p-4 space-y-3\"\n              >\n                <p className=\"text-primary-200\">{post.content}</p>\n                <div className=\"flex items-center justify-between text-sm\">\n                  <span className=\"text-primary-400\">\n                    {new Date(post.created_at).toLocaleDateString()}\n                  </span>\n                  <span className={`px-2 py-1 rounded-full text-xs ${\n                    post.status === 'published' ? 'bg-green-500/20 text-green-400' :\n                    post.status === 'scheduled' ? 'bg-blue-500/20 text-blue-400' :\n                    'bg-primary-600/50 text-primary-300'\n                  }`}>\n                    {post.status}\n                  </span>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Connect Accounts Modal */}\n      {showConnectAccounts && (\n        <SocialAccountConnect\n          onSuccess={() => {\n            setShowConnectAccounts(false);\n            setConnectionError(null);\n          }}\n          onError={(err) => {\n            setConnectionError(err.message);\n          }}\n        />\n      )}\n\n      {/* Auto Schedule Modal */}\n      {showAutoSchedule && selectedAccountId && (\n        <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-primary-700 rounded-xl p-6 w-full max-w-md\">\n            <div className=\"flex items-center justify-between mb-6\">\n              <h3 className=\"text-lg font-medium text-white\">Auto Schedule Settings</h3>\n              <button\n                onClick={() => setShowAutoSchedule(false)}\n                className=\"text-primary-300 hover:text-white\"\n              >\n                <X className=\"w-5 h-5\" />\n              </button>\n            </div>\n\n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-primary-200 mb-1\">\n                  Duration (days)\n                </label>\n                <input\n                  type=\"number\"\n                  value={duration}\n                  onChange={(e) => setDuration(parseInt(e.target.value))}\n                  min=\"1\"\n                  max=\"30\"\n                  className=\"w-full rounded-lg bg-primary-600 border-primary-500 text-white px-4 py-2\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-primary-200 mb-1\">\n                  Posts per Day\n                </label>\n                <input\n                  type=\"number\"\n                  value={postsPerDay}\n                  onChange={(e) => setPostsPerDay(parseInt(e.target.value))}\n                  min=\"1\"\n                  max=\"5\"\n                  className=\"w-full rounded-lg bg-primary-600 border-primary-500 text-white px-4 py-2\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-primary-200 mb-1\">\n                  Topics (comma-separated)\n                </label>\n                <input\n                  type=\"text\"\n                  value={topics}\n                  onChange={(e) => setTopics(e.target.value)}\n                  className=\"w-full rounded-lg bg-primary-600 border-primary-500 text-white px-4 py-2\"\n                />\n              </div>\n\n              <div className=\"flex items-center gap-4\">\n                <label className=\"flex items-center gap-2 text-primary-200\">\n                  <input\n                    type=\"checkbox\"\n                    checked={includeImages}\n                    onChange={(e) => setIncludeImages(e.target.checked)}\n                    className=\"rounded border-primary-500\"\n                  />\n                  Include Images\n                </label>\n\n                <label className=\"flex items-center gap-2 text-primary-200\">\n                  <input\n                    type=\"checkbox\"\n                    checked={includeHashtags}\n                    onChange={(e) => setIncludeHashtags(e.target.checked)}\n                    className=\"rounded border-primary-500\"\n                  />\n                  Include Hashtags\n                </label>\n              </div>\n\n              <div className=\"flex justify-end gap-4 mt-6\">\n                <button\n                  onClick={() => setShowAutoSchedule(false)}\n                  className=\"px-4 py-2 text-primary-300 hover:text-white transition-colors\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={() => handleAutoSchedule(selectedAccountId)}\n                  disabled={isScheduling}\n                  className=\"btn-primary py-2 px-6\"\n                >\n                  {isScheduling ? 'Scheduling...' : 'Start Scheduling'}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}","import { useState, useEffect } from 'react';\nimport { supabase, retryOperation } from '../lib/supabase';\nimport { useAuth } from './useAuth';\nimport { showError, showSuccess } from '../lib/toast';\n\ninterface Budget {\n  id: string;\n  user_id: string;\n  category: string;\n  amount: number;\n  period: string;\n  period_start: string;\n  period_end: string;\n  created_at: string;\n}\n\ninterface Expense {\n  id: string;\n  user_id: string;\n  category: string;\n  amount: number;\n  description: string;\n  date: string;\n  created_at: string;\n}\n\nexport function useBudget() {\n  const { user } = useAuth();\n  const [budgets, setBudgets] = useState<Budget[]>([]);\n  const [expenses, setExpenses] = useState<Expense[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!user) return;\n    loadData();\n  }, [user]);\n\n  const loadData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const [budgetsData, expensesData] = await Promise.all([\n        retryOperation(() =>\n          supabase\n            .from('marketing_budgets')\n            .select('*')\n            .eq('user_id', user?.id)\n            .order('created_at', { ascending: false })\n        ),\n        retryOperation(() =>\n          supabase\n            .from('marketing_expenses')\n            .select('*')\n            .eq('user_id', user?.id)\n            .order('date', { ascending: false })\n        )\n      ]);\n\n      if (budgetsData.error) throw budgetsData.error;\n      if (expensesData.error) throw expensesData.error;\n\n      setBudgets(budgetsData.data || []);\n      setExpenses(expensesData.data || []);\n    } catch (err) {\n      console.error('Error loading budget data:', err);\n      setError('Failed to load budget data');\n      showError('Failed to load budget data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const calculatePeriodDates = (period: string) => {\n    const now = new Date();\n    const start = new Date(now.getFullYear(), now.getMonth(), 1); // Start of current month\n    const end = new Date(start);\n\n    switch (period) {\n      case 'monthly':\n        end.setMonth(end.getMonth() + 1);\n        break;\n      case 'quarterly':\n        end.setMonth(end.getMonth() + 3);\n        break;\n      case 'yearly':\n        end.setFullYear(end.getFullYear() + 1);\n        break;\n      default:\n        throw new Error('Invalid period');\n    }\n    end.setDate(end.getDate() - 1); // Last day of the period\n\n    return {\n      period_start: start.toISOString().split('T')[0],\n      period_end: end.toISOString().split('T')[0]\n    };\n  };\n\n  const addBudget = async (\n    category: string,\n    amount: number,\n    period: string\n  ) => {\n    try {\n      const { period_start, period_end } = calculatePeriodDates(period);\n\n      const { data, error } = await retryOperation(() =>\n        supabase\n          .from('marketing_budgets')\n          .insert({\n            category,\n            amount,\n            period,\n            period_start,\n            period_end,\n            user_id: user?.id\n          })\n          .select()\n          .single()\n      );\n\n      if (error) throw error;\n      setBudgets(prev => [data, ...prev]);\n      showSuccess('Budget added successfully');\n      return data;\n    } catch (err) {\n      console.error('Error adding budget:', err);\n      showError('Failed to add budget. Please try again.');\n      throw err;\n    }\n  };\n\n  const addExpense = async (\n    category: string,\n    amount: number,\n    description: string,\n    date: Date\n  ) => {\n    try {\n      const { data, error } = await retryOperation(() =>\n        supabase\n          .from('marketing_expenses')\n          .insert({\n            category,\n            amount,\n            description,\n            date: date.toISOString().split('T')[0],\n            user_id: user?.id\n          })\n          .select()\n          .single()\n      );\n\n      if (error) throw error;\n      setExpenses(prev => [data, ...prev]);\n      showSuccess('Expense added successfully');\n      return data;\n    } catch (err) {\n      console.error('Error adding expense:', err);\n      showError('Failed to add expense. Please try again.');\n      throw err;\n    }\n  };\n\n  return {\n    budgets,\n    expenses,\n    loading,\n    error,\n    addBudget,\n    addExpense,\n    refresh: loadData\n  };\n}","import { useState } from 'react';\nimport { useAI } from '../hooks/useAI';\nimport {\n  TrendingUp,\n  DollarSign,\n  Target,\n  Brain,\n  AlertCircle,\n  ArrowUp,\n  ArrowDown,\n  Minus\n} from 'lucide-react';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n  AreaChart,\n  Area,\n  PieChart,\n  Pie,\n  Cell,\n  BarChart,\n  Bar\n} from 'recharts';\n\ninterface BudgetAnalyticsProps {\n  budgets: any[];\n  expenses: any[];\n  onInsightGenerated?: (insights: any) => void;\n}\n\nconst COLORS = ['#f97316', '#3b82f6', '#10b981', '#8b5cf6', '#f59e0b'];\n\nexport function BudgetAnalytics({ budgets, expenses, onInsightGenerated }: BudgetAnalyticsProps) {\n  const { optimizeMarketingBudget } = useAI();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [analysis, setAnalysis] = useState<any>(null);\n\n  const totalBudget = budgets.reduce((sum, b) => sum + b.amount, 0);\n  const totalExpenses = expenses.reduce((sum, e) => sum + e.amount, 0);\n  const utilizationRate = totalBudget > 0 ? (totalExpenses / totalBudget) * 100 : 0;\n\n  const handleAnalyze = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const result = await optimizeMarketingBudget(totalBudget, [\n        'Maximize ROI',\n        'Optimize allocation',\n        'Predict trends'\n      ]);\n\n      setAnalysis(result);\n      onInsightGenerated?.(result);\n    } catch (err) {\n      console.error('Analysis error:', err);\n      setError('Failed to analyze budget data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Calculate budget allocation data\n  const allocationData = budgets.map(budget => ({\n    name: budget.category,\n    value: budget.amount\n  }));\n\n  // Calculate utilization data\n  const utilizationData = [\n    { name: 'Used', value: totalExpenses },\n    { name: 'Remaining', value: Math.max(0, totalBudget - totalExpenses) }\n  ];\n\n  // Generate prediction data\n  const generatePredictionData = () => {\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'];\n    const baseValue = totalExpenses / 6; // Average monthly expense\n    \n    return months.map(month => ({\n      name: month,\n      actual: baseValue * (0.9 + Math.random() * 0.2),\n      predicted: baseValue * (1 + Math.random() * 0.3)\n    }));\n  };\n\n  const predictionData = generatePredictionData();\n\n  // Calculate ROI data\n  const roiData = expenses.map(expense => ({\n    category: expense.category,\n    amount: expense.amount,\n    roi: ((Math.random() * 2) + 1) * expense.amount // Simulated ROI\n  }));\n\n  return (\n    <div className=\"space-y-6\">\n      {error && (\n        <div className=\"bg-red-500/10 border border-red-500/50 text-red-500 rounded-lg p-4 flex items-start gap-2\">\n          <AlertCircle className=\"w-5 h-5 mt-0.5\" />\n          <span>{error}</span>\n        </div>\n      )}\n\n      {/* ROI Analysis */}\n      <div className=\"bg-primary-700/50 rounded-xl p-6\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <div className=\"flex items-center gap-2\">\n            <TrendingUp className=\"w-5 h-5 text-accent-500\" />\n            <h3 className=\"text-lg font-medium text-white\">ROI Analysis</h3>\n          </div>\n          <button\n            onClick={handleAnalyze}\n            disabled={loading}\n            className=\"btn-primary py-2 px-4 flex items-center gap-2\"\n          >\n            <Brain className=\"w-4 h-4\" />\n            {loading ? 'Analyzing...' : 'Analyze ROI'}\n          </button>\n        </div>\n\n        <div className=\"h-64\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <BarChart data={roiData}>\n              <XAxis dataKey=\"category\" stroke=\"#94a3b8\" />\n              <YAxis stroke=\"#94a3b8\" />\n              <Tooltip\n                contentStyle={{\n                  backgroundColor: '#1e293b',\n                  border: 'none',\n                  borderRadius: '0.5rem',\n                  color: '#fff'\n                }}\n              />\n              <Bar name=\"Spent\" dataKey=\"amount\" fill=\"#3b82f6\" />\n              <Bar name=\"Return\" dataKey=\"roi\" fill=\"#f97316\" />\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n      </div>\n\n      {/* Budget Allocation */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <div className=\"flex items-center gap-2 mb-6\">\n            <DollarSign className=\"w-5 h-5 text-accent-500\" />\n            <h3 className=\"text-lg font-medium text-white\">Budget Allocation</h3>\n          </div>\n\n          <div className=\"h-64\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <PieChart>\n                <Pie\n                  data={allocationData}\n                  dataKey=\"value\"\n                  nameKey=\"name\"\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  outerRadius={80}\n                  label\n                >\n                  {allocationData.map((entry, index) => (\n                    <Cell key={entry.name} fill={COLORS[index % COLORS.length]} />\n                  ))}\n                </Pie>\n                <Tooltip\n                  contentStyle={{\n                    backgroundColor: '#1e293b',\n                    border: 'none',\n                    borderRadius: '0.5rem',\n                    color: '#fff'\n                  }}\n                />\n              </PieChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n\n        {/* Budget Utilization */}\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <div className=\"flex items-center gap-2 mb-6\">\n            <Target className=\"w-5 h-5 text-accent-500\" />\n            <h3 className=\"text-lg font-medium text-white\">Budget Utilization</h3>\n          </div>\n\n          <div className=\"mb-4\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <span className=\"text-primary-300\">Utilization Rate</span>\n              <span className=\"text-white font-medium\">{utilizationRate.toFixed(1)}%</span>\n            </div>\n            <div className=\"h-3 bg-primary-600 rounded-full overflow-hidden\">\n              <div\n                className=\"h-full bg-accent-500 transition-all duration-500\"\n                style={{ width: `${utilizationRate}%` }}\n              />\n            </div>\n          </div>\n\n          <div className=\"h-48\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <PieChart>\n                <Pie\n                  data={utilizationData}\n                  dataKey=\"value\"\n                  nameKey=\"name\"\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  innerRadius={40}\n                  outerRadius={80}\n                  label\n                >\n                  <Cell fill=\"#f97316\" />\n                  <Cell fill=\"#3b82f6\" />\n                </Pie>\n                <Tooltip\n                  contentStyle={{\n                    backgroundColor: '#1e293b',\n                    border: 'none',\n                    borderRadius: '0.5rem',\n                    color: '#fff'\n                  }}\n                />\n              </PieChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n      </div>\n\n      {/* Future Predictions */}\n      <div className=\"bg-primary-700/50 rounded-xl p-6\">\n        <div className=\"flex items-center gap-2 mb-6\">\n          <Brain className=\"w-5 h-5 text-accent-500\" />\n          <h3 className=\"text-lg font-medium text-white\">AI-Powered Predictions</h3>\n        </div>\n\n        <div className=\"h-64\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <LineChart data={predictionData}>\n              <XAxis dataKey=\"name\" stroke=\"#94a3b8\" />\n              <YAxis stroke=\"#94a3b8\" />\n              <Tooltip\n                contentStyle={{\n                  backgroundColor: '#1e293b',\n                  border: 'none',\n                  borderRadius: '0.5rem',\n                  color: '#fff'\n                }}\n              />\n              <Line\n                type=\"monotone\"\n                dataKey=\"actual\"\n                stroke=\"#3b82f6\"\n                strokeWidth={2}\n                dot={{ fill: '#3b82f6' }}\n                name=\"Actual Spend\"\n              />\n              <Line\n                type=\"monotone\"\n                dataKey=\"predicted\"\n                stroke=\"#f97316\"\n                strokeWidth={2}\n                dot={{ fill: '#f97316' }}\n                name=\"Predicted Spend\"\n              />\n            </LineChart>\n          </ResponsiveContainer>\n        </div>\n      </div>\n\n      {/* AI Insights */}\n      {analysis && (\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <div className=\"flex items-center gap-2 mb-6\">\n            <Brain className=\"w-5 h-5 text-accent-500\" />\n            <h3 className=\"text-lg font-medium text-white\">AI Insights</h3>\n          </div>\n\n          <div className=\"grid gap-4\">\n            {analysis.recommendations?.map((recommendation: string, index: number) => (\n              <div\n                key={index}\n                className=\"flex items-start gap-3 bg-primary-600/50 rounded-lg p-4\"\n              >\n                <Brain className=\"w-5 h-5 text-accent-500 mt-0.5\" />\n                <div>\n                  <p className=\"text-white\">{recommendation}</p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}","import { useState } from 'react';\nimport { useBudget } from '../hooks/useBudget';\nimport { useAI } from '../hooks/useAI';\nimport { AIFeatureIndicator } from './AIFeatureIndicator';\nimport { BackButton } from './BackButton';\nimport { LoadingSpinner } from './LoadingSpinner';\nimport { EmptyState } from './EmptyState';\nimport { BudgetAnalytics } from './BudgetAnalytics';\nimport {\n  DollarSign,\n  Plus,\n  Calendar,\n  TrendingUp,\n  Target,\n  Clock,\n  AlertCircle,\n  Trash2,\n  Filter,\n  Settings,\n  X,\n  Sparkles\n} from 'lucide-react';\n\nexport function BudgetManager() {\n  const { budgets, expenses, loading, error, addBudget, addExpense } = useBudget();\n  const [showAddBudget, setShowAddBudget] = useState(false);\n  const [showAddExpense, setShowAddExpense] = useState(false);\n  \n  // Budget form state\n  const [category, setCategory] = useState('');\n  const [amount, setAmount] = useState('');\n  const [period, setPeriod] = useState('monthly');\n  \n  // Expense form state\n  const [expenseCategory, setExpenseCategory] = useState('');\n  const [expenseAmount, setExpenseAmount] = useState('');\n  const [expenseDescription, setExpenseDescription] = useState('');\n  const [expenseDate, setExpenseDate] = useState('');\n\n  const handleAddBudget = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      await addBudget(\n        category,\n        parseFloat(amount),\n        period\n      );\n      setShowAddBudget(false);\n      setCategory('');\n      setAmount('');\n      setPeriod('monthly');\n    } catch (err) {\n      console.error('Error adding budget:', err);\n    }\n  };\n\n  const handleAddExpense = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      await addExpense(\n        expenseCategory,\n        parseFloat(expenseAmount),\n        expenseDescription,\n        new Date(expenseDate)\n      );\n      setShowAddExpense(false);\n      setExpenseCategory('');\n      setExpenseAmount('');\n      setExpenseDescription('');\n      setExpenseDate('');\n    } catch (err) {\n      console.error('Error adding expense:', err);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-[400px] flex items-center justify-center\">\n        <LoadingSpinner size={32} />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <EmptyState\n        title=\"Error Loading Budget Data\"\n        message={error}\n        icon={<AlertCircle className=\"w-12 h-12 text-red-500 mx-auto mb-4\" />}\n      />\n    );\n  }\n\n  const totalBudget = budgets.reduce((sum, b) => sum + b.amount, 0);\n  const totalExpenses = expenses.reduce((sum, e) => sum + e.amount, 0);\n  const remainingBudget = Math.max(0, totalBudget - totalExpenses);\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center gap-4\">\n          <BackButton />\n          <h2 className=\"text-xl font-semibold text-white\">Budget Management</h2>\n          <AIFeatureIndicator feature=\"Budget Analytics\" />\n        </div>\n        <div className=\"flex gap-4\">\n          <button\n            onClick={() => setShowAddBudget(true)}\n            className=\"btn-primary py-2 px-4 flex items-center gap-2\"\n          >\n            <Plus className=\"w-4 h-4\" />\n            Add Budget\n          </button>\n          <button\n            onClick={() => setShowAddExpense(true)}\n            className=\"btn-primary py-2 px-4 flex items-center gap-2\"\n          >\n            <Plus className=\"w-4 h-4\" />\n            Add Expense\n          </button>\n        </div>\n      </div>\n\n      {/* Budget Overview */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <div className=\"flex items-center gap-2 mb-4\">\n            <DollarSign className=\"w-5 h-5 text-accent-500\" />\n            <h3 className=\"text-sm font-medium text-primary-200\">Total Budget</h3>\n          </div>\n          <p className=\"text-2xl font-bold text-white\">${totalBudget.toLocaleString()}</p>\n        </div>\n\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <div className=\"flex items-center gap-2 mb-4\">\n            <Target className=\"w-5 h-5 text-accent-500\" />\n            <h3 className=\"text-sm font-medium text-primary-200\">Total Expenses</h3>\n          </div>\n          <p className=\"text-2xl font-bold text-white\">${totalExpenses.toLocaleString()}</p>\n        </div>\n\n        <div className=\"bg-primary-700/50 rounded-xl p-6\">\n          <div className=\"flex items-center gap-2 mb-4\">\n            <TrendingUp className=\"w-5 h-5 text-accent-500\" />\n            <h3 className=\"text-sm font-medium text-primary-200\">Remaining Budget</h3>\n          </div>\n          <p className=\"text-2xl font-bold text-white\">${remainingBudget.toLocaleString()}</p>\n        </div>\n      </div>\n\n      {/* Budget Analytics */}\n      <BudgetAnalytics\n        budgets={budgets}\n        expenses={expenses}\n        onInsightGenerated={(insights) => {\n          console.log('AI Insights:', insights);\n        }}\n      />\n\n      {/* Add Budget Modal */}\n      {showAddBudget && (\n        <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center p-4\">\n          <div className=\"bg-primary-700 rounded-xl p-6 w-full max-w-md\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-medium text-white\">Add Budget</h3>\n              <button\n                onClick={() => setShowAddBudget(false)}\n                className=\"p-2 text-primary-300 hover:text-white transition-colors\"\n              >\n                <X className=\"w-5 h-5\" />\n              </button>\n            </div>\n\n            <form onSubmit={handleAddBudget} className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-primary-200\">\n                  Category\n                </label>\n                <input\n                  type=\"text\"\n                  value={category}\n                  onChange={(e) => setCategory(e.target.value)}\n                  className=\"mt-1 block w-full rounded-lg bg-primary-600 border-primary-500 text-white px-4 py-2\"\n                  required\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-primary-200\">\n                  Amount\n                </label>\n                <input\n                  type=\"number\"\n                  value={amount}\n                  onChange={(e) => setAmount(e.target.value)}\n                  className=\"mt-1 block w-full rounded-lg bg-primary-600 border-primary-500 text-white px-4 py-2\"\n                  min=\"0\"\n                  step=\"0.01\"\n                  required\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-primary-200\">\n                  Period\n                </label>\n                <select\n                  value={period}\n                  onChange={(e) => setPeriod(e.target.value)}\n                  className=\"mt-1 block w-full rounded-lg bg-primary-600 border-primary-500 text-white px-4 py-2\"\n                >\n                  <option value=\"monthly\">Monthly</option>\n                  <option value=\"quarterly\">Quarterly</option>\n                  <option value=\"yearly\">Yearly</option>\n                </select>\n              </div>\n\n              <div className=\"flex justify-end gap-4\">\n                <button\n                  type=\"button\"\n                  onClick={() => setShowAddBudget(false)}\n                  className=\"px-4 py-2 text-primary-300 hover:text-white transition-colors\"\n                >\n                  Cancel\n                </button>\n                <button type=\"submit\" className=\"btn-primary py-2 px-6\">\n                  Add Budget\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {/* Add Expense Modal */}\n      {showAddExpense && (\n        <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center p-4\">\n          <div className=\"bg-primary-700 rounded-xl p-6 w-full max-w-md\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-medium text-white\">Add Expense</h3>\n              <button\n                onClick={() => setShowAddExpense(false)}\n                className=\"p-2 text-primary-300 hover:text-white transition-colors\"\n              >\n                <X className=\"w-5 h-5\" />\n              </button>\n            </div>\n\n            <form onSubmit={handleAddExpense} className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-primary-200\">\n                  Category\n                </label>\n                <select\n                  value={expenseCategory}\n                  onChange={(e) => setExpenseCategory(e.target.value)}\n                  className=\"mt-1 block w-full rounded-lg bg-primary-600 border-primary-500 text-white px-4 py-2\"\n                  required\n                >\n                  <option value=\"\">Select a category</option>\n                  {budgets.map((budget) => (\n                    <option key={budget.id} value={budget.category}>\n                      {budget.category}\n                    </option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-primary-200\">\n                  Amount\n                </label>\n                <input\n                  type=\"number\"\n                  value={expenseAmount}\n                  onChange={(e) => setExpenseAmount(e.target.value)}\n                  className=\"mt-1 block w-full rounded-lg bg-primary-600 border-primary-500 text-white px-4 py-2\"\n                  min=\"0\"\n                  step=\"0.01\"\n                  required\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-primary-200\">\n                  Description\n                </label>\n                <input\n                  type=\"text\"\n                  value={expenseDescription}\n                  onChange={(e) => setExpenseDescription(e.target.value)}\n                  className=\"mt-1 block w-full rounded-lg bg-primary-600 border-primary-500 text-white px-4 py-2\"\n                  required\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-primary-200\">\n                  Date\n                </label>\n                <input\n                  type=\"date\"\n                  value={expenseDate}\n                  onChange={(e) => setExpenseDate(e.target.value)}\n                  className=\"mt-1 block w-full rounded-lg bg-primary-600 border-primary-500 text-white px-4 py-2\"\n                  required\n                />\n              </div>\n\n              <div className=\"flex justify-end gap-4\">\n                <button\n                  type=\"button\"\n                  onClick={() => setShowAddExpense(false)}\n                  className=\"px-4 py-2 text-primary-300 hover:text-white transition-colors\"\n                >\n                  Cancel\n                </button>\n                <button type=\"submit\" className=\"btn-primary py-2 px-6\">\n                  Add Expense\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {/* Budgets List */}\n      <div className=\"space-y-4\">\n        <h3 className=\"text-lg font-medium text-white\">Budgets</h3>\n        <div className=\"grid gap-4\">\n          {budgets.map((budget) => (\n            <div\n              key={budget.id}\n              className=\"bg-primary-700/50 rounded-xl p-4 flex items-center justify-between\"\n            >\n              <div>\n                <h4 className=\"font-medium text-white\">{budget.category}</h4>\n                <p className=\"text-sm text-primary-300\">\n                  ${budget.amount.toLocaleString()} ({budget.period})\n                </p>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <button className=\"p-2 text-primary-300 hover:text-white transition-colors\">\n                  <Settings className=\"w-4 h-4\" />\n                </button>\n                <button className=\"p-2 text-primary-300 hover:text-red-400 transition-colors\">\n                  <Trash2 className=\"w-4 h-4\" />\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Expenses List */}\n      <div className=\"space-y-4\">\n        <h3 className=\"text-lg font-medium text-white\">Recent Expenses</h3>\n        <div className=\"grid gap-4\">\n          {expenses.map((expense) => (\n            <div\n              key={expense.id}\n              className=\"bg-primary-700/50 rounded-xl p-4 flex items-center justify-between\"\n            >\n              <div>\n                <h4 className=\"font-medium text-white\">{expense.category}</h4>\n                <p className=\"text-sm text-primary-300\">{expense.description}</p>\n              </div>\n              <div className=\"flex items-center gap-4\">\n                <div className=\"text-right\">\n                  <p className=\"text-white font-medium\">\n                    ${expense.amount.toLocaleString()}\n                  </p>\n                  <p className=\"text-sm text-primary-300\">\n                    {new Date(expense.date).toLocaleDateString()}\n                  </p>\n                </div>\n                <button className=\"p-2 text-primary-300 hover:text-red-400 transition-colors\">\n                  <Trash2 className=\"w-4 h-4\" />\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}","import { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../hooks/useAuth';\n\nexport function AuthRequired({ children }: { children: React.ReactNode }) {\n  const { user, loading } = useAuth();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!loading && !user) {\n      navigate('/login', { replace: true });\n    }\n  }, [user, loading, navigate]);\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-primary-800 flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-t-2 border-accent-500\"></div>\n      </div>\n    );\n  }\n\n  if (!user) {\n    return null;\n  }\n\n  return <>{children}</>;\n}","import { AlertCircle } from 'lucide-react';\n\ninterface ErrorStateProps {\n  title?: string;\n  message: string;\n  onRetry?: () => void;\n}\n\nexport function ErrorState({ \n  title = 'Something went wrong', \n  message, \n  onRetry \n}: ErrorStateProps) {\n  return (\n    <div className=\"flex flex-col items-center justify-center p-6 text-center\">\n      <AlertCircle className=\"w-12 h-12 text-red-500 mb-4\" />\n      <h3 className=\"text-lg font-medium text-white mb-2\">{title}</h3>\n      <p className=\"text-primary-300 mb-4 max-w-md\">{message}</p>\n      {onRetry && (\n        <button \n          onClick={onRetry}\n          className=\"btn-primary\"\n        >\n          Try Again\n        </button>\n      )}\n    </div>\n  );\n}","import { Routes, Route, Navigate } from 'react-router-dom';\nimport { Login } from './pages/Login';\nimport { Signup } from './pages/Signup';\nimport { Landing } from './pages/Landing';\nimport { Dashboard } from './pages/Dashboard';\nimport { AuthCallback } from './pages/AuthCallback';\nimport { SeoTrackingManager } from './components/SeoTrackingManager';\nimport { EmailCampaignManager } from './components/EmailCampaignManager';\nimport { SocialMediaDashboard } from './components/SocialMediaDashboard';\nimport { BudgetManager } from './components/BudgetManager';\nimport { CustomerManager } from './components/CustomerManager';\nimport { AnalyticsDashboard } from './components/AnalyticsDashboard';\nimport { AuthRequired } from './components/AuthRequired';\nimport { useAuth } from './hooks/useAuth';\nimport { ErrorBoundary } from './components/ErrorBoundary';\nimport { LoadingSpinner } from './components/LoadingSpinner';\nimport { ErrorState } from './components/ErrorState';\nimport { Toaster } from 'react-hot-toast';\n\nfunction App() {\n  const { user } = useAuth();\n\n  return (\n    <>\n      <ErrorBoundary>\n        <Routes>\n          {/* Public Routes */}\n          <Route path=\"/\" element={user ? <Navigate to=\"/dashboard\" /> : <Landing />} />\n          <Route path=\"/login\" element={user ? <Navigate to=\"/dashboard\" /> : <Login />} />\n          <Route path=\"/signup\" element={user ? <Navigate to=\"/dashboard\" /> : <Signup />} />\n          <Route path=\"/auth/callback\" element={<AuthCallback />} />\n          \n          {/* Protected Routes */}\n          <Route path=\"/dashboard\" element={\n            <AuthRequired>\n              <ErrorBoundary fallback={<ErrorState message=\"Failed to load dashboard\" />}>\n                <Dashboard />\n              </ErrorBoundary>\n            </AuthRequired>\n          } />\n          \n          <Route path=\"/analytics\" element={\n            <AuthRequired>\n              <ErrorBoundary fallback={<ErrorState message=\"Failed to load analytics\" />}>\n                <AnalyticsDashboard />\n              </ErrorBoundary>\n            </AuthRequired>\n          } />\n          \n          <Route path=\"/customers\" element={\n            <AuthRequired>\n              <ErrorBoundary fallback={<ErrorState message=\"Failed to load customer management\" />}>\n                <CustomerManager />\n              </ErrorBoundary>\n            </AuthRequired>\n          } />\n          \n          <Route path=\"/seo\" element={\n            <AuthRequired>\n              <ErrorBoundary fallback={<ErrorState message=\"Failed to load SEO tracking\" />}>\n                <SeoTrackingManager />\n              </ErrorBoundary>\n            </AuthRequired>\n          } />\n          \n          <Route path=\"/email\" element={\n            <AuthRequired>\n              <ErrorBoundary fallback={<ErrorState message=\"Failed to load email campaigns\" />}>\n                <EmailCampaignManager />\n              </ErrorBoundary>\n            </AuthRequired>\n          } />\n          \n          <Route path=\"/social\" element={\n            <AuthRequired>\n              <ErrorBoundary fallback={<ErrorState message=\"Failed to load social media dashboard\" />}>\n                <SocialMediaDashboard />\n              </ErrorBoundary>\n            </AuthRequired>\n          } />\n          \n          <Route path=\"/budget\" element={\n            <AuthRequired>\n              <ErrorBoundary fallback={<ErrorState message=\"Failed to load budget manager\" />}>\n                <BudgetManager />\n              </ErrorBoundary>\n            </AuthRequired>\n          } />\n\n          {/* Catch-all route */}\n          <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n        </Routes>\n      </ErrorBoundary>\n      <Toaster position=\"top-right\" />\n    </>\n  );\n}\n\nexport default App;","import { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\nimport { AuthProvider } from './contexts/AuthContext';\nimport { ErrorBoundary } from './components/ErrorBoundary';\nimport { Toaster } from 'react-hot-toast';\nimport App from './App';\nimport './index.css';\n\ncreateRoot(document.getElementById('root')!).render(\n  <StrictMode>\n    <ErrorBoundary>\n      <BrowserRouter>\n        <AuthProvider>\n          <App />\n          <Toaster position=\"top-right\" />\n        </AuthProvider>\n      </BrowserRouter>\n    </ErrorBoundary>\n  </StrictMode>\n);"],"names":["f","require$$0","k","l","m","n","p","q","c","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","createRoot","t","a","o","r","s","i","u","j","W","F","S","J","U","A","P","Q","D","H","Y","G","x","K","Z","O","$","L","E","R","te","I","oe","re","ee","ie","ae","V","se","ce","N","pe","_","ne","me","w","ue","le","de","fe","M","y.createElement","Te","ye","ge","he","xe","B","be","Se","z","C","l.memo","l.createElement","l.Fragment","Pe","T.createElement","ve","T.useCallback","Ee","Re","Ae","v","De","kt","showSuccess","message","toast","showError","supabaseUrl","supabaseAnonKey","supabase","createClient","MAX_RETRIES","INITIAL_BACKOFF","isRetryableError","error","retryableErrors","code","retryOperation","operation","retries","backoff","resolve","event","session","AuthContext","createContext","AuthProvider","children","user","setUser","useState","setSession","loading","setLoading","useEffect","mounted","initializeAuth","subscription","_event","signIn","email","password","normalizedEmail","signUp","existingUser","signOut","jsx","ErrorBoundary","Component","errorInfo","jsxs","AlertTriangle","useAuth","context","useContext","Login","setEmail","setPassword","setError","navigate","useNavigate","handleSubmit","err","Zap","Link","Signup","Landing","ArrowRight","BarChart3","FileText","Users","Share2","useCustomers","customers","setCustomers","loadCustomers","data","fetchError","name","source","insertError","prev","id","updates","updateError","deleteError","useAI","prompt","type","options","customerId","results","AIFeatureIndicator","feature","className","Sparkles","BackButton","useLocation","ArrowLeft","LoadingSpinner","size","Loader2","EmptyState","title","icon","action","FolderOpen","CustomerProfile","onClose","updateCustomer","analyzeCustomerData","analyzing","setAnalyzing","insights","setInsights","customer","handleAnalyze","User","Mail","Phone","_a","MapPin","_b","Calendar","Tag","_d","_c","tag","index","Star","DollarSign","_e","TrendingUp","_f","_g","Brain","rec","ResponsiveContainer","LineChart","XAxis","YAxis","Tooltip","Line","MessageCircle","_i","_h","interaction","COLORS","CustomerAnalytics","totalCustomers","activeCustomers","totalRevenue","sum","avgLifetimeValue","acquisitionData","acc","month","segmentData","Target","count","PieChart","Pie","value","entry","Cell","trend","Clock","CustomerSegments","onSegmentSelect","selectedSegment","setSelectedSegment","showCreateSegment","setShowCreateSegment","segments","date","diffTime","handleSegmentSelect","segmentId","Plus","segment","Filter","CustomerWorkflow","showCreateWorkflow","setShowCreateWorkflow","Settings","CustomerFeedback","selectedPeriod","setSelectedPeriod","selectedCategory","setSelectedCategory","showAnalysis","setShowAnalysis","feedback","averageRating","item","positiveCount","ThumbsUp","BarChart","Bar","AlertCircle","CustomerImport","onImport","file","setFile","preview","setPreview","importing","setImporting","fileInputRef","useRef","handleFileSelect","selectedFile","parseCSV","reader","lines","headers","line","values","obj","header","handleImport","Upload","row","Fragment","Check","CustomerLoyalty","selectedTier","setSelectedTier","showCreateProgram","setShowCreateProgram","tiers","Shield","Crown","rewards","Gift","Award","tier","benefit","reward","color","CustomerManager","addCustomer","deleteCustomer","showAddCustomer","setShowAddCustomer","showImport","setShowImport","selectedCustomer","setSelectedCustomer","activeTab","setActiveTab","renderActiveTab","Edit2","Trash2","formData","useContent","items","setItems","loadContent","content","contentType","tags","metadata","ContentManager","createContent","updateContent","showCreateForm","setShowCreateForm","setTitle","setContent","setContentType","setTags","useSocialAnalytics","analytics","setAnalytics","summary","setSummary","loadAnalytics","calculateSummary","platformBreakdown","totalEngagement","totalImpressions","platform","timePerformance","calculateTimePerformance","recentTrends","calculateRecentTrends","timeSlots","timeSlot","time","stats","timeA","timeB","dailyStats","SocialAnalyticsDashboard","Eye","AreaChart","Area","ChartIcon","Heart","AnalyticsDashboard","useNotifications","notifications","setNotifications","unreadCount","setUnreadCount","loadNotifications","NotificationsPanel","markAsRead","markAllAsRead","deleteNotification","isOpen","setIsOpen","Bell","notification","DEFAULT_SETTINGS","useSettings","settings","setSettings","existingSettings","newSettings","createError","UserSettings","updateSettings","Sun","Moon","Dashboard","renderContent","Search","AuthCallback","handleCallback","storedState","params","state","dbError","useSeoTracking","trackings","setTrackings","loadTrackings","keyword","url","track","ranking","historyError","useSeoEnhanced","competitors","setCompetitors","historicalData","setHistoricalData","backlinks","setBacklinks","pageMetrics","setPageMetrics","loadData","competitorsData","backlinksData","metricsData","keywordId","competitorUrl","sourceUrl","targetUrl","domainAuthority","metrics","SeoAudit","onAudit","score","setScore","issues","setIssues","handleAudit","Activity","issue","CheckCircle","page","useSeoResearch","keywordResearch","setKeywordResearch","contentSuggestions","setContentSuggestions","keywordData","suggestionData","searchVolume","difficulty","cpc","relatedKeywords","targetKeyword","contentScore","suggestions","KeywordResearch","onKeywordSelect","addKeywordResearch","searchTerm","setSearchTerm","selectedKeyword","setSelectedKeyword","generateRelatedKeywords","prefixes","suffixes","prefix","suffix","TechnicalSeo","onIssueFixed","scanning","setScanning","selectedTab","setSelectedTab","handleScan","renderTabContent","Smartphone","Code","Download","RefreshCw","SeoTrackingManager","addKeyword","updateKeyword","updateRanking","deleteKeyword","showAddKeyword","setShowAddKeyword","setKeyword","setUrl","ExternalLink","ArrowUp","ArrowDown","Minus","useEmailCampaigns","campaigns","setCampaigns","templates","setTemplates","subscribers","setSubscribers","campaignsSubscription","campaignsData","templatesData","subscribersData","analyticsData","analyticsMap","subject","templateId","scheduledFor","campaignId","status","campaign","useEmailAutomation","createCampaign","isScheduling","setIsScheduling","frequency","timeOfDay","now","scheduledDate","hours","minutes","EmailBuilder","onSave","onAIAssist","setSubject","selectedTemplate","setSelectedTemplate","generating","setGenerating","generateContent","handleAIAssist","result","handleSave","template","Type","ImageIcon","Send","EmailAnalytics","onAnalyze","insight","LeadManager","onSegment","CampaignSuggestions","businessType","onSelect","selectedSuggestion","setSelectedSuggestion","suggestion","TemplateLibrary","onCreateTemplate","EmailCampaignManager","generateEmailContent","analyzePerformance","activeView","setActiveView","showNewCampaign","setShowNewCampaign","renderActiveView","criteria","useSocialMedia","accounts","setAccounts","posts","setPosts","accountsData","postsData","accountsSubscription","postsSubscription","accountName","accountId","mediaUrls","account","postId","publishedAt","post","RANDOM_TAGS","UNSPLASH_TOPICS","usePostAutomation","createPost","generateSocialContent","getOptimalPostingTimes","generatePostContent","topics","prompts","optimalTimes","totalPosts","scheduledPosts","day","dayTimes","scheduleDate","hashtags","images","SOCIAL_CONFIGS","connectSocialAccount","config","SocialAccountConnect","onSuccess","onError","connecting","setConnecting","connectingPlatform","setConnectingPlatform","handleConnect","errorMessage","Link2","Twitter","Facebook","Instagram","Linkedin","SocialMediaDashboard","addAccount","scheduleAutomatedPosts","showConnectAccounts","setShowConnectAccounts","showCreatePost","setShowCreatePost","showAutoSchedule","setShowAutoSchedule","selectedAccountId","setSelectedAccountId","connectionError","setConnectionError","duration","setDuration","postsPerDay","setPostsPerDay","setTopics","includeImages","setIncludeImages","includeHashtags","setIncludeHashtags","handleAutoSchedule","useBudget","budgets","setBudgets","expenses","setExpenses","budgetsData","expensesData","calculatePeriodDates","period","start","end","category","amount","period_start","period_end","description","BudgetAnalytics","onInsightGenerated","optimizeMarketingBudget","analysis","setAnalysis","totalBudget","totalExpenses","utilizationRate","allocationData","budget","utilizationData","predictionData","months","baseValue","roiData","expense","recommendation","BudgetManager","addBudget","addExpense","showAddBudget","setShowAddBudget","showAddExpense","setShowAddExpense","setCategory","setAmount","setPeriod","expenseCategory","setExpenseCategory","expenseAmount","setExpenseAmount","expenseDescription","setExpenseDescription","expenseDate","setExpenseDate","handleAddBudget","handleAddExpense","remainingBudget","AuthRequired","ErrorState","onRetry","App","Routes","Route","Navigate","Toaster","StrictMode","BrowserRouter"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}